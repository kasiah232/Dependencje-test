(function (factory) {
  if (typeof define === 'function' && define.amd)
    define(['exports', './kotlin-kotlin-stdlib.js', './kotlin-js.js'], factory);
  else if (typeof exports === 'object')
    factory(module.exports, require('./kotlin-kotlin-stdlib.js'), require('./kotlin-js.js'));
  else {
    if (typeof globalThis['kotlin-kotlin-stdlib'] === 'undefined') {
      throw new Error("Error loading module 'antlr-kotlin-antlr-kotlin-runtime'. Its dependency 'kotlin-kotlin-stdlib' was not found. Please, check whether 'kotlin-kotlin-stdlib' is loaded prior to 'antlr-kotlin-antlr-kotlin-runtime'.");
    }
    if (typeof globalThis['kotlin-js'] === 'undefined') {
      throw new Error("Error loading module 'antlr-kotlin-antlr-kotlin-runtime'. Its dependency 'kotlin-js' was not found. Please, check whether 'kotlin-js' is loaded prior to 'antlr-kotlin-antlr-kotlin-runtime'.");
    }
    globalThis['antlr-kotlin-antlr-kotlin-runtime'] = factory(typeof globalThis['antlr-kotlin-antlr-kotlin-runtime'] === 'undefined' ? {} : globalThis['antlr-kotlin-antlr-kotlin-runtime'], globalThis['kotlin-kotlin-stdlib'], globalThis['kotlin-js']);
  }
}(function (_, kotlin_kotlin, kotlin_org_jetbrains_kotlin_wrappers_kotlin_js) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var numberToChar = kotlin_kotlin.$_$.e4;
  var minOrNull = kotlin_kotlin.$_$.y2;
  var NoSuchElementException_init_$Create$ = kotlin_kotlin.$_$.x;
  var protoOf = kotlin_kotlin.$_$.i4;
  var maxOrNull = kotlin_kotlin.$_$.x2;
  var initMetadataForObject = kotlin_kotlin.$_$.a4;
  var println = kotlin_kotlin.$_$.j3;
  var Unit_instance = kotlin_kotlin.$_$.o1;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.r;
  var toHexString = kotlin_kotlin.$_$.m5;
  var Builder = kotlin_kotlin.$_$.v4;
  var Pair = kotlin_kotlin.$_$.w5;
  var charSequenceGet = kotlin_kotlin.$_$.o3;
  var Char__toInt_impl_vasixd = kotlin_kotlin.$_$.h1;
  var VOID = kotlin_kotlin.$_$.c;
  var initMetadataForClass = kotlin_kotlin.$_$.w3;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.d;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.u;
  var AssertionError_init_$Create$ = kotlin_kotlin.$_$.o;
  var isInterface = kotlin_kotlin.$_$.d4;
  var IndexOutOfBoundsException_init_$Create$ = kotlin_kotlin.$_$.w;
  var ensureNotNull = kotlin_kotlin.$_$.a6;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.n;
  var initMetadataForInterface = kotlin_kotlin.$_$.y3;
  var initMetadataForCompanion = kotlin_kotlin.$_$.x3;
  var objectCreate = kotlin_kotlin.$_$.h4;
  var replace = kotlin_kotlin.$_$.g5;
  var THROW_CCE = kotlin_kotlin.$_$.y5;
  var UnsupportedOperationException_init_$Create$ = kotlin_kotlin.$_$.c1;
  var RuntimeException = kotlin_kotlin.$_$.x5;
  var RuntimeException_init_$Init$ = kotlin_kotlin.$_$.b1;
  var captureStack = kotlin_kotlin.$_$.m3;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.e1;
  var toString = kotlin_kotlin.$_$.i1;
  var getKClassFromExpression = kotlin_kotlin.$_$.a;
  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.e;
  var asReversed = kotlin_kotlin.$_$.c2;
  var RuntimeException_init_$Init$_0 = kotlin_kotlin.$_$.z;
  var HashMap_init_$Create$ = kotlin_kotlin.$_$.g;
  var listOf = kotlin_kotlin.$_$.w2;
  var ArrayList_init_$Create$_1 = kotlin_kotlin.$_$.f;
  var indexOf = kotlin_kotlin.$_$.z4;
  var isHighSurrogate = kotlin_kotlin.$_$.c5;
  var fillArrayVal = kotlin_kotlin.$_$.s3;
  var copyOf = kotlin_kotlin.$_$.k2;
  var charSequenceLength = kotlin_kotlin.$_$.p3;
  var isUpperCase = kotlin_kotlin.$_$.d5;
  var isArray = kotlin_kotlin.$_$.b4;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.j;
  var equals = kotlin_kotlin.$_$.r3;
  var toString_0 = kotlin_kotlin.$_$.j4;
  var hashCode = kotlin_kotlin.$_$.v3;
  var KtSet = kotlin_kotlin.$_$.z1;
  var Collection = kotlin_kotlin.$_$.s1;
  var UnsupportedOperationException_init_$Create$_0 = kotlin_kotlin.$_$.d1;
  var IllegalStateException_init_$Create$_0 = kotlin_kotlin.$_$.t;
  var noWhenBranchMatchedException = kotlin_kotlin.$_$.c6;
  var copyOfRange = kotlin_kotlin.$_$.i2;
  var enumEntries = kotlin_kotlin.$_$.i3;
  var Enum = kotlin_kotlin.$_$.s5;
  var contentEquals = kotlin_kotlin.$_$.g2;
  var contentEquals_0 = kotlin_kotlin.$_$.f2;
  var toString_1 = kotlin_kotlin.$_$.d6;
  var HashSet_init_$Create$ = kotlin_kotlin.$_$.h;
  var get_lastIndex = kotlin_kotlin.$_$.v2;
  var Exception = kotlin_kotlin.$_$.t5;
  var toBoolean = kotlin_kotlin.$_$.j5;
  var joinToString = kotlin_kotlin.$_$.u2;
  var copyToArray = kotlin_kotlin.$_$.m2;
  var copyOf_0 = kotlin_kotlin.$_$.l2;
  var StringBuilder = kotlin_kotlin.$_$.w4;
  var Comparable = kotlin_kotlin.$_$.q5;
  var LinkedHashSet_init_$Create$ = kotlin_kotlin.$_$.l;
  var asList = kotlin_kotlin.$_$.b2;
  var getStringHashCode = kotlin_kotlin.$_$.u3;
  var getKClass = kotlin_kotlin.$_$.b;
  var FunctionAdapter = kotlin_kotlin.$_$.k3;
  var Comparator = kotlin_kotlin.$_$.r5;
  var compareValues = kotlin_kotlin.$_$.f3;
  var sortWith = kotlin_kotlin.$_$.z2;
  var numberToInt = kotlin_kotlin.$_$.f4;
  var arrayIterator = kotlin_kotlin.$_$.l3;
  var arrayCopy = kotlin_kotlin.$_$.a2;
  var asJsReadonlyMapView = kotlin_kotlin.$_$.v1;
  var KtMutableMap = kotlin_kotlin.$_$.y1;
  var RuntimeException_init_$Create$ = kotlin_kotlin.$_$.y;
  var IndexOutOfBoundsException_init_$Create$_0 = kotlin_kotlin.$_$.v;
  var fill = kotlin_kotlin.$_$.p2;
  var joinToString_0 = kotlin_kotlin.$_$.s2;
  var RuntimeException_init_$Create$_0 = kotlin_kotlin.$_$.a1;
  var StringBuilder_init_$Create$_0 = kotlin_kotlin.$_$.m;
  var toCharArray = kotlin_kotlin.$_$.k5;
  var MutableEntry = kotlin_kotlin.$_$.x1;
  var AbstractMutableSet = kotlin_kotlin.$_$.q1;
  var iteratorFor = kotlin_org_jetbrains_kotlin_wrappers_kotlin_js.$_$.b;
  var iteratorFor_0 = kotlin_org_jetbrains_kotlin_wrappers_kotlin_js.$_$.a;
  var AbstractMutableCollection = kotlin_kotlin.$_$.p1;
  //endregion
  //region block: pre-declaration
  initMetadataForObject(Collections, 'Collections');
  initMetadataForObject(StdPrintStream, 'StdPrintStream');
  initMetadataForObject(ErrPrintStream, 'ErrPrintStream');
  initMetadataForObject(System, 'System');
  initMetadataForClass(AbstractCharStreams, 'AbstractCharStreams');
  initMetadataForClass(BaseErrorListener, 'BaseErrorListener', BaseErrorListener);
  initMetadataForClass(BufferedTokenStream, 'BufferedTokenStream');
  initMetadataForInterface(CharStream, 'CharStream');
  initMetadataForCompanion(Companion);
  initMetadataForInterface(WritableToken, 'WritableToken');
  initMetadataForClass(CommonToken, 'CommonToken', VOID, VOID, [WritableToken]);
  initMetadataForCompanion(Companion_0);
  initMetadataForClass(CommonTokenFactory, 'CommonTokenFactory', CommonTokenFactory);
  initMetadataForClass(CommonTokenStream, 'CommonTokenStream', VOID, BufferedTokenStream);
  initMetadataForCompanion(Companion_1);
  initMetadataForClass(ConsoleErrorListener, 'ConsoleErrorListener', ConsoleErrorListener, BaseErrorListener);
  initMetadataForClass(DefaultErrorStrategy, 'DefaultErrorStrategy', DefaultErrorStrategy);
  initMetadataForObject(DummyTokenStream, 'DummyTokenStream');
  initMetadataForClass(EmptyStackException, 'EmptyStackException', EmptyStackException, RuntimeException);
  initMetadataForCompanion(Companion_2);
  initMetadataForClass(RecognitionException, 'RecognitionException', VOID, RuntimeException);
  initMetadataForClass(FailedPredicateException, 'FailedPredicateException', VOID, RecognitionException);
  initMetadataForClass(InputMismatchException, 'InputMismatchException', VOID, RecognitionException);
  initMetadataForCompanion(Companion_3);
  initMetadataForClass(Recognizer, 'Recognizer');
  initMetadataForClass(Lexer, 'Lexer', VOID, Recognizer);
  initMetadataForClass(LexerNoViableAltException, 'LexerNoViableAltException', VOID, RecognitionException);
  initMetadataForClass(NoViableAltException, 'NoViableAltException', VOID, RecognitionException);
  initMetadataForClass(Parser, 'Parser', VOID, Recognizer);
  initMetadataForCompanion(Companion_4);
  initMetadataForClass(RuleContext, 'RuleContext', RuleContext_init_$Create$);
  initMetadataForClass(ParserRuleContext, 'ParserRuleContext', ParserRuleContext_init_$Create$, RuleContext);
  initMetadataForClass(ProxyErrorListener, 'ProxyErrorListener');
  initMetadataForCompanion(Companion_5);
  initMetadataForObject(RuntimeMetaData, 'RuntimeMetaData');
  initMetadataForClass(StringCharStream, 'StringCharStream', VOID, VOID, [CharStream]);
  initMetadataForCompanion(Companion_6);
  initMetadataForClass(VocabularyImpl, 'VocabularyImpl');
  initMetadataForCompanion(Companion_7);
  initMetadataForClass(ATN, 'ATN');
  initMetadataForCompanion(Companion_8);
  initMetadataForClass(ATNConfig, 'ATNConfig');
  initMetadataForClass(Array2DHashSet, 'Array2DHashSet', Array2DHashSet, VOID, [KtSet, Collection]);
  initMetadataForClass(AbstractConfigHashSet, 'AbstractConfigHashSet', VOID, Array2DHashSet);
  initMetadataForClass(ConfigHashSet, 'ConfigHashSet', ConfigHashSet, AbstractConfigHashSet);
  initMetadataForClass(AbstractEqualityComparator, 'AbstractEqualityComparator');
  initMetadataForObject(ConfigEqualityComparator, 'ConfigEqualityComparator', VOID, AbstractEqualityComparator);
  initMetadataForClass(ATNConfigSet, 'ATNConfigSet', ATNConfigSet, VOID, [KtSet, Collection]);
  initMetadataForCompanion(Companion_9);
  initMetadataForClass(ATNDeserializationOptions, 'ATNDeserializationOptions', ATNDeserializationOptions_init_$Create$);
  initMetadataForCompanion(Companion_10);
  initMetadataForClass(ATNDeserializer, 'ATNDeserializer', ATNDeserializer);
  initMetadataForCompanion(Companion_11);
  initMetadataForClass(ATNSimulator, 'ATNSimulator');
  initMetadataForCompanion(Companion_12);
  initMetadataForClass(ATNState, 'ATNState');
  initMetadataForClass(ATNType, 'ATNType', VOID, Enum);
  initMetadataForClass(Transition, 'Transition');
  initMetadataForClass(AbstractPredicateTransition, 'AbstractPredicateTransition', VOID, Transition);
  initMetadataForClass(ActionTransition, 'ActionTransition', VOID, Transition);
  initMetadataForClass(PredictionContext, 'PredictionContext');
  initMetadataForClass(ArrayPredictionContext, 'ArrayPredictionContext', VOID, PredictionContext);
  initMetadataForClass(AtomTransition, 'AtomTransition', VOID, Transition);
  initMetadataForClass(DecisionState, 'DecisionState', VOID, ATNState);
  initMetadataForClass(BlockStartState, 'BlockStartState', VOID, DecisionState);
  initMetadataForClass(BasicBlockStartState, 'BasicBlockStartState', BasicBlockStartState, BlockStartState);
  initMetadataForClass(BasicState, 'BasicState', BasicState, ATNState);
  initMetadataForClass(BlockEndState, 'BlockEndState', BlockEndState, ATNState);
  initMetadataForClass(SingletonPredictionContext, 'SingletonPredictionContext', VOID, PredictionContext);
  initMetadataForObject(EmptyPredictionContext, 'EmptyPredictionContext', VOID, SingletonPredictionContext);
  initMetadataForClass(EpsilonTransition, 'EpsilonTransition', VOID, Transition);
  initMetadataForCompanion(Companion_13);
  initMetadataForClass(LL1Analyzer, 'LL1Analyzer');
  initMetadataForClass(LexerATNConfig, 'LexerATNConfig', VOID, ATNConfig);
  initMetadataForCompanion(Companion_14);
  initMetadataForClass(SimState, 'SimState', SimState);
  initMetadataForClass(LexerATNSimulator, 'LexerATNSimulator', VOID, ATNSimulator);
  initMetadataForCompanion(Companion_15);
  initMetadataForClass(LexerActionExecutor, 'LexerActionExecutor');
  initMetadataForClass(LexerActionType, 'LexerActionType', VOID, Enum);
  initMetadataForClass(LexerChannelAction, 'LexerChannelAction');
  initMetadataForClass(LexerCustomAction, 'LexerCustomAction');
  initMetadataForClass(LexerIndexedCustomAction, 'LexerIndexedCustomAction');
  initMetadataForClass(LexerModeAction, 'LexerModeAction');
  initMetadataForObject(LexerMoreAction, 'LexerMoreAction');
  initMetadataForObject(LexerPopModeAction, 'LexerPopModeAction');
  initMetadataForClass(LexerPushModeAction, 'LexerPushModeAction');
  initMetadataForObject(LexerSkipAction, 'LexerSkipAction');
  initMetadataForClass(LexerTypeAction, 'LexerTypeAction');
  initMetadataForClass(LoopEndState, 'LoopEndState', LoopEndState, ATNState);
  initMetadataForClass(SetTransition, 'SetTransition', VOID, Transition);
  initMetadataForClass(NotSetTransition, 'NotSetTransition', VOID, SetTransition);
  initMetadataForClass(LexerConfigHashSet, 'LexerConfigHashSet', LexerConfigHashSet, AbstractConfigHashSet);
  initMetadataForClass(OrderedATNConfigSet, 'OrderedATNConfigSet', OrderedATNConfigSet, ATNConfigSet);
  initMetadataForCompanion(Companion_16);
  initMetadataForClass(ParserATNSimulator, 'ParserATNSimulator', VOID, ATNSimulator);
  initMetadataForClass(PlusBlockStartState, 'PlusBlockStartState', PlusBlockStartState, BlockStartState);
  initMetadataForClass(PlusLoopbackState, 'PlusLoopbackState', PlusLoopbackState, DecisionState);
  initMetadataForClass(PrecedencePredicateTransition, 'PrecedencePredicateTransition', VOID, AbstractPredicateTransition);
  initMetadataForClass(PredicateTransition, 'PredicateTransition', VOID, AbstractPredicateTransition);
  initMetadataForCompanion(Companion_17);
  initMetadataForClass(PredictionContextCache, 'PredictionContextCache', PredictionContextCache);
  initMetadataForClass(FlexibleHashMap, 'FlexibleHashMap', FlexibleHashMap, VOID, [KtMutableMap]);
  initMetadataForClass(AltAndContextMap, 'AltAndContextMap', AltAndContextMap, FlexibleHashMap);
  initMetadataForObject(AltAndContextConfigEqualityComparator, 'AltAndContextConfigEqualityComparator', VOID, AbstractEqualityComparator);
  initMetadataForCompanion(Companion_18);
  initMetadataForClass(PredictionMode, 'PredictionMode', VOID, Enum);
  initMetadataForClass(RangeTransition, 'RangeTransition', VOID, Transition);
  initMetadataForClass(RuleStartState, 'RuleStartState', RuleStartState, ATNState);
  initMetadataForClass(RuleStopState, 'RuleStopState', RuleStopState, ATNState);
  initMetadataForClass(RuleTransition, 'RuleTransition', VOID, Transition);
  initMetadataForCompanion(Companion_19);
  initMetadataForClass(SemanticContext, 'SemanticContext');
  initMetadataForObject(Empty, 'Empty', VOID, SemanticContext);
  initMetadataForClass(Predicate, 'Predicate', Predicate_init_$Create$, SemanticContext);
  initMetadataForClass(PrecedencePredicate, 'PrecedencePredicate', PrecedencePredicate, SemanticContext, [SemanticContext, Comparable]);
  initMetadataForClass(Operator, 'Operator', VOID, SemanticContext);
  initMetadataForClass(AND, 'AND', VOID, Operator);
  initMetadataForClass(OR, 'OR', VOID, Operator);
  initMetadataForCompanion(Companion_20);
  initMetadataForClass(StarBlockStartState, 'StarBlockStartState', StarBlockStartState, BlockStartState);
  initMetadataForClass(StarLoopEntryState, 'StarLoopEntryState', StarLoopEntryState, DecisionState);
  initMetadataForClass(StarLoopbackState, 'StarLoopbackState', StarLoopbackState, ATNState);
  initMetadataForClass(TokensStartState, 'TokensStartState', TokensStartState, DecisionState);
  initMetadataForCompanion(Companion_21);
  initMetadataForClass(WildcardTransition, 'WildcardTransition', VOID, Transition);
  initMetadataForClass(sam$kotlin_Comparator$0, 'sam$kotlin_Comparator$0', VOID, VOID, [Comparator, FunctionAdapter]);
  initMetadataForClass(DFA, 'DFA');
  initMetadataForClass(DFASerializer, 'DFASerializer');
  initMetadataForClass(PredPrediction, 'PredPrediction');
  initMetadataForClass(DFAState, 'DFAState', DFAState_init_$Create$);
  initMetadataForClass(LexerDFASerializer, 'LexerDFASerializer', VOID, DFASerializer);
  initMetadataForCompanion(Companion_22);
  initMetadataForClass(SetIterator, 'SetIterator');
  initMetadataForClass(DoubleKeyMap, 'DoubleKeyMap', DoubleKeyMap);
  initMetadataForCompanion(Companion_23);
  initMetadataForClass(Entry, 'Entry');
  initMetadataForCompanion(Companion_24);
  initMetadataForClass(IntegerList, 'IntegerList', IntegerList_init_$Create$);
  initMetadataForClass(IntegerStack, 'IntegerStack', IntegerStack_init_$Create$, IntegerList);
  initMetadataForCompanion(Companion_25);
  initMetadataForClass(Interval, 'Interval');
  initMetadataForCompanion(Companion_26);
  initMetadataForClass(IntervalSet, 'IntervalSet', IntervalSet_init_$Create$);
  initMetadataForObject(MurmurHash, 'MurmurHash');
  initMetadataForCompanion(Companion_27);
  initMetadataForClass(ObjectEqualityComparator, 'ObjectEqualityComparator', ObjectEqualityComparator, AbstractEqualityComparator);
  initMetadataForObject(Utils, 'Utils');
  initMetadataForClass(AbstractParseTreeVisitor, 'AbstractParseTreeVisitor');
  initMetadataForInterface(ErrorNode, 'ErrorNode');
  initMetadataForClass(TerminalNodeImpl, 'TerminalNodeImpl');
  initMetadataForClass(ErrorNodeImpl, 'ErrorNodeImpl', VOID, TerminalNodeImpl, [TerminalNodeImpl, ErrorNode]);
  initMetadataForObject(CharStreams, 'CharStreams', VOID, AbstractCharStreams);
  initMetadataForClass(BitSet, 'BitSet', BitSet_init_$Create$);
  initMetadataForClass(IdentityEntry, 'IdentityEntry', VOID, VOID, [MutableEntry]);
  initMetadataForClass(IdentityEntriesView$iterator$1);
  initMetadataForClass(IdentityEntriesView, 'IdentityEntriesView', VOID, AbstractMutableSet);
  initMetadataForClass(IdentityHashMap, 'IdentityHashMap', IdentityHashMap, VOID, [KtMutableMap]);
  initMetadataForClass(IdentityKeysView$iterator$1);
  initMetadataForClass(IdentityKeysView, 'IdentityKeysView', VOID, AbstractMutableSet);
  initMetadataForClass(IdentityValuesView$iterator$1);
  initMetadataForClass(IdentityValuesView, 'IdentityValuesView', VOID, AbstractMutableCollection);
  //endregion
  function isBmpCodePoint(codePoint) {
    return (codePoint >>> 16 | 0) === 0;
  }
  function isValidCodePoint(codePoint) {
    return 0 <= codePoint ? codePoint <= 1114111 : false;
  }
  function highSurrogate(codePoint) {
    return numberToChar((codePoint >>> 10 | 0) + 55232 | 0);
  }
  function lowSurrogate(codePoint) {
    return numberToChar((codePoint & 1023) + 56320 | 0);
  }
  function Collections() {
  }
  protoOf(Collections).jf = function (collection) {
    var tmp0_elvis_lhs = minOrNull(collection);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw NoSuchElementException_init_$Create$();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(Collections).kf = function (collection) {
    var tmp0_elvis_lhs = maxOrNull(collection);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw NoSuchElementException_init_$Create$();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  var Collections_instance;
  function Collections_getInstance() {
    return Collections_instance;
  }
  function StdPrintStream() {
  }
  protoOf(StdPrintStream).lf = function (message) {
    return println(message);
  };
  var StdPrintStream_instance;
  function StdPrintStream_getInstance() {
    return StdPrintStream_instance;
  }
  function ErrPrintStream() {
  }
  protoOf(ErrPrintStream).lf = function (message) {
    // Inline function 'com.strumenta.antlrkotlin.runtime.platformPrintErrLn' call
    console.error(message);
    return Unit_instance;
  };
  var ErrPrintStream_instance;
  function ErrPrintStream_getInstance() {
    return ErrPrintStream_instance;
  }
  function System() {
    System_instance = this;
    this.mf_1 = StdPrintStream_instance;
    this.nf_1 = ErrPrintStream_instance;
  }
  protoOf(System).of = function (name, defaultValue) {
    var tmp0_elvis_lhs = platformGetEnv(name);
    return tmp0_elvis_lhs == null ? defaultValue : tmp0_elvis_lhs;
  };
  var System_instance;
  function System_getInstance() {
    if (System_instance == null)
      new System();
    return System_instance;
  }
  function appendCodePoint(_this__u8e3s4, codePoint) {
    if (isBmpCodePoint(codePoint)) {
      _this__u8e3s4.q7(numberToChar(codePoint));
    } else if (isValidCodePoint(codePoint)) {
      _this__u8e3s4.q7(highSurrogate(codePoint));
      _this__u8e3s4.q7(lowSurrogate(codePoint));
    } else {
      throw IllegalArgumentException_init_$Create$('Not a valid Unicode code point: ' + toHex(codePoint));
    }
    return _this__u8e3s4;
  }
  function get_hexFormat() {
    _init_properties_Int_ext_kt__26f69c();
    return hexFormat;
  }
  var hexFormat;
  function toHex(_this__u8e3s4) {
    _init_properties_Int_ext_kt__26f69c();
    return toHexString(_this__u8e3s4, get_hexFormat());
  }
  var properties_initialized_Int_ext_kt_32ewk2;
  function _init_properties_Int_ext_kt__26f69c() {
    if (!properties_initialized_Int_ext_kt_32ewk2) {
      properties_initialized_Int_ext_kt_32ewk2 = true;
      // Inline function 'kotlin.text.HexFormat' call
      // Inline function 'kotlin.apply' call
      var this_0 = new Builder();
      // Inline function 'com.strumenta.antlrkotlin.runtime.ext.hexFormat.<anonymous>' call
      this_0.ae_1 = true;
      // Inline function 'kotlin.text.Builder.number' call
      // Inline function 'com.strumenta.antlrkotlin.runtime.ext.hexFormat.<anonymous>.<anonymous>' call
      var $this$number = this_0.de();
      $this$number.pd('0x');
      $this$number.md_1 = true;
      hexFormat = this_0.a3();
    }
  }
  function codePointIndicesFast(str) {
    var strLength = str.length;
    var intArray = new Int32Array(strLength + 1 | 0);
    var size = 0;
    var i = 1;
    var tmp0 = size;
    size = tmp0 + 1 | 0;
    intArray[tmp0] = 0;
    while (i < strLength) {
      if (!hasSurrogatePairAtFast(str, i)) {
        var tmp1 = size;
        size = tmp1 + 1 | 0;
        intArray[tmp1] = i;
      }
      i = i + 1 | 0;
    }
    // Inline function 'kotlin.math.min' call
    var a = size;
    var tmp$ret$0 = Math.min(a, strLength);
    return new Pair(intArray, tmp$ret$0);
  }
  function hasSurrogatePairAtFast(str, index) {
    // Inline function 'kotlin.code' call
    var this_0 = charSequenceGet(str, index - 1 | 0);
    var containsArg = Char__toInt_impl_vasixd(this_0);
    if (55296 <= containsArg ? containsArg <= 56319 : false) {
      // Inline function 'kotlin.code' call
      var this_1 = charSequenceGet(str, index);
      var containsArg_0 = Char__toInt_impl_vasixd(this_1);
      return 56320 <= containsArg_0 ? containsArg_0 <= 57343 : false;
    }
    return false;
  }
  function AbstractCharStreams() {
  }
  protoOf(AbstractCharStreams).pf = function (str, sourceName) {
    return new StringCharStream(str, sourceName);
  };
  protoOf(AbstractCharStreams).qf = function (str, sourceName, $super) {
    sourceName = sourceName === VOID ? '<unknown>' : sourceName;
    return $super === VOID ? this.pf(str, sourceName) : $super.pf.call(this, str, sourceName);
  };
  function BaseErrorListener() {
  }
  protoOf(BaseErrorListener).rf = function (recognizer, offendingSymbol, line, charPositionInLine, msg, e) {
  };
  protoOf(BaseErrorListener).sf = function (recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs) {
  };
  protoOf(BaseErrorListener).tf = function (recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs) {
  };
  protoOf(BaseErrorListener).uf = function (recognizer, dfa, startIndex, stopIndex, prediction, configs) {
  };
  function BufferedTokenStream(tokenSource) {
    this.vf_1 = ArrayList_init_$Create$(100);
    this.wf_1 = -1;
    this.xf_1 = false;
    this.yf_1 = tokenSource;
  }
  protoOf(BufferedTokenStream).zf = function () {
    return this.yf_1;
  };
  protoOf(BufferedTokenStream).ag = function () {
    return this.wf_1;
  };
  protoOf(BufferedTokenStream).bg = function () {
    return 0;
  };
  protoOf(BufferedTokenStream).cg = function (marker) {
  };
  protoOf(BufferedTokenStream).dg = function (index) {
    this.eg();
    this.wf_1 = this.fg(index);
  };
  protoOf(BufferedTokenStream).gg = function () {
    return this.vf_1.i();
  };
  protoOf(BufferedTokenStream).hg = function () {
    var tmp;
    if (this.wf_1 >= 0) {
      var tmp_0;
      if (this.xf_1) {
        tmp_0 = this.wf_1 < (this.vf_1.i() - 1 | 0);
      } else {
        tmp_0 = this.wf_1 < this.vf_1.i();
      }
      tmp = tmp_0;
    } else {
      tmp = false;
    }
    var skipEofCheck = tmp;
    if (!skipEofCheck && this.ig(1) === -1) {
      throw IllegalStateException_init_$Create$('cannot consume EOF');
    }
    if (this.jg(this.wf_1 + 1 | 0)) {
      this.wf_1 = this.fg(this.wf_1 + 1 | 0);
    }
  };
  protoOf(BufferedTokenStream).jg = function (i) {
    // Inline function 'com.strumenta.antlrkotlin.runtime.assert' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(i >= 0)) {
      throw AssertionError_init_$Create$(null);
    }
    var n = (i - this.vf_1.i() | 0) + 1 | 0;
    if (n > 0) {
      var fetched = this.kg(n);
      return fetched >= n;
    }
    return true;
  };
  protoOf(BufferedTokenStream).kg = function (n) {
    if (this.xf_1) {
      return 0;
    }
    var inductionVariable = 0;
    if (inductionVariable < n)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var t = this.zf().lg();
        if (isInterface(t, WritableToken)) {
          t.mg(this.vf_1.i());
        }
        this.vf_1.j(t);
        if (t.ng() === -1) {
          this.xf_1 = true;
          return i + 1 | 0;
        }
      }
       while (inductionVariable < n);
    return n;
  };
  protoOf(BufferedTokenStream).o1 = function (index) {
    if (index < 0 || index >= this.vf_1.i()) {
      throw IndexOutOfBoundsException_init_$Create$('token index ' + index + ' out of range 0..' + (this.vf_1.i() - 1 | 0));
    }
    return this.vf_1.o1(index);
  };
  protoOf(BufferedTokenStream).ig = function (i) {
    return ensureNotNull(this.og(i)).ng();
  };
  protoOf(BufferedTokenStream).pg = function (k) {
    var tmp;
    if ((this.wf_1 - k | 0) < 0) {
      tmp = null;
    } else {
      tmp = this.vf_1.o1(this.wf_1 - k | 0);
    }
    return tmp;
  };
  protoOf(BufferedTokenStream).og = function (k) {
    this.eg();
    if (k === 0) {
      return null;
    }
    if (k < 0) {
      return this.pg(-k | 0);
    }
    var i = (this.wf_1 + k | 0) - 1 | 0;
    this.jg(i);
    var tmp;
    if (i >= this.vf_1.i()) {
      tmp = this.vf_1.o1(this.vf_1.i() - 1 | 0);
    } else {
      tmp = this.vf_1.o1(i);
    }
    return tmp;
  };
  protoOf(BufferedTokenStream).fg = function (i) {
    return i;
  };
  protoOf(BufferedTokenStream).eg = function () {
    if (this.wf_1 === -1) {
      this.qg();
    }
  };
  protoOf(BufferedTokenStream).qg = function () {
    this.jg(0);
    this.wf_1 = this.fg(0);
  };
  protoOf(BufferedTokenStream).rg = function (i, channel) {
    this.jg(i);
    if (i >= this.gg()) {
      return this.gg() - 1 | 0;
    }
    var token = this.vf_1.o1(i);
    var ii = i;
    while (!(token.sg() === channel)) {
      if (token.ng() === -1) {
        return ii;
      }
      ii = ii + 1 | 0;
      this.jg(ii);
      token = this.vf_1.o1(ii);
    }
    return ii;
  };
  protoOf(BufferedTokenStream).tg = function (i, channel) {
    this.jg(i);
    if (i >= this.gg()) {
      return this.gg() - 1 | 0;
    }
    var ii = i;
    while (ii >= 0) {
      var token = this.vf_1.o1(ii);
      if (token.ng() === -1 || token.sg() === channel) {
        return ii;
      }
      ii = ii - 1 | 0;
    }
    return ii;
  };
  protoOf(BufferedTokenStream).ug = function (interval) {
    var start = interval.vg_1;
    var stop = interval.wg_1;
    if (start < 0 || stop < 0) {
      return '';
    }
    this.jg(stop);
    if (stop >= this.vf_1.i()) {
      stop = this.vf_1.i() - 1 | 0;
    }
    var buf = StringBuilder_init_$Create$();
    var inductionVariable = start;
    var last = stop;
    if (inductionVariable <= last)
      $l$loop: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var t = this.vf_1.o1(i);
        if (t.ng() === -1) {
          break $l$loop;
        }
        buf.p7(t.xg());
      }
       while (!(i === last));
    return buf.toString();
  };
  protoOf(BufferedTokenStream).yg = function (start, stop) {
    var tmp;
    if (!(start == null) && !(stop == null)) {
      tmp = this.ug(Companion_getInstance_25().dh(start.zg(), stop.zg()));
    } else {
      tmp = '';
    }
    return tmp;
  };
  function CharStream() {
  }
  function Companion() {
    Companion_instance = this;
    this.eh_1 = new Pair(null, null);
  }
  var Companion_instance;
  function Companion_getInstance() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function CommonToken_init_$Init$(source, type, channel, startIndex, stopIndex, $this) {
    CommonToken.call($this);
    $this.fh_1 = source;
    $this.oh(type);
    $this.ph(channel);
    $this.qh(startIndex);
    $this.rh(stopIndex);
    var a = source.qb_1;
    if (!(a == null)) {
      $this.th(a.sh());
      $this.vh(a.uh());
    }
    return $this;
  }
  function CommonToken_init_$Create$(source, type, channel, startIndex, stopIndex) {
    return CommonToken_init_$Init$(source, type, channel, startIndex, stopIndex, objectCreate(protoOf(CommonToken)));
  }
  protoOf(CommonToken).oh = function (_set____db54di) {
    this.hh_1 = _set____db54di;
  };
  protoOf(CommonToken).ng = function () {
    return this.hh_1;
  };
  protoOf(CommonToken).th = function (_set____db54di) {
    this.ih_1 = _set____db54di;
  };
  protoOf(CommonToken).sh = function () {
    return this.ih_1;
  };
  protoOf(CommonToken).vh = function (_set____db54di) {
    this.jh_1 = _set____db54di;
  };
  protoOf(CommonToken).uh = function () {
    return this.jh_1;
  };
  protoOf(CommonToken).ph = function (_set____db54di) {
    this.kh_1 = _set____db54di;
  };
  protoOf(CommonToken).sg = function () {
    return this.kh_1;
  };
  protoOf(CommonToken).mg = function (_set____db54di) {
    this.lh_1 = _set____db54di;
  };
  protoOf(CommonToken).zg = function () {
    return this.lh_1;
  };
  protoOf(CommonToken).qh = function (_set____db54di) {
    this.mh_1 = _set____db54di;
  };
  protoOf(CommonToken).wh = function () {
    return this.mh_1;
  };
  protoOf(CommonToken).rh = function (_set____db54di) {
    this.nh_1 = _set____db54di;
  };
  protoOf(CommonToken).xh = function () {
    return this.nh_1;
  };
  protoOf(CommonToken).zf = function () {
    return this.fh_1.qb_1;
  };
  protoOf(CommonToken).yh = function () {
    return this.fh_1.rb_1;
  };
  protoOf(CommonToken).zh = function (value) {
    this.gh_1 = value;
  };
  protoOf(CommonToken).xg = function () {
    if (!(this.gh_1 == null)) {
      return this.gh_1;
    }
    var tmp0_elvis_lhs = this.yh();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var input = tmp;
    var n = input.gg();
    var tmp_0;
    if (this.wh() < n && this.xh() < n) {
      tmp_0 = input.ug(Companion_getInstance_25().dh(this.wh(), this.xh()));
    } else {
      tmp_0 = '<EOF>';
    }
    return tmp_0;
  };
  protoOf(CommonToken).toString = function () {
    return this.ai(null);
  };
  protoOf(CommonToken).ai = function (r) {
    var tmp;
    if (this.sg() > 0) {
      tmp = ',channel=' + this.sg();
    } else {
      tmp = '';
    }
    var channelStr = tmp;
    var txt = this.xg();
    if (!(txt == null)) {
      txt = replace(txt, '\n', '\\n');
      txt = replace(txt, '\r', '\\r');
      txt = replace(txt, '\t', '\\t');
    } else {
      txt = '<no text>';
    }
    var tmp1_safe_receiver = r == null ? null : r.di();
    var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.ei(this.ng());
    var typeString = tmp2_elvis_lhs == null ? this.ng().toString() : tmp2_elvis_lhs;
    return '[@' + this.zg() + ',' + this.wh() + ':' + this.xh() + "='" + txt + "',<" + typeString + '>' + channelStr + ',' + this.sh() + ':' + this.uh() + ']';
  };
  function CommonToken() {
    Companion_getInstance();
    this.gh_1 = null;
    this.hh_1 = 0;
    this.ih_1 = 0;
    this.jh_1 = -1;
    this.kh_1 = 0;
    this.lh_1 = -1;
    this.mh_1 = 0;
    this.nh_1 = 0;
  }
  function Companion_0() {
    Companion_instance_0 = this;
    this.fi_1 = new CommonTokenFactory();
  }
  var Companion_instance_0;
  function Companion_getInstance_0() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function CommonTokenFactory(copyText) {
    Companion_getInstance_0();
    copyText = copyText === VOID ? false : copyText;
    this.gi_1 = copyText;
  }
  protoOf(CommonTokenFactory).hi = function (source, type, text, channel, start, stop, line, charPositionInLine) {
    var t = CommonToken_init_$Create$(source, type, channel, start, stop);
    t.th(line);
    t.vh(charPositionInLine);
    if (!(text == null)) {
      t.zh(text);
    } else if (this.gi_1 && !(source.rb_1 == null)) {
      t.zh(ensureNotNull(source.rb_1).ug(Companion_getInstance_25().dh(start, stop)));
    }
    return t;
  };
  function CommonTokenStream(tokenSource) {
    BufferedTokenStream.call(this, tokenSource);
    this.mi_1 = 0;
  }
  protoOf(CommonTokenStream).fg = function (i) {
    return this.rg(i, this.mi_1);
  };
  protoOf(CommonTokenStream).pg = function (k) {
    if (k === 0 || (this.wf_1 - k | 0) < 0) {
      return null;
    }
    var i = this.wf_1;
    var n = 1;
    while (n <= k && i > 0) {
      i = this.tg(i - 1 | 0, this.mi_1);
      n = n + 1 | 0;
    }
    var tmp;
    if (i < 0) {
      tmp = null;
    } else {
      tmp = this.vf_1.o1(i);
    }
    return tmp;
  };
  protoOf(CommonTokenStream).og = function (k) {
    this.eg();
    if (k === 0) {
      return null;
    }
    if (k < 0) {
      return this.pg(-k | 0);
    }
    var i = this.wf_1;
    var n = 1;
    while (n < k) {
      if (this.jg(i + 1 | 0)) {
        i = this.rg(i + 1 | 0, this.mi_1);
      }
      n = n + 1 | 0;
    }
    return this.vf_1.o1(i);
  };
  function Companion_1() {
    Companion_instance_1 = this;
    this.ni_1 = new ConsoleErrorListener();
  }
  var Companion_instance_1;
  function Companion_getInstance_1() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function ConsoleErrorListener() {
    Companion_getInstance_1();
    BaseErrorListener.call(this);
  }
  protoOf(ConsoleErrorListener).rf = function (recognizer, offendingSymbol, line, charPositionInLine, msg, e) {
    System_getInstance().nf_1.lf('line ' + line + ':' + charPositionInLine + ' ' + msg);
  };
  function DefaultErrorStrategy() {
    this.oi_1 = false;
    this.pi_1 = -1;
    this.qi_1 = null;
    this.ri_1 = null;
    this.si_1 = 0;
  }
  protoOf(DefaultErrorStrategy).ti = function (recognizer) {
    return this.ui(recognizer);
  };
  protoOf(DefaultErrorStrategy).vi = function (recognizer) {
    this.oi_1 = true;
  };
  protoOf(DefaultErrorStrategy).wi = function (recognizer) {
    return this.oi_1;
  };
  protoOf(DefaultErrorStrategy).ui = function (recognizer) {
    this.oi_1 = false;
    this.qi_1 = null;
    this.pi_1 = -1;
  };
  protoOf(DefaultErrorStrategy).xi = function (recognizer) {
    return this.ui(recognizer);
  };
  protoOf(DefaultErrorStrategy).yi = function (recognizer, e) {
    if (this.wi(recognizer)) {
      return Unit_instance;
    }
    this.vi(recognizer);
    if (e instanceof NoViableAltException) {
      this.tj(recognizer, e);
    } else {
      if (e instanceof InputMismatchException) {
        this.sj(recognizer, e);
      } else {
        if (e instanceof FailedPredicateException) {
          this.rj(recognizer, e);
        } else {
          System_getInstance().nf_1.lf('unknown recognition error type: ' + e.toString());
          recognizer.qj(ensureNotNull(e.cj_1), ensureNotNull(e.message), e);
        }
      }
    }
  };
  protoOf(DefaultErrorStrategy).uj = function (recognizer, e) {
    var lastErrorStatesTemp = this.qi_1;
    if (this.pi_1 === recognizer.wj().ag() && !(lastErrorStatesTemp == null) && lastErrorStatesTemp.oc(recognizer.ci_1)) {
      recognizer.vj();
    }
    this.pi_1 = recognizer.wj().ag();
    if (lastErrorStatesTemp == null) {
      lastErrorStatesTemp = IntervalSet_init_$Create$();
      this.qi_1 = lastErrorStatesTemp;
    }
    lastErrorStatesTemp.zj(recognizer.ci_1);
    var followSet = this.ak(recognizer);
    this.bk(recognizer, followSet);
  };
  protoOf(DefaultErrorStrategy).ck = function (recognizer) {
    var s = recognizer.pk().nk_1.fk_1.o1(recognizer.ci_1);
    if (this.wi(recognizer)) {
      return Unit_instance;
    }
    var tokens = recognizer.wj();
    var la = tokens.ig(1);
    var nextTokens = recognizer.qk().rk(ensureNotNull(s));
    if (nextTokens.oc(la)) {
      this.ri_1 = null;
      this.si_1 = -1;
      return Unit_instance;
    }
    if (nextTokens.oc(-2)) {
      if (this.ri_1 == null) {
        this.ri_1 = recognizer.kj_1;
        this.si_1 = recognizer.ci_1;
      }
      return Unit_instance;
    }
    switch (s.zk()) {
      case 3:
      case 5:
      case 4:
      case 10:
        if (!(this.al(recognizer) == null)) {
          return Unit_instance;
        }

        throw InputMismatchException_init_$Create$(recognizer);
      case 11:
      case 9:
        this.bl(recognizer);
        var expecting = recognizer.cl();
        var whatFollowsLoopIterationOrRule = expecting.dl(this.ak(recognizer));
        this.bk(recognizer, whatFollowsLoopIterationOrRule);
        break;
      default:
        break;
    }
  };
  protoOf(DefaultErrorStrategy).tj = function (recognizer, e) {
    var tokens = recognizer.wj();
    var tmp;
    if (ensureNotNull(e.jl_1).ng() === -1) {
      tmp = '<EOF>';
    } else {
      tmp = ensureNotNull(tokens.yg(e.jl_1, ensureNotNull(e.cj_1)));
    }
    var input = tmp;
    var msg = 'no viable alternative at input ' + this.ll(input);
    recognizer.qj(ensureNotNull(e.cj_1), msg, e);
  };
  protoOf(DefaultErrorStrategy).sj = function (recognizer, e) {
    var tokenErrorDisplay = this.ml(e.cj_1);
    var expectedToken = ensureNotNull(e.cl()).nl(recognizer.di());
    var msg = 'mismatched input ' + tokenErrorDisplay + ' expecting ' + expectedToken;
    recognizer.qj(ensureNotNull(e.cj_1), msg, e);
  };
  protoOf(DefaultErrorStrategy).rj = function (recognizer, e) {
    var ruleName = recognizer.ol()[ensureNotNull(recognizer.kj_1).ul()];
    var msg = 'rule ' + ruleName + ' ' + e.message;
    recognizer.qj(ensureNotNull(e.cj_1), msg, e);
  };
  protoOf(DefaultErrorStrategy).bl = function (recognizer) {
    if (this.wi(recognizer)) {
      return Unit_instance;
    }
    this.vi(recognizer);
    var t = ensureNotNull(recognizer.vl());
    var tokenName = this.ml(t);
    var expecting = this.wl(recognizer);
    var msg = 'extraneous input ' + tokenName + ' expecting ' + expecting.nl(recognizer.di());
    recognizer.qj(t, msg, null);
  };
  protoOf(DefaultErrorStrategy).xl = function (recognizer) {
    if (this.wi(recognizer)) {
      return Unit_instance;
    }
    this.vi(recognizer);
    var t = ensureNotNull(recognizer.vl());
    var expecting = this.wl(recognizer);
    var msg = 'missing ' + expecting.nl(recognizer.di()) + ' at ' + this.ml(t);
    recognizer.qj(t, msg, null);
  };
  protoOf(DefaultErrorStrategy).yl = function (recognizer) {
    var matchedSymbol = this.al(recognizer);
    if (!(matchedSymbol == null)) {
      recognizer.vj();
      return matchedSymbol;
    }
    if (this.am(recognizer)) {
      return this.zl(recognizer);
    }
    var tmp;
    if (this.ri_1 == null) {
      tmp = InputMismatchException_init_$Create$(recognizer);
    } else {
      tmp = InputMismatchException_init_$Create$_0(recognizer, this.si_1, ensureNotNull(this.ri_1));
    }
    var e = tmp;
    throw e;
  };
  protoOf(DefaultErrorStrategy).am = function (recognizer) {
    var currentSymbolType = recognizer.wj().ig(1);
    var currentState = recognizer.pk().nk_1.fk_1.o1(recognizer.ci_1);
    var next = ensureNotNull(currentState).dm(0).bm_1;
    var atn = recognizer.pk().nk_1;
    var expectingAtLL2 = atn.em(next, recognizer.kj_1);
    if (expectingAtLL2.oc(currentSymbolType)) {
      this.xl(recognizer);
      return true;
    }
    return false;
  };
  protoOf(DefaultErrorStrategy).al = function (recognizer) {
    var nextTokenType = recognizer.wj().ig(2);
    var expecting = this.wl(recognizer);
    if (expecting.oc(nextTokenType)) {
      this.bl(recognizer);
      recognizer.vj();
      var matchedSymbol = recognizer.vl();
      this.xi(recognizer);
      return matchedSymbol;
    }
    return null;
  };
  protoOf(DefaultErrorStrategy).zl = function (recognizer) {
    var currentSymbol = recognizer.vl();
    var expecting = this.wl(recognizer);
    var expectedTokenType = 0;
    if (!expecting.gm()) {
      expectedTokenType = expecting.fm();
    }
    var tmp;
    if (expectedTokenType === -1) {
      tmp = '<missing EOF>';
    } else {
      tmp = '<missing ' + recognizer.di().ei(expectedTokenType) + '>';
    }
    var tokenText = tmp;
    var current = currentSymbol;
    var lookback = recognizer.wj().og(-1);
    if (ensureNotNull(current).ng() === -1 && !(lookback == null)) {
      current = lookback;
    }
    return recognizer.hm().hi(new Pair(current.zf(), current.yh()), expectedTokenType, tokenText, 0, -1, -1, current.sh(), current.uh());
  };
  protoOf(DefaultErrorStrategy).wl = function (recognizer) {
    return recognizer.cl();
  };
  protoOf(DefaultErrorStrategy).ml = function (t) {
    if (t == null) {
      return '<no token>';
    }
    var s = this.im(t);
    if (s == null) {
      var tmp;
      if (this.jm(t) === -1) {
        tmp = '<EOF>';
      } else {
        tmp = '<' + this.jm(t) + '>';
      }
      s = tmp;
    }
    return this.ll(s);
  };
  protoOf(DefaultErrorStrategy).im = function (symbol) {
    return symbol.xg();
  };
  protoOf(DefaultErrorStrategy).jm = function (symbol) {
    return symbol.ng();
  };
  protoOf(DefaultErrorStrategy).ll = function (s) {
    var ss = s;
    ss = replace(ss, '\n', '\\n');
    ss = replace(ss, '\r', '\\r');
    ss = replace(ss, '\t', '\\t');
    return "'" + ss + "'";
  };
  protoOf(DefaultErrorStrategy).ak = function (recognizer) {
    var atn = recognizer.pk().nk_1;
    var ctx = recognizer.kj_1;
    var recoverSet = IntervalSet_init_$Create$();
    while (!(ctx == null) && ctx.ql_1 >= 0) {
      var invokingState = atn.fk_1.o1(ctx.ql_1);
      var tmp = ensureNotNull(invokingState).dm(0);
      var rt = tmp instanceof RuleTransition ? tmp : THROW_CCE();
      var follow = atn.rk(rt.om_1);
      recoverSet.rm(follow);
      ctx = ctx.sm();
    }
    recoverSet.tm(-2);
    return recoverSet;
  };
  protoOf(DefaultErrorStrategy).bk = function (recognizer, set) {
    var ttype = recognizer.wj().ig(1);
    while (!(ttype === -1) && !set.oc(ttype)) {
      recognizer.vj();
      ttype = recognizer.wj().ig(1);
    }
  };
  function DummyTokenStream() {
  }
  protoOf(DummyTokenStream).zf = function () {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(DummyTokenStream).hg = function () {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(DummyTokenStream).ig = function (i) {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(DummyTokenStream).bg = function () {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(DummyTokenStream).cg = function (marker) {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(DummyTokenStream).ag = function () {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(DummyTokenStream).dg = function (index) {
  };
  protoOf(DummyTokenStream).og = function (k) {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(DummyTokenStream).o1 = function (index) {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(DummyTokenStream).ug = function (interval) {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(DummyTokenStream).yg = function (start, stop) {
    throw UnsupportedOperationException_init_$Create$();
  };
  var DummyTokenStream_instance;
  function DummyTokenStream_getInstance() {
    return DummyTokenStream_instance;
  }
  function EmptyStackException(message, cause) {
    message = message === VOID ? null : message;
    cause = cause === VOID ? null : cause;
    RuntimeException_init_$Init$(message, cause, this);
    captureStack(this, EmptyStackException);
  }
  function formatMessage($this, predicate, message) {
    return message == null ? 'failed predicate: {' + predicate + '}?' : message;
  }
  function Companion_2() {
  }
  var Companion_instance_2;
  function Companion_getInstance_2() {
    return Companion_instance_2;
  }
  function FailedPredicateException(recognizer, predicate, message) {
    predicate = predicate === VOID ? null : predicate;
    message = message === VOID ? null : message;
    RecognitionException.call(this, recognizer, recognizer.wj(), ensureNotNull(recognizer.kj_1), formatMessage(Companion_instance_2, predicate, message));
    captureStack(this, FailedPredicateException);
    this.zm_1 = predicate;
    this.an_1 = -1;
    this.bn_1 = -1;
    var s = recognizer.pk().nk_1.fk_1.o1(recognizer.ci_1);
    var tmp = ensureNotNull(s).dm(0);
    var trans = tmp instanceof AbstractPredicateTransition ? tmp : THROW_CCE();
    if (trans instanceof PredicateTransition) {
      this.an_1 = trans.en_1;
      this.bn_1 = trans.fn_1;
    } else {
      this.an_1 = 0;
      this.bn_1 = 0;
    }
    this.cj_1 = recognizer.vl();
  }
  function InputMismatchException_init_$Init$(recognizer, $this) {
    RecognitionException.call($this, recognizer, recognizer.wj(), ensureNotNull(recognizer.kj_1));
    InputMismatchException.call($this);
    $this.cj_1 = recognizer.vl();
    return $this;
  }
  function InputMismatchException_init_$Create$(recognizer) {
    var tmp = InputMismatchException_init_$Init$(recognizer, objectCreate(protoOf(InputMismatchException)));
    captureStack(tmp, InputMismatchException_init_$Create$);
    return tmp;
  }
  function InputMismatchException_init_$Init$_0(recognizer, state, ctx, $this) {
    RecognitionException.call($this, recognizer, recognizer.wj(), ctx);
    InputMismatchException.call($this);
    $this.dj_1 = state;
    $this.cj_1 = recognizer.vl();
    return $this;
  }
  function InputMismatchException_init_$Create$_0(recognizer, state, ctx) {
    var tmp = InputMismatchException_init_$Init$_0(recognizer, state, ctx, objectCreate(protoOf(InputMismatchException)));
    captureStack(tmp, InputMismatchException_init_$Create$_0);
    return tmp;
  }
  function InputMismatchException() {
    captureStack(this, InputMismatchException);
  }
  function Companion_3() {
    this.jn_1 = 0;
    this.kn_1 = -2;
    this.ln_1 = -3;
    this.mn_1 = 0;
    this.nn_1 = 1;
    this.on_1 = 0;
    this.pn_1 = 1114111;
  }
  var Companion_instance_3;
  function Companion_getInstance_3() {
    return Companion_instance_3;
  }
  function Lexer(input) {
    Recognizer.call(this);
    this.sn_1 = input;
    this.tn_1 = new Pair(this, input);
    this.un_1 = Companion_getInstance_0().fi_1;
    this.vn_1 = null;
    this.wn_1 = -1;
    this.xn_1 = 0;
    this.yn_1 = 0;
    this.zn_1 = false;
    this.ao_1 = 0;
    this.bo_1 = 0;
    this.co_1 = IntegerStack_init_$Create$();
    this.do_1 = 0;
    this.eo_1 = null;
    var tmp = this;
    // Inline function 'kotlin.emptyArray' call
    tmp.fo_1 = [];
    var tmp_0 = this;
    // Inline function 'kotlin.emptyArray' call
    tmp_0.go_1 = [];
    var tmp_1 = this;
    // Inline function 'kotlin.emptyArray' call
    tmp_1.ho_1 = [];
  }
  protoOf(Lexer).hm = function () {
    return this.un_1;
  };
  protoOf(Lexer).io = function (_set____db54di) {
    this.vn_1 = _set____db54di;
  };
  protoOf(Lexer).jo = function () {
    return this.vn_1;
  };
  protoOf(Lexer).sh = function () {
    return this.pk().po_1;
  };
  protoOf(Lexer).uh = function () {
    return this.pk().qo_1;
  };
  protoOf(Lexer).to = function () {
    return this.sn_1.ag();
  };
  protoOf(Lexer).uo = function () {
    return this.ho_1;
  };
  protoOf(Lexer).lg = function () {
    var tokenStartMarker = this.sn_1.bg();
    try {
      outer: while (true) {
        if (this.zn_1) {
          this.vo();
          return ensureNotNull(this.jo());
        }
        this.io(null);
        this.ao_1 = 0;
        this.wn_1 = this.sn_1.ag();
        this.yn_1 = this.pk().qo_1;
        this.xn_1 = this.pk().po_1;
        this.eo_1 = null;
        do {
          this.bo_1 = 0;
          var ttype;
          try {
            ttype = this.pk().wo(this.sn_1, this.do_1);
          } catch ($p) {
            if ($p instanceof LexerNoViableAltException) {
              var e = $p;
              this.xo(e);
              this.yo(e);
              ttype = -3;
            } else {
              throw $p;
            }
          }
          if (this.sn_1.ig(1) === -1) {
            this.zn_1 = true;
          }
          if (this.bo_1 === 0) {
            this.bo_1 = ttype;
          }
          if (this.bo_1 === -3) {
            continue outer;
          }
        }
         while (this.bo_1 === -2);
        if (this.jo() == null) {
          this.zo();
        }
        return ensureNotNull(this.jo());
      }
    }finally {
      this.sn_1.cg(tokenStartMarker);
    }
  };
  protoOf(Lexer).ap = function () {
    this.bo_1 = -3;
  };
  protoOf(Lexer).bp = function () {
    this.bo_1 = -2;
  };
  protoOf(Lexer).cp = function (m) {
    this.do_1 = m;
  };
  protoOf(Lexer).dp = function (m) {
    if (false) {
      System_getInstance().mf_1.lf('pushMode ' + m);
    }
    this.co_1.gp(this.do_1);
    this.cp(m);
  };
  protoOf(Lexer).hp = function () {
    if (this.co_1.kp()) {
      throw new EmptyStackException();
    }
    if (false) {
      System_getInstance().mf_1.lf('popMode back to ' + this.co_1.lp());
    }
    this.cp(this.co_1.mp());
    return this.do_1;
  };
  protoOf(Lexer).np = function (token) {
    this.io(token);
  };
  protoOf(Lexer).zo = function () {
    var t = this.hm().hi(this.tn_1, this.bo_1, this.eo_1, this.ao_1, this.wn_1, this.to() - 1 | 0, this.xn_1, this.yn_1);
    this.np(t);
    return t;
  };
  protoOf(Lexer).vo = function () {
    var cPos = this.uh();
    var eof = this.hm().hi(this.tn_1, -1, null, 0, this.sn_1.ag(), this.sn_1.ag() - 1 | 0, this.sh(), cPos);
    this.np(eof);
    return eof;
  };
  protoOf(Lexer).yo = function (e) {
    if (!(this.sn_1.ig(1) === -1)) {
      this.pk().op(this.sn_1);
    }
  };
  protoOf(Lexer).xo = function (e) {
    var text = this.sn_1.ug(Companion_getInstance_25().dh(this.wn_1, this.sn_1.ag()));
    var msg = "token recognition error at: '" + this.pp(text) + "'";
    this.qp().rf(this, null, this.xn_1, this.yn_1, msg, e);
  };
  protoOf(Lexer).pp = function (s) {
    var buf = StringBuilder_init_$Create$();
    var inductionVariable = 0;
    var last = s.length;
    while (inductionVariable < last) {
      var c = charSequenceGet(s, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'kotlin.code' call
      var tmp$ret$0 = Char__toInt_impl_vasixd(c);
      buf.p7(this.rp(tmp$ret$0));
    }
    return buf.toString();
  };
  protoOf(Lexer).rp = function (c) {
    var tmp;
    if (c === -1) {
      tmp = '<EOF>';
    } else {
      // Inline function 'kotlin.code' call
      var this_0 = _Char___init__impl__6a9atx(10);
      if (c === Char__toInt_impl_vasixd(this_0)) {
        tmp = '\\n';
      } else {
        // Inline function 'kotlin.code' call
        var this_1 = _Char___init__impl__6a9atx(9);
        if (c === Char__toInt_impl_vasixd(this_1)) {
          tmp = '\\t';
        } else {
          // Inline function 'kotlin.code' call
          var this_2 = _Char___init__impl__6a9atx(13);
          if (c === Char__toInt_impl_vasixd(this_2)) {
            tmp = '\\r';
          } else {
            tmp = toString(numberToChar(c));
          }
        }
      }
    }
    return tmp;
  };
  function LexerNoViableAltException(lexer, input, startIndex, deadEndConfigs) {
    RecognitionException.call(this, lexer, input, null);
    captureStack(this, LexerNoViableAltException);
    this.bq_1 = startIndex;
    this.cq_1 = deadEndConfigs;
  }
  protoOf(LexerNoViableAltException).yh = function () {
    var tmp = protoOf(RecognitionException).yh.call(this);
    return isInterface(tmp, CharStream) ? tmp : THROW_CCE();
  };
  protoOf(LexerNoViableAltException).toString = function () {
    var symbol = '';
    if (this.bq_1 >= 0 && this.bq_1 < this.yh().gg()) {
      symbol = this.yh().ug(Companion_getInstance_25().dh(this.bq_1, this.bq_1));
      symbol = Utils_instance.dq(symbol, false);
    }
    return '' + getKClassFromExpression(this).g9() + "('" + symbol + "')";
  };
  function NoViableAltException(recognizer, input, startToken, offendingToken, deadEndConfigs, ctx) {
    input = input === VOID ? recognizer.wj() : input;
    startToken = startToken === VOID ? recognizer.vl() : startToken;
    offendingToken = offendingToken === VOID ? recognizer.vl() : offendingToken;
    deadEndConfigs = deadEndConfigs === VOID ? null : deadEndConfigs;
    ctx = ctx === VOID ? ensureNotNull(recognizer.kj_1) : ctx;
    RecognitionException.call(this, recognizer, input, ctx);
    captureStack(this, NoViableAltException);
    this.jl_1 = startToken;
    this.kl_1 = deadEndConfigs;
    this.cj_1 = offendingToken;
  }
  function Parser(input) {
    Recognizer.call(this);
    this.gj_1 = null;
    this.hj_1 = new DefaultErrorStrategy();
    this.ij_1 = input;
    var tmp = this;
    // Inline function 'kotlin.also' call
    var this_0 = IntegerStack_init_$Create$();
    // Inline function 'org.antlr.v4.kotlinruntime.Parser._precedenceStack.<anonymous>' call
    this_0.gp(0);
    tmp.jj_1 = this_0;
    this.kj_1 = null;
    this.lj_1 = true;
    this.mj_1 = null;
    this.nj_1 = ArrayList_init_$Create$_0();
    this.oj_1 = 0;
    this.pj_1 = false;
    this.eq(input);
  }
  protoOf(Parser).fq = function () {
    return this.nj_1;
  };
  protoOf(Parser).hm = function () {
    return this.ij_1.zf().hm();
  };
  protoOf(Parser).eq = function (value) {
    this.ij_1 = DummyTokenStream_instance;
    this.gq();
    this.ij_1 = value;
  };
  protoOf(Parser).wj = function () {
    return this.ij_1;
  };
  protoOf(Parser).vl = function () {
    return this.ij_1.og(1);
  };
  protoOf(Parser).hq = function () {
    var tmp;
    if (this.jj_1.kp()) {
      tmp = -1;
    } else {
      tmp = this.jj_1.lp();
    }
    return tmp;
  };
  protoOf(Parser).cl = function () {
    return this.qk().iq(this.ci_1, this.kj_1);
  };
  protoOf(Parser).gq = function () {
    this.wj().dg(0);
    this.hj_1.ti(this);
    this.kj_1 = null;
    this.oj_1 = 0;
    this.pj_1 = false;
    this.jj_1.jq();
    this.jj_1.gp(0);
    var tmp0_safe_receiver = this.pk();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.gq();
    }
  };
  protoOf(Parser).uq = function (ttype) {
    var t = this.vl();
    if (ensureNotNull(t).ng() === ttype) {
      if (ttype === -1) {
        this.pj_1 = true;
      }
      this.hj_1.xi(this);
      this.vj();
    } else {
      t = this.hj_1.yl(this);
      if (this.lj_1 && t.zg() === -1) {
        ensureNotNull(this.kj_1).fr(this.vq(this.kj_1, t));
      }
    }
    return t;
  };
  protoOf(Parser).gr = function () {
    var tmp0_iterator = this.nj_1.f();
    while (tmp0_iterator.g()) {
      var listener = tmp0_iterator.h();
      listener.hr(ensureNotNull(this.kj_1));
      ensureNotNull(this.kj_1).ir(listener);
    }
  };
  protoOf(Parser).jr = function () {
    var tmp0_iterator = asReversed(this.nj_1).f();
    while (tmp0_iterator.g()) {
      var listener = tmp0_iterator.h();
      ensureNotNull(this.kj_1).kr(listener);
      listener.lr(ensureNotNull(this.kj_1));
    }
  };
  protoOf(Parser).qj = function (offendingToken, msg, e) {
    this.oj_1 = this.oj_1 + 1 | 0;
    var line = offendingToken.sh();
    var charPositionInLine = offendingToken.uh();
    var listener = this.qp();
    listener.rf(this, offendingToken, line, charPositionInLine, msg, e);
  };
  protoOf(Parser).vj = function () {
    var o = this.vl();
    if (!(ensureNotNull(o).ng() === -1)) {
      this.wj().hg();
    }
    var tmp;
    if (this.lj_1) {
      tmp = true;
    } else {
      // Inline function 'kotlin.collections.isNotEmpty' call
      tmp = !this.nj_1.r();
    }
    if (tmp) {
      if (this.hj_1.wi(this)) {
        var node = ensureNotNull(this.kj_1).fr(this.vq(this.kj_1, o));
        var tmp0_iterator = this.nj_1.f();
        while (tmp0_iterator.g()) {
          var listener = tmp0_iterator.h();
          listener.pr(node);
        }
      } else {
        var node_0 = ensureNotNull(this.kj_1).nr(this.mr(this.kj_1, o));
        var tmp1_iterator = this.nj_1.f();
        while (tmp1_iterator.g()) {
          var listener_0 = tmp1_iterator.h();
          listener_0.or(node_0);
        }
      }
    }
    return o;
  };
  protoOf(Parser).mr = function (parent, t) {
    return new TerminalNodeImpl(t);
  };
  protoOf(Parser).vq = function (parent, t) {
    return new ErrorNodeImpl(t);
  };
  protoOf(Parser).qr = function () {
    var parent = ensureNotNull(this.kj_1).sm();
    if (parent == null)
      null;
    else
      parent.rr(ensureNotNull(this.kj_1));
  };
  protoOf(Parser).sr = function (localctx, state, ruleIndex) {
    this.ci_1 = state;
    this.kj_1 = localctx;
    ensureNotNull(this.kj_1).cr_1 = this.ij_1.og(1);
    if (this.lj_1) {
      this.qr();
    }
    this.gr();
  };
  protoOf(Parser).tr = function () {
    if (this.pj_1) {
      ensureNotNull(this.kj_1).dr_1 = this.ij_1.og(1);
    } else {
      ensureNotNull(this.kj_1).dr_1 = this.ij_1.og(-1);
    }
    this.jr();
    this.ci_1 = ensureNotNull(this.kj_1).ql_1;
    this.kj_1 = ensureNotNull(this.kj_1).sm();
  };
  protoOf(Parser).ur = function (localctx, altNum) {
    localctx.vr(altNum);
    if (this.lj_1 && !(this.kj_1 === localctx)) {
      var parent = ensureNotNull(this.kj_1).sm();
      if (!(parent == null)) {
        parent.wr();
        parent.rr(localctx);
      }
    }
    this.kj_1 = localctx;
  };
  protoOf(Parser).xr = function (localctx, state, ruleIndex, precedence) {
    this.ci_1 = state;
    this.jj_1.gp(precedence);
    this.kj_1 = localctx;
    ensureNotNull(this.kj_1).cr_1 = this.ij_1.og(1);
    this.gr();
  };
  protoOf(Parser).yr = function (localctx, state, ruleIndex) {
    var previous = this.kj_1;
    ensureNotNull(previous).zr(localctx);
    previous.ql_1 = state;
    previous.dr_1 = this.ij_1.og(-1);
    this.kj_1 = localctx;
    ensureNotNull(this.kj_1).cr_1 = previous.cr_1;
    if (this.lj_1) {
      ensureNotNull(this.kj_1).rr(previous);
    }
    this.gr();
  };
  protoOf(Parser).as = function (_parentctx) {
    this.jj_1.mp();
    ensureNotNull(this.kj_1).dr_1 = this.ij_1.og(-1);
    var retCtx = this.kj_1;
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!this.fq().r()) {
      while (!(this.kj_1 === _parentctx)) {
        this.jr();
        this.kj_1 = ensureNotNull(this.kj_1).sm();
      }
    } else {
      this.kj_1 = _parentctx;
    }
    ensureNotNull(retCtx).zr(_parentctx);
    if (this.lj_1 && !(_parentctx == null)) {
      _parentctx.rr(retCtx);
    }
  };
  protoOf(Parser).up = function (localctx, precedence) {
    return precedence >= this.jj_1.lp();
  };
  protoOf(Parser).bs = function (ctx) {
    var p = ctx;
    var ruleNames = this.ol();
    var stack = ArrayList_init_$Create$_0();
    while (!(p == null)) {
      var ruleIndex = p.ul();
      if (ruleIndex < 0) {
        stack.j('n/a');
      } else {
        stack.j(ruleNames[ruleIndex]);
      }
      p = p.sm();
    }
    return stack;
  };
  protoOf(Parser).cs = function (ctx, $super) {
    ctx = ctx === VOID ? this.kj_1 : ctx;
    return $super === VOID ? this.bs(ctx) : $super.bs.call(this, ctx);
  };
  function Companion_4() {
    Companion_instance_4 = this;
    this.ds_1 = ParserRuleContext_init_$Create$();
  }
  var Companion_instance_4;
  function Companion_getInstance_4() {
    if (Companion_instance_4 == null)
      new Companion_4();
    return Companion_instance_4;
  }
  function ParserRuleContext_init_$Init$($this) {
    RuleContext_init_$Init$($this);
    ParserRuleContext.call($this);
    return $this;
  }
  function ParserRuleContext_init_$Create$() {
    return ParserRuleContext_init_$Init$(objectCreate(protoOf(ParserRuleContext)));
  }
  function ParserRuleContext_init_$Init$_0(parent, invokingStateNumber, $this) {
    RuleContext_init_$Init$_0(parent, invokingStateNumber, $this);
    ParserRuleContext.call($this);
    return $this;
  }
  protoOf(ParserRuleContext).es = function () {
    var tmp0_safe_receiver = this.br_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.i();
    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
  };
  protoOf(ParserRuleContext).sm = function () {
    var tmp = this.pl_1;
    return (tmp == null ? true : tmp instanceof ParserRuleContext) ? tmp : THROW_CCE();
  };
  protoOf(ParserRuleContext).zr = function (value) {
    var tmp = this;
    tmp.pl_1 = (value == null ? true : value instanceof ParserRuleContext) ? value : THROW_CCE();
  };
  protoOf(ParserRuleContext).fs = function (ctx) {
    this.pl_1 = ctx.pl_1;
    this.ql_1 = ctx.ql_1;
    this.cr_1 = ctx.cr_1;
    this.dr_1 = ctx.dr_1;
    var otherChildren = ctx.br_1;
    if (!(otherChildren == null)) {
      this.br_1 = ArrayList_init_$Create$_0();
      var tmp0_iterator = otherChildren.f();
      while (tmp0_iterator.g()) {
        var child = tmp0_iterator.h();
        if (isInterface(child, ErrorNode)) {
          this.nr(child);
        }
      }
    }
  };
  protoOf(ParserRuleContext).ir = function (listener) {
  };
  protoOf(ParserRuleContext).kr = function (listener) {
  };
  protoOf(ParserRuleContext).gs = function (t) {
    var childrenTemp = this.br_1;
    if (childrenTemp == null) {
      childrenTemp = ArrayList_init_$Create$_0();
      this.br_1 = childrenTemp;
    }
    childrenTemp.j(t);
    return t;
  };
  protoOf(ParserRuleContext).rr = function (ruleInvocation) {
    return this.gs(ruleInvocation);
  };
  protoOf(ParserRuleContext).nr = function (t) {
    t.zr(this);
    return this.gs(t);
  };
  protoOf(ParserRuleContext).fr = function (errorNode) {
    errorNode.zr(this);
    return this.gs(errorNode);
  };
  protoOf(ParserRuleContext).wr = function () {
    var tempChildren = this.br_1;
    if (tempChildren == null)
      null;
    else
      tempChildren.p3(tempChildren.i() - 1 | 0);
  };
  protoOf(ParserRuleContext).hs = function (i) {
    var tempChildren = this.br_1;
    var tmp;
    if (!(tempChildren == null) && i >= 0 && i < tempChildren.i()) {
      tmp = tempChildren.o1(i);
    } else {
      tmp = null;
    }
    return tmp;
  };
  function ParserRuleContext() {
    Companion_getInstance_4();
    this.br_1 = null;
    this.cr_1 = null;
    this.dr_1 = null;
    this.er_1 = null;
  }
  function ProxyErrorListener(delegates) {
    this.ks_1 = delegates;
  }
  protoOf(ProxyErrorListener).rf = function (recognizer, offendingSymbol, line, charPositionInLine, msg, e) {
    var tmp0_iterator = this.ks_1.f();
    while (tmp0_iterator.g()) {
      var listener = tmp0_iterator.h();
      listener.rf(recognizer, offendingSymbol, line, charPositionInLine, msg, e);
    }
  };
  protoOf(ProxyErrorListener).sf = function (recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs) {
    var tmp0_iterator = this.ks_1.f();
    while (tmp0_iterator.g()) {
      var listener = tmp0_iterator.h();
      listener.sf(recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs);
    }
  };
  protoOf(ProxyErrorListener).tf = function (recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs) {
    var tmp0_iterator = this.ks_1.f();
    while (tmp0_iterator.g()) {
      var listener = tmp0_iterator.h();
      listener.tf(recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs);
    }
  };
  protoOf(ProxyErrorListener).uf = function (recognizer, dfa, startIndex, stopIndex, prediction, configs) {
    var tmp0_iterator = this.ks_1.f();
    while (tmp0_iterator.g()) {
      var listener = tmp0_iterator.h();
      listener.uf(recognizer, dfa, startIndex, stopIndex, prediction, configs);
    }
  };
  function RecognitionException(recognizer, inputStream, ctx, message) {
    message = message === VOID ? null : message;
    RuntimeException_init_$Init$_0(message, this);
    captureStack(this, RecognitionException);
    this.zi_1 = recognizer;
    this.aj_1 = inputStream;
    this.bj_1 = ctx;
    this.cj_1 = null;
    this.dj_1 = -1;
    if (!(this.zi_1 == null)) {
      this.dj_1 = this.zi_1.ci_1;
    }
  }
  protoOf(RecognitionException).yh = function () {
    return this.aj_1;
  };
  protoOf(RecognitionException).cl = function () {
    var tmp0_safe_receiver = this.zi_1;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.qk();
    return tmp1_safe_receiver == null ? null : tmp1_safe_receiver.iq(this.dj_1, this.bj_1);
  };
  function Companion_5() {
    Companion_instance_5 = this;
    this.ls_1 = -1;
    this.ms_1 = HashMap_init_$Create$();
    this.ns_1 = HashMap_init_$Create$();
  }
  var Companion_instance_5;
  function Companion_getInstance_5() {
    if (Companion_instance_5 == null)
      new Companion_5();
    return Companion_instance_5;
  }
  function Recognizer() {
    Companion_getInstance_5();
    this.bi_1 = ArrayList_init_$Create$_1(listOf(Companion_getInstance_1().ni_1));
    this.ci_1 = -1;
  }
  protoOf(Recognizer).di = function () {
    return Companion_getInstance_6().qs(this.uo());
  };
  protoOf(Recognizer).sp = function () {
    return this.bi_1;
  };
  protoOf(Recognizer).qp = function () {
    return new ProxyErrorListener(this.sp());
  };
  protoOf(Recognizer).tp = function (_localctx, ruleIndex, predIndex) {
    return true;
  };
  protoOf(Recognizer).up = function (localctx, precedence) {
    return true;
  };
  protoOf(Recognizer).vp = function (_localctx, ruleIndex, actionIndex) {
  };
  function RuleContext_init_$Init$($this) {
    RuleContext.call($this);
    return $this;
  }
  function RuleContext_init_$Create$() {
    return RuleContext_init_$Init$(objectCreate(protoOf(RuleContext)));
  }
  function RuleContext_init_$Init$_0(parent, invokingState, $this) {
    RuleContext.call($this);
    $this.pl_1 = parent;
    $this.ql_1 = invokingState;
    return $this;
  }
  protoOf(RuleContext).kp = function () {
    return this.ql_1 === -1;
  };
  protoOf(RuleContext).xg = function () {
    if (this.es() === 0) {
      return '';
    }
    var builder = StringBuilder_init_$Create$();
    var inductionVariable = 0;
    var last = this.es();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        builder.p7(ensureNotNull(this.hs(i)).xg());
      }
       while (inductionVariable < last);
    return builder.toString();
  };
  protoOf(RuleContext).ul = function () {
    return this.sl_1;
  };
  protoOf(RuleContext).vr = function (value) {
  };
  protoOf(RuleContext).es = function () {
    return this.tl_1;
  };
  protoOf(RuleContext).sm = function () {
    return this.pl_1;
  };
  protoOf(RuleContext).hs = function (i) {
    return null;
  };
  protoOf(RuleContext).is = function (visitor) {
    return visitor.rs(this);
  };
  protoOf(RuleContext).toString = function () {
    return this.js(null, null);
  };
  protoOf(RuleContext).js = function (ruleNames, stop) {
    var buf = StringBuilder_init_$Create$();
    var p = this;
    buf.p7('[');
    while (!(p == null) && !(p === stop)) {
      if (ruleNames == null) {
        if (!p.kp()) {
          buf.la(p.ql_1);
        }
      } else {
        var ruleIndex = p.ul();
        var tmp;
        if (ruleIndex >= 0 && ruleIndex < ruleNames.i()) {
          tmp = ruleNames.o1(ruleIndex);
        } else {
          tmp = ruleIndex.toString();
        }
        var ruleName = tmp;
        buf.p7(ruleName);
      }
      if (!(p.pl_1 == null) && (!(ruleNames == null) || !ensureNotNull(p.pl_1).kp())) {
        buf.p7(' ');
      }
      p = p.pl_1;
    }
    buf.p7(']');
    return buf.toString();
  };
  function RuleContext() {
    this.pl_1 = null;
    this.ql_1 = -1;
    this.rl_1 = Companion_getInstance_25().bh_1;
    this.sl_1 = -1;
    this.tl_1 = 0;
  }
  function RuntimeMetaData() {
    this.ss_1 = '4.13.1';
  }
  protoOf(RuntimeMetaData).ts = function (generatingToolVersion, compileTimeVersion) {
    var runtimeConflictsWithGeneratingTool = false;
    if (!(generatingToolVersion == null)) {
      runtimeConflictsWithGeneratingTool = (!('4.13.1' === generatingToolVersion) && !(this.us('4.13.1') === this.us(generatingToolVersion)));
    }
    var runtimeConflictsWithCompileTimeTool = !('4.13.1' === compileTimeVersion) && !(this.us('4.13.1') === this.us(compileTimeVersion));
    if (runtimeConflictsWithGeneratingTool) {
      System_getInstance().nf_1.lf('ANTLR Tool version ' + generatingToolVersion + ' used for code generation does not match the current runtime version 4.13.1');
    }
    if (runtimeConflictsWithCompileTimeTool) {
      System_getInstance().nf_1.lf('ANTLR Runtime version ' + compileTimeVersion + ' used for parser compilation does not match the current runtime version 4.13.1');
    }
  };
  protoOf(RuntimeMetaData).us = function (version) {
    var firstDot = indexOf(version, _Char___init__impl__6a9atx(46));
    var tmp;
    if (firstDot >= 0) {
      tmp = indexOf(version, _Char___init__impl__6a9atx(46), firstDot + 1 | 0);
    } else {
      tmp = -1;
    }
    var secondDot = tmp;
    var firstDash = indexOf(version, _Char___init__impl__6a9atx(45));
    var referenceLength = version.length;
    if (secondDot >= 0) {
      // Inline function 'kotlin.math.min' call
      var a = referenceLength;
      referenceLength = Math.min(a, secondDot);
    }
    if (firstDash >= 0) {
      // Inline function 'kotlin.math.min' call
      var a_0 = referenceLength;
      referenceLength = Math.min(a_0, firstDash);
    }
    // Inline function 'kotlin.text.substring' call
    var endIndex = referenceLength;
    // Inline function 'kotlin.js.asDynamic' call
    return version.substring(0, endIndex);
  };
  var RuntimeMetaData_instance;
  function RuntimeMetaData_getInstance() {
    return RuntimeMetaData_instance;
  }
  function codePoint($this, index) {
    if (!(0 <= index ? index < $this.ys_1 : false)) {
      return -1;
    }
    var char = charSequenceGet($this.vs_1, $this.xs_1[index]);
    if (isHighSurrogate(char)) {
      var containsUpper = $this.ys_1;
      var containsArg = index + 1 | 0;
      if (0 <= containsArg ? containsArg < containsUpper : false) {
        var low = charSequenceGet($this.vs_1, $this.xs_1[index] + 1 | 0);
        return toCodePoint($this, char, low);
      }
      return -1;
    }
    // Inline function 'kotlin.code' call
    return Char__toInt_impl_vasixd(char);
  }
  function toCodePoint($this, high, low) {
    // Inline function 'kotlin.code' call
    var tmp = Char__toInt_impl_vasixd(high) << 10;
    // Inline function 'kotlin.code' call
    return (tmp + Char__toInt_impl_vasixd(low) | 0) + -56613888 | 0;
  }
  function StringCharStream(source, sourceName) {
    sourceName = sourceName === VOID ? '<unknown>' : sourceName;
    this.vs_1 = source;
    this.ws_1 = sourceName;
    this.zs_1 = 0;
    var tmp0_container = codePointIndicesFast(this.vs_1);
    var codePointIndices = tmp0_container.sb();
    var size = tmp0_container.tb();
    this.xs_1 = codePointIndices;
    this.ys_1 = size;
  }
  protoOf(StringCharStream).hg = function () {
    if ((this.ys_1 - this.zs_1 | 0) === 0) {
      // Inline function 'com.strumenta.antlrkotlin.runtime.assert' call
      // Inline function 'kotlin.contracts.contract' call
      if (!(this.ig(1) === -1)) {
        throw AssertionError_init_$Create$(null);
      }
      throw IllegalStateException_init_$Create$('cannot consume EOF');
    }
    this.zs_1 = this.zs_1 + 1 | 0;
  };
  protoOf(StringCharStream).ag = function () {
    return this.zs_1;
  };
  protoOf(StringCharStream).gg = function () {
    return this.ys_1;
  };
  protoOf(StringCharStream).bg = function () {
    return -1;
  };
  protoOf(StringCharStream).cg = function (marker) {
  };
  protoOf(StringCharStream).dg = function (index) {
    this.zs_1 = index;
  };
  protoOf(StringCharStream).toString = function () {
    return this.ug(Companion_getInstance_25().dh(0, this.ys_1 - 1 | 0));
  };
  protoOf(StringCharStream).ug = function (interval) {
    if (interval.vg_1 >= this.ys_1 || interval.wg_1 < 0) {
      return '';
    }
    var start = this.xs_1[interval.vg_1];
    var bPlus1 = interval.wg_1 + 1 | 0;
    var tmp;
    if (bPlus1 < this.ys_1) {
      tmp = this.xs_1[bPlus1];
    } else {
      tmp = this.vs_1.length;
    }
    var stop = tmp;
    // Inline function 'kotlin.text.substring' call
    // Inline function 'kotlin.js.asDynamic' call
    return this.vs_1.substring(start, stop);
  };
  protoOf(StringCharStream).ig = function (i) {
    return i < 0 ? codePoint(this, this.zs_1 + i | 0) : i > 0 ? codePoint(this, (this.zs_1 + i | 0) - 1 | 0) : 0;
  };
  function Companion_6() {
    Companion_instance_6 = this;
    var tmp = this;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp.os_1 = fillArrayVal(Array(0), null);
    this.ps_1 = new VocabularyImpl(this.os_1, this.os_1, this.os_1);
  }
  protoOf(Companion_6).qs = function (tokenNames) {
    // Inline function 'kotlin.collections.isNullOrEmpty' call
    var tmp;
    if (tokenNames == null) {
      tmp = true;
    } else {
      // Inline function 'kotlin.collections.isEmpty' call
      tmp = tokenNames.length === 0;
    }
    if (tmp) {
      return this.ps_1;
    }
    var literalNames = copyOf(tokenNames, tokenNames.length);
    var symbolicNames = copyOf(tokenNames, tokenNames.length);
    var inductionVariable = 0;
    var last = tokenNames.length - 1 | 0;
    if (inductionVariable <= last)
      $l$loop_0: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tokenName = tokenNames[i];
        // Inline function 'kotlin.text.isNotEmpty' call
        if (charSequenceLength(tokenName) > 0) {
          var firstChar = charSequenceGet(tokenName, 0);
          if (firstChar === _Char___init__impl__6a9atx(39)) {
            symbolicNames[i] = null;
            continue $l$loop_0;
          } else if (isUpperCase(firstChar)) {
            literalNames[i] = null;
            continue $l$loop_0;
          }
        }
        literalNames[i] = null;
        symbolicNames[i] = null;
      }
       while (inductionVariable <= last);
    return new VocabularyImpl(literalNames, symbolicNames, (!(tokenNames == null) ? isArray(tokenNames) : false) ? tokenNames : THROW_CCE());
  };
  var Companion_instance_6;
  function Companion_getInstance_6() {
    if (Companion_instance_6 == null)
      new Companion_6();
    return Companion_instance_6;
  }
  function VocabularyImpl(literalNames, symbolicNames, displayNames) {
    Companion_getInstance_6();
    displayNames = displayNames === VOID ? null : displayNames;
    var tmp = this;
    tmp.at_1 = literalNames == null ? Companion_getInstance_6().os_1 : literalNames;
    var tmp_0 = this;
    tmp_0.bt_1 = symbolicNames == null ? Companion_getInstance_6().os_1 : symbolicNames;
    var tmp_1 = this;
    tmp_1.ct_1 = displayNames == null ? Companion_getInstance_6().os_1 : displayNames;
    var tmp_2 = this;
    var tmp2 = this.ct_1.length;
    var tmp0 = this.at_1.length;
    // Inline function 'kotlin.math.max' call
    var b = this.bt_1.length;
    // Inline function 'kotlin.math.max' call
    var b_0 = Math.max(tmp0, b);
    tmp_2.dt_1 = Math.max(tmp2, b_0) - 1 | 0;
  }
  protoOf(VocabularyImpl).et = function (tokenType) {
    var tmp;
    if (0 <= tokenType ? tokenType <= (this.at_1.length - 1 | 0) : false) {
      tmp = this.at_1[tokenType];
    } else {
      tmp = null;
    }
    return tmp;
  };
  protoOf(VocabularyImpl).ft = function (tokenType) {
    if (0 <= tokenType ? tokenType <= (this.bt_1.length - 1 | 0) : false) {
      return this.bt_1[tokenType];
    }
    return tokenType === -1 ? 'EOF' : null;
  };
  protoOf(VocabularyImpl).ei = function (tokenType) {
    if (0 <= tokenType ? tokenType <= (this.ct_1.length - 1 | 0) : false) {
      var displayName = this.ct_1[tokenType];
      if (!(displayName == null)) {
        return displayName;
      }
    }
    var literalName = this.et(tokenType);
    if (!(literalName == null)) {
      return literalName;
    }
    var symbolicName = this.ft(tokenType);
    return symbolicName == null ? tokenType.toString() : symbolicName;
  };
  function WritableToken() {
  }
  function Companion_7() {
    this.gt_1 = 0;
  }
  var Companion_instance_7;
  function Companion_getInstance_7() {
    return Companion_instance_7;
  }
  function ATN(grammarType, maxTokenType) {
    this.dk_1 = grammarType;
    this.ek_1 = maxTokenType;
    this.fk_1 = ArrayList_init_$Create$_0();
    this.gk_1 = ArrayList_init_$Create$_0();
    this.hk_1 = null;
    this.ik_1 = null;
    this.jk_1 = LinkedHashMap_init_$Create$();
    this.kk_1 = null;
    this.lk_1 = null;
    this.mk_1 = ArrayList_init_$Create$_0();
  }
  protoOf(ATN).ht = function () {
    return this.gk_1.i();
  };
  protoOf(ATN).em = function (s, ctx) {
    var anal = new LL1Analyzer(this);
    return anal.jt(s, ctx);
  };
  protoOf(ATN).rk = function (s) {
    var nextTokenWithinRule = s.xk_1;
    if (!(nextTokenWithinRule == null)) {
      return nextTokenWithinRule;
    }
    nextTokenWithinRule = this.em(s, null);
    nextTokenWithinRule.kt(true);
    s.xk_1 = nextTokenWithinRule;
    return nextTokenWithinRule;
  };
  protoOf(ATN).lt = function (state) {
    if (!(state == null)) {
      state.sk_1 = this;
      state.tk_1 = this.fk_1.i();
    }
    this.fk_1.j(state);
  };
  protoOf(ATN).mt = function (s) {
    this.gk_1.j(s);
    s.ut_1 = this.gk_1.i() - 1 | 0;
    return s.ut_1;
  };
  protoOf(ATN).wt = function (decision) {
    var tmp;
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!this.gk_1.r()) {
      tmp = this.gk_1.o1(decision);
    } else {
      tmp = null;
    }
    return tmp;
  };
  protoOf(ATN).iq = function (stateNumber, context) {
    if (stateNumber < 0 || stateNumber >= this.fk_1.i()) {
      throw IllegalArgumentException_init_$Create$('Invalid state number.');
    }
    var ctx = context;
    var s = this.fk_1.o1(stateNumber);
    var following = this.rk(ensureNotNull(s));
    if (!following.oc(-2)) {
      return following;
    }
    var expected = IntervalSet_init_$Create$();
    expected.rm(following);
    expected.tm(-2);
    while (!(ctx == null) && ctx.ql_1 >= 0 && following.oc(-2)) {
      var invokingState = this.fk_1.o1(ctx.ql_1);
      var tmp = ensureNotNull(invokingState).dm(0);
      var rt = tmp instanceof RuleTransition ? tmp : THROW_CCE();
      following = this.rk(rt.om_1);
      expected.rm(following);
      expected.tm(-2);
      ctx = ctx.sm();
    }
    if (following.oc(-2)) {
      expected.zj(-1);
    }
    return expected;
  };
  function Companion_8() {
    this.xt_1 = 1073741824;
  }
  var Companion_instance_8;
  function Companion_getInstance_8() {
    return Companion_instance_8;
  }
  function ATNConfig_init_$Init$(state, alt, context, semanticContext, $this) {
    semanticContext = semanticContext === VOID ? Empty_getInstance() : semanticContext;
    ATNConfig.call($this);
    $this.yt_1 = state;
    $this.zt_1 = alt;
    $this.au_1 = context;
    $this.cu_1 = semanticContext;
    return $this;
  }
  function ATNConfig_init_$Create$(state, alt, context, semanticContext) {
    return ATNConfig_init_$Init$(state, alt, context, semanticContext, objectCreate(protoOf(ATNConfig)));
  }
  function ATNConfig_init_$Init$_0(c, state, semanticContext, $this) {
    ATNConfig_init_$Init$_2(c, state, c.au_1, semanticContext, $this);
    return $this;
  }
  function ATNConfig_init_$Create$_0(c, state, semanticContext) {
    return ATNConfig_init_$Init$_0(c, state, semanticContext, objectCreate(protoOf(ATNConfig)));
  }
  function ATNConfig_init_$Init$_1(c, semanticContext, $this) {
    ATNConfig_init_$Init$_2(c, c.yt_1, c.au_1, semanticContext, $this);
    return $this;
  }
  function ATNConfig_init_$Create$_1(c, semanticContext) {
    return ATNConfig_init_$Init$_1(c, semanticContext, objectCreate(protoOf(ATNConfig)));
  }
  function ATNConfig_init_$Init$_2(c, state, context, semanticContext, $this) {
    context = context === VOID ? c.au_1 : context;
    semanticContext = semanticContext === VOID ? c.cu_1 : semanticContext;
    ATNConfig.call($this);
    $this.yt_1 = state;
    $this.zt_1 = c.zt_1;
    $this.au_1 = context;
    $this.cu_1 = semanticContext;
    $this.bu_1 = c.bu_1;
    return $this;
  }
  function ATNConfig_init_$Create$_2(c, state, context, semanticContext) {
    return ATNConfig_init_$Init$_2(c, state, context, semanticContext, objectCreate(protoOf(ATNConfig)));
  }
  protoOf(ATNConfig).du = function () {
    return this.bu_1 & -1073741825;
  };
  protoOf(ATNConfig).eu = function (value) {
    var tmp;
    if (value) {
      this.bu_1 = this.bu_1 | 1073741824;
      tmp = Unit_instance;
    } else {
      this.bu_1 = this.bu_1 & -1073741825;
      tmp = Unit_instance;
    }
    return tmp;
  };
  protoOf(ATNConfig).fu = function () {
    return !((this.bu_1 & 1073741824) === 0);
  };
  protoOf(ATNConfig).equals = function (other) {
    var tmp;
    if (other instanceof ATNConfig) {
      tmp = this.gu(other);
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(ATNConfig).gu = function (other) {
    if (this === other) {
      return true;
    }
    if (other == null) {
      return false;
    }
    return this.yt_1.tk_1 === other.yt_1.tk_1 && this.zt_1 === other.zt_1 && equals(this.au_1, other.au_1) && equals(this.cu_1, other.cu_1) && this.fu() === other.fu();
  };
  protoOf(ATNConfig).hashCode = function () {
    var hashCode = MurmurHash_instance.iu(7);
    hashCode = MurmurHash_instance.ju(hashCode, this.yt_1.tk_1);
    hashCode = MurmurHash_instance.ju(hashCode, this.zt_1);
    hashCode = MurmurHash_instance.ku(hashCode, this.au_1);
    hashCode = MurmurHash_instance.ku(hashCode, this.cu_1);
    hashCode = MurmurHash_instance.lu(hashCode, 4);
    return hashCode;
  };
  protoOf(ATNConfig).toString = function () {
    return this.mu(null, true);
  };
  protoOf(ATNConfig).mu = function (recog, showAlt) {
    var buf = StringBuilder_init_$Create$();
    buf.p7('(');
    buf.o7(this.yt_1);
    if (showAlt) {
      buf.p7(',');
      buf.la(this.zt_1);
    }
    if (!(this.au_1 == null)) {
      buf.p7(',[');
      buf.p7(toString_0(ensureNotNull(this.au_1)));
      buf.p7(']');
    }
    if (!(this.cu_1 === Empty_getInstance())) {
      buf.p7(',');
      buf.o7(this.cu_1);
    }
    if (this.du() > 0) {
      buf.p7(',up=');
      buf.la(this.du());
    }
    buf.p7(')');
    return buf.toString();
  };
  function ATNConfig() {
    this.au_1 = null;
    this.bu_1 = 0;
  }
  function ConfigHashSet() {
    AbstractConfigHashSet.call(this, ConfigEqualityComparator_getInstance());
  }
  function ConfigEqualityComparator() {
    ConfigEqualityComparator_instance = this;
    AbstractEqualityComparator.call(this);
  }
  protoOf(ConfigEqualityComparator).nv = function (obj) {
    var hashCode_0 = 7;
    hashCode_0 = imul(31, hashCode_0) + obj.yt_1.tk_1 | 0;
    hashCode_0 = imul(31, hashCode_0) + obj.zt_1 | 0;
    hashCode_0 = imul(31, hashCode_0) + hashCode(obj.cu_1) | 0;
    return hashCode_0;
  };
  protoOf(ConfigEqualityComparator).ov = function (obj) {
    return this.nv(obj instanceof ATNConfig ? obj : THROW_CCE());
  };
  protoOf(ConfigEqualityComparator).pv = function (a, b) {
    if (a === b) {
      return true;
    }
    if (a == null || b == null) {
      return false;
    }
    return a.yt_1.tk_1 === b.yt_1.tk_1 && a.zt_1 === b.zt_1 && equals(a.cu_1, b.cu_1);
  };
  protoOf(ConfigEqualityComparator).qv = function (a, b) {
    var tmp = (a == null ? true : a instanceof ATNConfig) ? a : THROW_CCE();
    return this.pv(tmp, (b == null ? true : b instanceof ATNConfig) ? b : THROW_CCE());
  };
  var ConfigEqualityComparator_instance;
  function ConfigEqualityComparator_getInstance() {
    if (ConfigEqualityComparator_instance == null)
      new ConfigEqualityComparator();
    return ConfigEqualityComparator_instance;
  }
  function AbstractConfigHashSet(comparator, initialCapacity, initialBucketCapacity) {
    initialCapacity = initialCapacity === VOID ? 16 : initialCapacity;
    initialBucketCapacity = initialBucketCapacity === VOID ? 2 : initialBucketCapacity;
    Array2DHashSet.call(this, comparator, initialCapacity, initialBucketCapacity);
  }
  protoOf(AbstractConfigHashSet).uu = function (o) {
    var tmp;
    if (!(o instanceof ATNConfig)) {
      tmp = null;
    } else {
      tmp = o;
    }
    return tmp;
  };
  protoOf(AbstractConfigHashSet).vu = function (capacity) {
    // Inline function 'kotlin.arrayOfNulls' call
    return fillArrayVal(Array(capacity), null);
  };
  protoOf(AbstractConfigHashSet).wu = function (capacity) {
    // Inline function 'kotlin.arrayOfNulls' call
    return fillArrayVal(Array(capacity), null);
  };
  function ATNConfigSet(fullCtx) {
    fullCtx = fullCtx === VOID ? true : fullCtx;
    this.rv_1 = fullCtx;
    this.sv_1 = new ConfigHashSet();
    this.tv_1 = ArrayList_init_$Create$(7);
    this.uv_1 = 0;
    this.vv_1 = null;
    this.wv_1 = false;
    this.xv_1 = false;
    this.yv_1 = -1;
    this.zv_1 = false;
  }
  protoOf(ATNConfigSet).aw = function () {
    var alts = BitSet_init_$Create$();
    var tmp0_iterator = this.tv_1.f();
    while (tmp0_iterator.g()) {
      var config = tmp0_iterator.h();
      alts.cw(config.zt_1);
    }
    return alts;
  };
  protoOf(ATNConfigSet).kt = function (value) {
    this.zv_1 = value;
    this.sv_1 = null;
  };
  protoOf(ATNConfigSet).dw = function (element) {
    return this.ew(element, null);
  };
  protoOf(ATNConfigSet).j = function (element) {
    return this.dw(element instanceof ATNConfig ? element : THROW_CCE());
  };
  protoOf(ATNConfigSet).ew = function (config, mergeCache) {
    if (this.zv_1) {
      throw IllegalStateException_init_$Create$('This set is readonly');
    }
    if (!(config.cu_1 === Empty_getInstance())) {
      this.wv_1 = true;
    }
    if (config.du() > 0) {
      this.xv_1 = true;
    }
    var existing = ensureNotNull(this.sv_1).ev(config);
    if (existing === config) {
      this.yv_1 = -1;
      this.tv_1.j(config);
      return true;
    }
    var rootIsWildcard = !this.rv_1;
    var merged = Companion_instance_17.iw(existing.au_1, config.au_1, rootIsWildcard, mergeCache);
    var tmp = existing;
    var tmp0 = existing.bu_1;
    // Inline function 'kotlin.math.max' call
    var b = config.bu_1;
    tmp.bu_1 = Math.max(tmp0, b);
    if (config.fu()) {
      existing.eu(true);
    }
    existing.au_1 = merged;
    return true;
  };
  protoOf(ATNConfigSet).jw = function () {
    return this.tv_1;
  };
  protoOf(ATNConfigSet).kw = function (interpreter) {
    if (this.zv_1) {
      throw IllegalStateException_init_$Create$('This set is readonly');
    }
    if (ensureNotNull(this.sv_1).r()) {
      return Unit_instance;
    }
    var tmp0_iterator = this.tv_1.f();
    while (tmp0_iterator.g()) {
      var config = tmp0_iterator.h();
      config.au_1 = interpreter.lw(ensureNotNull(config.au_1));
    }
  };
  protoOf(ATNConfigSet).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof ATNConfigSet)) {
      return false;
    }
    return equals(this.tv_1, other.tv_1) && this.rv_1 === other.rv_1 && this.uv_1 === other.uv_1 && this.vv_1 === other.vv_1 && this.wv_1 === other.wv_1 && this.xv_1 === other.xv_1;
  };
  protoOf(ATNConfigSet).hashCode = function () {
    if (this.zv_1) {
      if (this.yv_1 === -1) {
        this.yv_1 = hashCode(this.tv_1);
      }
      return this.yv_1;
    }
    return hashCode(this.tv_1);
  };
  protoOf(ATNConfigSet).i = function () {
    return this.tv_1.i();
  };
  protoOf(ATNConfigSet).r = function () {
    return this.tv_1.r();
  };
  protoOf(ATNConfigSet).f = function () {
    return this.tv_1.f();
  };
  protoOf(ATNConfigSet).toString = function () {
    var buf = StringBuilder_init_$Create$();
    buf.p7(toString_0(this.jw()));
    if (this.wv_1) {
      buf.p7(',hasSemanticContext=');
      buf.ka(this.wv_1);
    }
    if (!(this.uv_1 === 0)) {
      buf.p7(',uniqueAlt=');
      buf.la(this.uv_1);
    }
    if (!(this.vv_1 == null)) {
      buf.p7(',conflictingAlts=');
      buf.o7(this.vv_1);
    }
    if (this.xv_1) {
      buf.p7(',dipsIntoOuterContext');
    }
    return buf.toString();
  };
  protoOf(ATNConfigSet).mw = function (elements) {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(ATNConfigSet).n1 = function (elements) {
    return this.mw(elements);
  };
  function Companion_9() {
    Companion_instance_9 = this;
    var tmp = this;
    // Inline function 'kotlin.also' call
    var this_0 = ATNDeserializationOptions_init_$Create$();
    // Inline function 'org.antlr.v4.kotlinruntime.atn.Companion.defaultOptions.<anonymous>' call
    this_0.qw();
    tmp.rw_1 = this_0;
  }
  var Companion_instance_9;
  function Companion_getInstance_9() {
    if (Companion_instance_9 == null)
      new Companion_9();
    return Companion_instance_9;
  }
  function ATNDeserializationOptions_init_$Init$($this) {
    ATNDeserializationOptions.call($this);
    $this.ow_1 = true;
    $this.pw_1 = false;
    return $this;
  }
  function ATNDeserializationOptions_init_$Create$() {
    return ATNDeserializationOptions_init_$Init$(objectCreate(protoOf(ATNDeserializationOptions)));
  }
  protoOf(ATNDeserializationOptions).sw = function () {
    return this.ow_1;
  };
  protoOf(ATNDeserializationOptions).tw = function () {
    return this.pw_1;
  };
  protoOf(ATNDeserializationOptions).qw = function () {
    this.nw_1 = true;
  };
  function ATNDeserializationOptions() {
    Companion_getInstance_9();
    this.nw_1 = false;
    this.ow_1 = false;
    this.pw_1 = false;
  }
  function Companion_10() {
    this.uw_1 = 4;
  }
  var Companion_instance_10;
  function Companion_getInstance_10() {
    return Companion_instance_10;
  }
  function deserializeSets($this, data, p, sets) {
    var pp = p;
    var tmp0 = pp;
    pp = tmp0 + 1 | 0;
    var nSets = data[tmp0];
    var inductionVariable = 0;
    if (inductionVariable < nSets)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var nIntervals = data[pp];
        pp = pp + 1 | 0;
        var set = IntervalSet_init_$Create$();
        sets.j(set);
        var tmp3 = pp;
        pp = tmp3 + 1 | 0;
        var containsEof = !(data[tmp3] === 0);
        if (containsEof) {
          set.zj(-1);
        }
        var inductionVariable_0 = 0;
        if (inductionVariable_0 < nIntervals)
          do {
            var j = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp5 = pp;
            pp = tmp5 + 1 | 0;
            var a = data[tmp5];
            var tmp6 = pp;
            pp = tmp6 + 1 | 0;
            var b = data[tmp6];
            set.vw(a, b);
          }
           while (inductionVariable_0 < nIntervals);
      }
       while (inductionVariable < nSets);
    return pp;
  }
  function ATNDeserializer(deserializationOptions) {
    deserializationOptions = deserializationOptions === VOID ? Companion_getInstance_9().rw_1 : deserializationOptions;
    this.ww_1 = deserializationOptions;
  }
  protoOf(ATNDeserializer).xw = function (data) {
    return this.zw(this.yw(data));
  };
  protoOf(ATNDeserializer).zw = function (data) {
    var p = {_v: 0};
    var tmp0 = p._v;
    p._v = tmp0 + 1 | 0;
    var version = data[tmp0];
    if (!(version === 4)) {
      var reason = 'Could not deserialize ATN with version ' + version + ' (expected 4).';
      throw UnsupportedOperationException_init_$Create$_0(reason);
    }
    var tmp = get_entries();
    var tmp1 = p._v;
    p._v = tmp1 + 1 | 0;
    var grammarType = tmp.o1(data[tmp1]);
    var tmp2 = p._v;
    p._v = tmp2 + 1 | 0;
    var maxTokenType = data[tmp2];
    var atn = new ATN(grammarType, maxTokenType);
    var loopBackStateNumbers = ArrayList_init_$Create$_0();
    var endStateNumbers = ArrayList_init_$Create$_0();
    var tmp3 = p._v;
    p._v = tmp3 + 1 | 0;
    var nStates = data[tmp3];
    var inductionVariable = 0;
    if (inductionVariable < nStates)
      $l$loop: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp5 = p._v;
        p._v = tmp5 + 1 | 0;
        var sType = data[tmp5];
        if (sType === 0) {
          atn.lt(null);
          continue $l$loop;
        }
        var tmp6 = p._v;
        p._v = tmp6 + 1 | 0;
        var ruleIndex = data[tmp6];
        var s = this.ax(sType, ruleIndex);
        if (sType === 12) {
          var tmp7 = p._v;
          p._v = tmp7 + 1 | 0;
          var loopBackStateNumber = data[tmp7];
          loopBackStateNumbers.j(new Pair(s instanceof LoopEndState ? s : THROW_CCE(), loopBackStateNumber));
        } else {
          if (s instanceof BlockStartState) {
            var tmp8 = p._v;
            p._v = tmp8 + 1 | 0;
            var endStateNumber = data[tmp8];
            endStateNumbers.j(new Pair(s, endStateNumber));
          }
        }
        atn.lt(s);
      }
       while (inductionVariable < nStates);
    var tmp9_iterator = loopBackStateNumbers.f();
    while (tmp9_iterator.g()) {
      var pair = tmp9_iterator.h();
      pair.qb_1.ix_1 = atn.fk_1.o1(pair.rb_1);
    }
    var tmp10_iterator = endStateNumbers.f();
    while (tmp10_iterator.g()) {
      var pair_0 = tmp10_iterator.h();
      var tmp_0 = pair_0.qb_1;
      var tmp_1 = atn.fk_1.o1(pair_0.rb_1);
      tmp_0.tx_1 = tmp_1 instanceof BlockEndState ? tmp_1 : THROW_CCE();
    }
    var tmp11 = p._v;
    p._v = tmp11 + 1 | 0;
    var numNonGreedyStates = data[tmp11];
    var inductionVariable_0 = 0;
    if (inductionVariable_0 < numNonGreedyStates)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var tmp13 = p._v;
        p._v = tmp13 + 1 | 0;
        var stateNumber = data[tmp13];
        var tmp_2 = atn.fk_1.o1(stateNumber);
        (tmp_2 instanceof DecisionState ? tmp_2 : THROW_CCE()).vt_1 = true;
      }
       while (inductionVariable_0 < numNonGreedyStates);
    var tmp14 = p._v;
    p._v = tmp14 + 1 | 0;
    var numPrecedenceStates = data[tmp14];
    var inductionVariable_1 = 0;
    if (inductionVariable_1 < numPrecedenceStates)
      do {
        var i_1 = inductionVariable_1;
        inductionVariable_1 = inductionVariable_1 + 1 | 0;
        var tmp16 = p._v;
        p._v = tmp16 + 1 | 0;
        var stateNumber_0 = data[tmp16];
        var tmp_3 = atn.fk_1.o1(stateNumber_0);
        (tmp_3 instanceof RuleStartState ? tmp_3 : THROW_CCE()).cy_1 = true;
      }
       while (inductionVariable_1 < numPrecedenceStates);
    var tmp17 = p._v;
    p._v = tmp17 + 1 | 0;
    var nRules = data[tmp17];
    if (atn.dk_1.equals(ATNType_LEXER_getInstance())) {
      atn.kk_1 = new Int32Array(nRules);
    }
    var tmp_4 = atn;
    var tmp_5 = 0;
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp_6 = fillArrayVal(Array(nRules), null);
    while (tmp_5 < nRules) {
      var tmp_7 = tmp_5;
      var tmp0_0 = p._v;
      p._v = tmp0_0 + 1 | 0;
      var s_0 = data[tmp0_0];
      var tmp_8 = atn.fk_1.o1(s_0);
      var startState = tmp_8 instanceof RuleStartState ? tmp_8 : THROW_CCE();
      if (atn.dk_1.equals(ATNType_LEXER_getInstance())) {
        var tmp1_0 = p._v;
        p._v = tmp1_0 + 1 | 0;
        var tokenType = data[tmp1_0];
        ensureNotNull(atn.kk_1)[tmp_7] = tokenType;
      }
      tmp_6[tmp_7] = startState;
      tmp_5 = tmp_5 + 1 | 0;
    }
    tmp_4.hk_1 = tmp_6;
    var tmp_9 = atn;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp_9.ik_1 = fillArrayVal(Array(nRules), null);
    var tmp18_iterator = atn.fk_1.f();
    $l$loop_0: while (tmp18_iterator.g()) {
      var state = tmp18_iterator.h();
      if (!(state instanceof RuleStopState)) {
        continue $l$loop_0;
      }
      ensureNotNull(atn.ik_1)[state.uk_1] = state;
      ensureNotNull(atn.hk_1)[state.uk_1].by_1 = state;
    }
    var tmp19 = p._v;
    p._v = tmp19 + 1 | 0;
    var nModes = data[tmp19];
    var inductionVariable_2 = 0;
    if (inductionVariable_2 < nModes)
      do {
        var i_2 = inductionVariable_2;
        inductionVariable_2 = inductionVariable_2 + 1 | 0;
        var tmp21 = p._v;
        p._v = tmp21 + 1 | 0;
        var s_1 = data[tmp21];
        var tmp_10 = atn.fk_1.o1(s_1);
        atn.mk_1.j(tmp_10 instanceof TokensStartState ? tmp_10 : THROW_CCE());
      }
       while (inductionVariable_2 < nModes);
    var sets = ArrayList_init_$Create$_0();
    p._v = deserializeSets(this, data, p._v, sets);
    var tmp22 = p._v;
    p._v = tmp22 + 1 | 0;
    var nEdges = data[tmp22];
    var inductionVariable_3 = 0;
    if (inductionVariable_3 < nEdges)
      do {
        var i_3 = inductionVariable_3;
        inductionVariable_3 = inductionVariable_3 + 1 | 0;
        var src = data[p._v];
        var trg = data[p._v + 1 | 0];
        var ttype = data[p._v + 2 | 0];
        var arg1 = data[p._v + 3 | 0];
        var arg2 = data[p._v + 4 | 0];
        var arg3 = data[p._v + 5 | 0];
        var trans = this.ey(atn, ttype, src, trg, arg1, arg2, arg3, sets);
        var srcState = atn.fk_1.o1(src);
        ensureNotNull(srcState).fy(trans);
        p._v = p._v + 6 | 0;
      }
       while (inductionVariable_3 < nEdges);
    var tmp24_iterator = atn.fk_1.f();
    while (tmp24_iterator.g()) {
      var state_0 = tmp24_iterator.h();
      var inductionVariable_4 = 0;
      var last = ensureNotNull(state_0).gy();
      if (inductionVariable_4 < last)
        $l$loop_1: do {
          var i_4 = inductionVariable_4;
          inductionVariable_4 = inductionVariable_4 + 1 | 0;
          var tmp_11 = state_0.dm(i_4);
          var tmp26_elvis_lhs = tmp_11 instanceof RuleTransition ? tmp_11 : null;
          var tmp_12;
          if (tmp26_elvis_lhs == null) {
            continue $l$loop_1;
          } else {
            tmp_12 = tmp26_elvis_lhs;
          }
          var t = tmp_12;
          var outermostPrecedenceReturn = -1;
          if (ensureNotNull(atn.hk_1)[t.bm_1.uk_1].cy_1) {
            if (t.nm_1 === 0) {
              outermostPrecedenceReturn = t.bm_1.uk_1;
            }
          }
          var returnTransition = new EpsilonTransition(t.om_1, outermostPrecedenceReturn);
          ensureNotNull(ensureNotNull(atn.ik_1)[t.bm_1.uk_1]).fy(returnTransition);
        }
         while (inductionVariable_4 < last);
    }
    var tmp27_iterator = atn.fk_1.f();
    while (tmp27_iterator.g()) {
      var state_1 = tmp27_iterator.h();
      if (state_1 instanceof BlockStartState) {
        var tmp28_elvis_lhs = state_1.tx_1;
        var tmp_13;
        if (tmp28_elvis_lhs == null) {
          throw IllegalStateException_init_$Create$_0();
        } else {
          tmp_13 = tmp28_elvis_lhs;
        }
        var endState = tmp_13;
        if (!(endState.oy_1 == null)) {
          throw IllegalStateException_init_$Create$_0();
        }
        endState.oy_1 = state_1;
      }
      if (state_1 instanceof PlusLoopbackState) {
        var inductionVariable_5 = 0;
        var last_0 = state_1.gy();
        if (inductionVariable_5 < last_0)
          do {
            var i_5 = inductionVariable_5;
            inductionVariable_5 = inductionVariable_5 + 1 | 0;
            var target = state_1.dm(i_5).bm_1;
            if (target instanceof PlusBlockStartState) {
              target.mz_1 = state_1;
            }
          }
           while (inductionVariable_5 < last_0);
      } else {
        if (state_1 instanceof StarLoopbackState) {
          var inductionVariable_6 = 0;
          var last_1 = state_1.gy();
          if (inductionVariable_6 < last_1)
            do {
              var i_6 = inductionVariable_6;
              inductionVariable_6 = inductionVariable_6 + 1 | 0;
              var target_0 = state_1.dm(i_6).bm_1;
              if (target_0 instanceof StarLoopEntryState) {
                target_0.zy_1 = state_1;
              }
            }
             while (inductionVariable_6 < last_1);
        }
      }
    }
    var tmp31 = p._v;
    p._v = tmp31 + 1 | 0;
    var nDecisions = data[tmp31];
    var inductionVariable_7 = 1;
    if (inductionVariable_7 <= nDecisions)
      do {
        var i_7 = inductionVariable_7;
        inductionVariable_7 = inductionVariable_7 + 1 | 0;
        var tmp33 = p._v;
        p._v = tmp33 + 1 | 0;
        var s_2 = data[tmp33];
        var tmp_14 = atn.fk_1.o1(s_2);
        var decState = tmp_14 instanceof DecisionState ? tmp_14 : THROW_CCE();
        atn.gk_1.j(decState);
        decState.ut_1 = i_7 - 1 | 0;
      }
       while (!(i_7 === nDecisions));
    if (atn.dk_1.equals(ATNType_LEXER_getInstance())) {
      var tmp_15 = atn;
      var tmp_16 = 0;
      var tmp34 = p._v;
      p._v = tmp34 + 1 | 0;
      var tmp_17 = data[tmp34];
      // Inline function 'kotlin.arrayOfNulls' call
      var tmp_18 = fillArrayVal(Array(tmp_17), null);
      while (tmp_16 < tmp_17) {
        var tmp_19 = tmp_16;
        var tmp_20 = get_entries_0();
        var tmp0_1 = p._v;
        p._v = tmp0_1 + 1 | 0;
        var actionType = tmp_20.o1(data[tmp0_1]);
        var tmp1_1 = p._v;
        p._v = tmp1_1 + 1 | 0;
        var data1 = data[tmp1_1];
        var tmp2_0 = p._v;
        p._v = tmp2_0 + 1 | 0;
        var data2 = data[tmp2_0];
        tmp_18[tmp_19] = this.oz(actionType, data1, data2);
        tmp_16 = tmp_16 + 1 | 0;
      }
      tmp_15.lk_1 = tmp_18;
    }
    this.pz(atn);
    if (this.ww_1.sw()) {
      this.qz(atn);
    }
    if (this.ww_1.tw() && atn.dk_1.equals(ATNType_PARSER_getInstance())) {
      atn.kk_1 = new Int32Array(ensureNotNull(atn.hk_1).length);
      var inductionVariable_8 = 0;
      var last_2 = ensureNotNull(atn.hk_1).length - 1 | 0;
      if (inductionVariable_8 <= last_2)
        do {
          var i_8 = inductionVariable_8;
          inductionVariable_8 = inductionVariable_8 + 1 | 0;
          ensureNotNull(atn.kk_1)[i_8] = (atn.ek_1 + i_8 | 0) + 1 | 0;
        }
         while (inductionVariable_8 <= last_2);
      var inductionVariable_9 = 0;
      var last_3 = ensureNotNull(atn.hk_1).length - 1 | 0;
      if (inductionVariable_9 <= last_3)
        do {
          var i_9 = inductionVariable_9;
          inductionVariable_9 = inductionVariable_9 + 1 | 0;
          var bypassStart = new BasicBlockStartState();
          bypassStart.uk_1 = i_9;
          atn.lt(bypassStart);
          var bypassStop = new BlockEndState();
          bypassStop.uk_1 = i_9;
          atn.lt(bypassStop);
          bypassStart.tx_1 = bypassStop;
          atn.mt(bypassStart);
          bypassStop.oy_1 = bypassStart;
          var endState_0;
          var excludeTransition = null;
          if (ensureNotNull(atn.hk_1)[i_9].cy_1) {
            endState_0 = null;
            var tmp37_iterator = atn.fk_1.f();
            $l$loop_5: while (tmp37_iterator.g()) {
              var state_2 = tmp37_iterator.h();
              if (!(ensureNotNull(state_2).uk_1 === i_9)) {
                continue $l$loop_5;
              }
              if (!(state_2 instanceof StarLoopEntryState)) {
                continue $l$loop_5;
              }
              var maybeLoopEndState = state_2.dm(state_2.gy() - 1 | 0).bm_1;
              if (!(maybeLoopEndState instanceof LoopEndState)) {
                continue $l$loop_5;
              }
              var tmp_21;
              if (maybeLoopEndState.vk_1) {
                var tmp_22 = maybeLoopEndState.dm(0).bm_1;
                tmp_21 = tmp_22 instanceof RuleStopState;
              } else {
                tmp_21 = false;
              }
              if (tmp_21) {
                endState_0 = state_2;
                break $l$loop_5;
              }
            }
            if (endState_0 == null) {
              throw UnsupportedOperationException_init_$Create$_0("Couldn't identify final state of the precedence rule prefix section.");
            }
            excludeTransition = ensureNotNull((endState_0 instanceof StarLoopEntryState ? endState_0 : THROW_CCE()).zy_1).dm(0);
          } else {
            endState_0 = ensureNotNull(atn.ik_1)[i_9];
          }
          var tmp38_iterator = atn.fk_1.f();
          while (tmp38_iterator.g()) {
            var state_3 = tmp38_iterator.h();
            var tmp39_iterator = ensureNotNull(state_3).wk_1.f();
            $l$loop_6: while (tmp39_iterator.g()) {
              var transition = tmp39_iterator.h();
              if (transition === excludeTransition) {
                continue $l$loop_6;
              }
              if (transition.bm_1 === endState_0) {
                transition.bm_1 = bypassStop;
              }
            }
          }
          while (ensureNotNull(atn.hk_1)[i_9].gy() > 0) {
            var transition_0 = ensureNotNull(atn.hk_1)[i_9].rz(ensureNotNull(atn.hk_1)[i_9].gy() - 1 | 0);
            bypassStart.fy(transition_0);
          }
          ensureNotNull(atn.hk_1)[i_9].fy(new EpsilonTransition(bypassStart));
          bypassStop.fy(new EpsilonTransition(ensureNotNull(endState_0)));
          var matchState = new BasicState();
          atn.lt(matchState);
          matchState.fy(new AtomTransition(bypassStop, ensureNotNull(atn.kk_1)[i_9]));
          bypassStart.fy(new EpsilonTransition(matchState));
        }
         while (inductionVariable_9 <= last_3);
      if (this.ww_1.sw()) {
        this.qz(atn);
      }
    }
    return atn;
  };
  protoOf(ATNDeserializer).pz = function (atn) {
    var tmp0_iterator = atn.fk_1.f();
    $l$loop: while (tmp0_iterator.g()) {
      var state = tmp0_iterator.h();
      if (!(state instanceof StarLoopEntryState)) {
        continue $l$loop;
      }
      if (ensureNotNull(atn.hk_1)[state.uk_1].cy_1) {
        var maybeLoopEndState = state.dm(state.gy() - 1 | 0).bm_1;
        if (maybeLoopEndState instanceof LoopEndState) {
          var tmp;
          if (maybeLoopEndState.vk_1) {
            var tmp_0 = maybeLoopEndState.dm(0).bm_1;
            tmp = tmp_0 instanceof RuleStopState;
          } else {
            tmp = false;
          }
          if (tmp) {
            state.az_1 = true;
          }
        }
      }
    }
  };
  protoOf(ATNDeserializer).qz = function (atn) {
    var tmp0_iterator = atn.fk_1.f();
    $l$loop: while (tmp0_iterator.g()) {
      var state = tmp0_iterator.h();
      if (state == null) {
        continue $l$loop;
      }
      this.tz(state.sz() || state.gy() <= 1);
      if (state instanceof PlusBlockStartState) {
        this.tz(!(state.mz_1 == null));
      }
      if (state instanceof StarLoopEntryState) {
        this.tz(!(state.zy_1 == null));
        this.tz(state.gy() === 2);
        var tmp1_subject = state.dm(0).bm_1;
        if (tmp1_subject instanceof StarBlockStartState) {
          var tmp = state.dm(1).bm_1;
          this.tz(tmp instanceof LoopEndState);
          this.tz(!state.vt_1);
        } else {
          if (tmp1_subject instanceof LoopEndState) {
            var tmp_0 = state.dm(1).bm_1;
            this.tz(tmp_0 instanceof StarBlockStartState);
            this.tz(state.vt_1);
          } else {
            throw IllegalStateException_init_$Create$_0();
          }
        }
      }
      if (state instanceof StarLoopbackState) {
        this.tz(state.gy() === 1);
        var tmp_1 = state.dm(0).bm_1;
        this.tz(tmp_1 instanceof StarLoopEntryState);
      }
      if (state instanceof LoopEndState) {
        this.tz(!(state.ix_1 == null));
      }
      if (state instanceof RuleStartState) {
        this.tz(!(state.by_1 == null));
      }
      if (state instanceof BlockStartState) {
        this.tz(!(state.tx_1 == null));
      }
      if (state instanceof BlockEndState) {
        this.tz(!(state.oy_1 == null));
      }
      if (state instanceof DecisionState) {
        this.tz(state.gy() <= 1 || state.ut_1 >= 0);
      } else {
        var tmp_2;
        if (state.gy() <= 1) {
          tmp_2 = true;
        } else {
          tmp_2 = state instanceof RuleStopState;
        }
        this.tz(tmp_2);
      }
    }
  };
  protoOf(ATNDeserializer).uz = function (condition, message) {
    if (!condition) {
      throw IllegalStateException_init_$Create$(message);
    }
  };
  protoOf(ATNDeserializer).tz = function (condition, message, $super) {
    message = message === VOID ? null : message;
    var tmp;
    if ($super === VOID) {
      this.uz(condition, message);
      tmp = Unit_instance;
    } else {
      tmp = $super.uz.call(this, condition, message);
    }
    return tmp;
  };
  protoOf(ATNDeserializer).ey = function (atn, type, src, trg, arg1, arg2, arg3, sets) {
    var target = ensureNotNull(atn.fk_1.o1(trg));
    var tmp;
    switch (type) {
      case 1:
        tmp = new EpsilonTransition(target);
        break;
      case 2:
        var tmp_0;
        if (!(arg3 === 0)) {
          tmp_0 = new RangeTransition(target, -1, arg2);
        } else {
          tmp_0 = new RangeTransition(target, arg1, arg2);
        }

        tmp = tmp_0;
        break;
      case 3:
        var tmp_1 = atn.fk_1.o1(arg1);
        tmp = new RuleTransition(tmp_1 instanceof RuleStartState ? tmp_1 : THROW_CCE(), arg2, arg3, target);
        break;
      case 4:
        tmp = new PredicateTransition(target, arg1, arg2, !(arg3 === 0));
        break;
      case 10:
        tmp = new PrecedencePredicateTransition(target, arg1);
        break;
      case 5:
        var tmp_2;
        if (!(arg3 === 0)) {
          tmp_2 = new AtomTransition(target, -1);
        } else {
          tmp_2 = new AtomTransition(target, arg1);
        }

        tmp = tmp_2;
        break;
      case 6:
        tmp = new ActionTransition(target, arg1, arg2, !(arg3 === 0));
        break;
      case 7:
        tmp = new SetTransition(target, sets.o1(arg1));
        break;
      case 8:
        tmp = new NotSetTransition(target, sets.o1(arg1));
        break;
      case 9:
        tmp = new WildcardTransition(target);
        break;
      default:
        throw IllegalArgumentException_init_$Create$('The specified transition type is not valid.');
    }
    return tmp;
  };
  protoOf(ATNDeserializer).ax = function (type, ruleIndex) {
    var tmp;
    switch (type) {
      case 0:
        return null;
      case 1:
        tmp = new BasicState();
        break;
      case 2:
        tmp = new RuleStartState();
        break;
      case 3:
        tmp = new BasicBlockStartState();
        break;
      case 4:
        tmp = new PlusBlockStartState();
        break;
      case 5:
        tmp = new StarBlockStartState();
        break;
      case 6:
        tmp = new TokensStartState();
        break;
      case 7:
        tmp = new RuleStopState();
        break;
      case 8:
        tmp = new BlockEndState();
        break;
      case 9:
        tmp = new StarLoopbackState();
        break;
      case 10:
        tmp = new StarLoopEntryState();
        break;
      case 11:
        tmp = new PlusLoopbackState();
        break;
      case 12:
        tmp = new LoopEndState();
        break;
      default:
        throw IllegalArgumentException_init_$Create$('The specified state type ' + type + ' is not valid.');
    }
    var s = tmp;
    s.uk_1 = ruleIndex;
    return s;
  };
  protoOf(ATNDeserializer).oz = function (type, data1, data2) {
    var tmp;
    switch (type.z1_1) {
      case 0:
        tmp = new LexerChannelAction(data1);
        break;
      case 1:
        tmp = new LexerCustomAction(data1, data2);
        break;
      case 2:
        tmp = new LexerModeAction(data1);
        break;
      case 3:
        tmp = LexerMoreAction_getInstance();
        break;
      case 4:
        tmp = LexerPopModeAction_getInstance();
        break;
      case 5:
        tmp = new LexerPushModeAction(data1);
        break;
      case 6:
        tmp = LexerSkipAction_getInstance();
        break;
      case 7:
        tmp = new LexerTypeAction(data1);
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  protoOf(ATNDeserializer).vz = function (data16, trimToSize) {
    var data = new Int32Array(data16.length);
    var i = 0;
    var i2 = 0;
    while (i < data16.length) {
      var tmp0 = i;
      i = tmp0 + 1 | 0;
      var v = data16[tmp0];
      // Inline function 'kotlin.code' call
      if ((Char__toInt_impl_vasixd(v) & 32768) === 0) {
        var tmp1 = i2;
        i2 = tmp1 + 1 | 0;
        // Inline function 'kotlin.code' call
        data[tmp1] = Char__toInt_impl_vasixd(v);
      } else {
        var tmp2 = i;
        i = tmp2 + 1 | 0;
        var vnext = data16[tmp2];
        var tmp;
        // Inline function 'kotlin.code' call
        if (Char__toInt_impl_vasixd(v) === 65535) {
          // Inline function 'kotlin.code' call
          tmp = Char__toInt_impl_vasixd(vnext) === 65535;
        } else {
          tmp = false;
        }
        if (tmp) {
          var tmp3 = i2;
          i2 = tmp3 + 1 | 0;
          data[tmp3] = -1;
        } else {
          var tmp4 = i2;
          i2 = tmp4 + 1 | 0;
          // Inline function 'kotlin.code' call
          var tmp_0 = (Char__toInt_impl_vasixd(v) & 32767) << 16;
          // Inline function 'kotlin.code' call
          data[tmp4] = tmp_0 | Char__toInt_impl_vasixd(vnext) & 65535;
        }
      }
    }
    if (trimToSize) {
      return copyOfRange(data, 0, i2);
    }
    return data;
  };
  protoOf(ATNDeserializer).yw = function (data16, trimToSize, $super) {
    trimToSize = trimToSize === VOID ? false : trimToSize;
    return $super === VOID ? this.vz(data16, trimToSize) : $super.vz.call(this, data16, trimToSize);
  };
  function Companion_11() {
    Companion_instance_11 = this;
    var tmp = this;
    // Inline function 'kotlin.also' call
    var this_0 = DFAState_init_$Create$_0(new ATNConfigSet());
    // Inline function 'org.antlr.v4.kotlinruntime.atn.Companion.ERROR.<anonymous>' call
    this_0.wz_1 = 2147483647;
    tmp.e10_1 = this_0;
  }
  var Companion_instance_11;
  function Companion_getInstance_11() {
    if (Companion_instance_11 == null)
      new Companion_11();
    return Companion_instance_11;
  }
  function ATNSimulator(atn, sharedContextCache) {
    Companion_getInstance_11();
    this.nk_1 = atn;
    this.ok_1 = sharedContextCache;
  }
  protoOf(ATNSimulator).lw = function (context) {
    if (this.ok_1 == null) {
      return context;
    }
    // Inline function 'com.strumenta.antlrkotlin.runtime.synchronized' call
    this.ok_1;
    // Inline function 'kotlin.contracts.contract' call
    var visited = new IdentityHashMap();
    return Companion_instance_17.f10(context, this.ok_1, visited);
  };
  function Companion_12() {
    Companion_instance_12 = this;
    this.g10_1 = 4;
    this.h10_1 = 0;
    this.i10_1 = 1;
    this.j10_1 = 2;
    this.k10_1 = 3;
    this.l10_1 = 4;
    this.m10_1 = 5;
    this.n10_1 = 6;
    this.o10_1 = 7;
    this.p10_1 = 8;
    this.q10_1 = 9;
    this.r10_1 = 10;
    this.s10_1 = 11;
    this.t10_1 = 12;
    var tmp = this;
    // Inline function 'kotlin.arrayOf' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    tmp.u10_1 = ['INVALID', 'BASIC', 'RULE_START', 'BLOCK_START', 'PLUS_BLOCK_START', 'STAR_BLOCK_START', 'TOKEN_START', 'RULE_STOP', 'BLOCK_END', 'STAR_LOOP_BACK', 'STAR_LOOP_ENTRY', 'PLUS_LOOP_BACK', 'LOOP_END'];
    this.v10_1 = -1;
  }
  var Companion_instance_12;
  function Companion_getInstance_12() {
    if (Companion_instance_12 == null)
      new Companion_12();
    return Companion_instance_12;
  }
  function ATNState() {
    Companion_getInstance_12();
    this.sk_1 = null;
    this.tk_1 = -1;
    this.uk_1 = 0;
    this.vk_1 = false;
    this.wk_1 = ArrayList_init_$Create$(4);
    this.xk_1 = null;
    this.yk_1 = false;
  }
  protoOf(ATNState).gy = function () {
    return this.wk_1.i();
  };
  protoOf(ATNState).hashCode = function () {
    return this.tk_1;
  };
  protoOf(ATNState).equals = function (other) {
    var tmp;
    if (other instanceof ATNState) {
      tmp = this.tk_1 === other.tk_1;
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(ATNState).toString = function () {
    return this.tk_1.toString();
  };
  protoOf(ATNState).fy = function (e) {
    return this.w10(this.wk_1.i(), e);
  };
  protoOf(ATNState).w10 = function (index, e) {
    if (this.wk_1.r()) {
      this.vk_1 = e.x10();
    } else if (!(this.vk_1 === e.x10())) {
      System_getInstance().nf_1.lf('ATN state ' + this.tk_1 + ' has both epsilon and non-epsilon transitions.');
      this.vk_1 = false;
    }
    var alreadyPresent = false;
    var tmp0_iterator = this.wk_1.f();
    $l$loop_0: while (tmp0_iterator.g()) {
      var t = tmp0_iterator.h();
      if (t.bm_1.tk_1 === e.bm_1.tk_1) {
        if (!(t.getLabel() == null) && !(e.getLabel() == null) && ensureNotNull(t.getLabel()).equals(e.getLabel())) {
          alreadyPresent = true;
          break $l$loop_0;
        } else if (t.x10() && e.x10()) {
          alreadyPresent = true;
          break $l$loop_0;
        }
      }
    }
    if (!alreadyPresent) {
      this.wk_1.y3(index, e);
    }
  };
  protoOf(ATNState).dm = function (i) {
    return this.wk_1.o1(i);
  };
  protoOf(ATNState).rz = function (index) {
    return this.wk_1.p3(index);
  };
  protoOf(ATNState).sz = function () {
    return this.vk_1;
  };
  var ATNType_LEXER_instance;
  var ATNType_PARSER_instance;
  function values() {
    return [ATNType_LEXER_getInstance(), ATNType_PARSER_getInstance()];
  }
  function get_entries() {
    if ($ENTRIES == null)
      $ENTRIES = enumEntries(values());
    return $ENTRIES;
  }
  var ATNType_entriesInitialized;
  function ATNType_initEntries() {
    if (ATNType_entriesInitialized)
      return Unit_instance;
    ATNType_entriesInitialized = true;
    ATNType_LEXER_instance = new ATNType('LEXER', 0);
    ATNType_PARSER_instance = new ATNType('PARSER', 1);
  }
  var $ENTRIES;
  function ATNType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function ATNType_LEXER_getInstance() {
    ATNType_initEntries();
    return ATNType_LEXER_instance;
  }
  function ATNType_PARSER_getInstance() {
    ATNType_initEntries();
    return ATNType_PARSER_instance;
  }
  function AbstractPredicateTransition(target) {
    Transition.call(this, target);
  }
  function ActionTransition(target, ruleIndex, actionIndex, isCtxDependent) {
    actionIndex = actionIndex === VOID ? -1 : actionIndex;
    isCtxDependent = isCtxDependent === VOID ? false : isCtxDependent;
    Transition.call(this, target);
    this.c11_1 = ruleIndex;
    this.d11_1 = actionIndex;
    this.e11_1 = isCtxDependent;
    this.f11_1 = 6;
    this.g11_1 = true;
  }
  protoOf(ActionTransition).y10 = function () {
    return this.f11_1;
  };
  protoOf(ActionTransition).x10 = function () {
    return this.g11_1;
  };
  protoOf(ActionTransition).z10 = function (symbol, minVocabSymbol, maxVocabSymbol) {
    return false;
  };
  protoOf(ActionTransition).toString = function () {
    return 'action_' + this.c11_1 + ':' + this.d11_1;
  };
  function ArrayPredictionContext_init_$Init$(a, $this) {
    // Inline function 'kotlin.arrayOf' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp = [a.j11_1];
    // Inline function 'kotlin.intArrayOf' call
    var tmp$ret$3 = new Int32Array([a.k11_1]);
    ArrayPredictionContext.call($this, tmp, tmp$ret$3);
    return $this;
  }
  function ArrayPredictionContext_init_$Create$(a) {
    return ArrayPredictionContext_init_$Init$(a, objectCreate(protoOf(ArrayPredictionContext)));
  }
  function ArrayPredictionContext(parents, returnStates) {
    PredictionContext.call(this, Companion_instance_17.l11(parents, returnStates));
    this.o11_1 = parents;
    this.p11_1 = returnStates;
    // Inline function 'kotlin.collections.isNotEmpty' call
    // Inline function 'kotlin.collections.isEmpty' call
    // Inline function 'com.strumenta.antlrkotlin.runtime.assert' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!(this.o11_1.length === 0)) {
      throw AssertionError_init_$Create$(null);
    }
    // Inline function 'kotlin.collections.isNotEmpty' call
    // Inline function 'kotlin.collections.isEmpty' call
    // Inline function 'com.strumenta.antlrkotlin.runtime.assert' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!(this.p11_1.length === 0)) {
      throw AssertionError_init_$Create$(null);
    }
  }
  protoOf(ArrayPredictionContext).kp = function () {
    return this.p11_1[0] === 2147483647;
  };
  protoOf(ArrayPredictionContext).gg = function () {
    return this.p11_1.length;
  };
  protoOf(ArrayPredictionContext).q11 = function (index) {
    return this.o11_1[index];
  };
  protoOf(ArrayPredictionContext).r11 = function (index) {
    return this.p11_1[index];
  };
  protoOf(ArrayPredictionContext).equals = function (other) {
    if (this === other) {
      return true;
    }
    if (!(other instanceof ArrayPredictionContext)) {
      return false;
    }
    if (!(this.hashCode() === hashCode(other))) {
      return false;
    }
    return contentEquals(this.p11_1, other.p11_1) && contentEquals_0(this.o11_1, other.o11_1);
  };
  protoOf(ArrayPredictionContext).toString = function () {
    if (this.kp()) {
      return '[]';
    }
    var buf = StringBuilder_init_$Create$();
    buf.p7('[');
    var inductionVariable = 0;
    var last = this.p11_1.length - 1 | 0;
    if (inductionVariable <= last)
      $l$loop: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (i > 0) {
          buf.p7(', ');
        }
        if (this.p11_1[i] === 2147483647) {
          buf.p7('$');
          continue $l$loop;
        }
        buf.la(this.p11_1[i]);
        if (!(this.o11_1[i] == null)) {
          buf.p7(' ');
          buf.p7(toString_1(this.o11_1[i]));
        } else {
          buf.p7('null');
        }
      }
       while (inductionVariable <= last);
    buf.p7(']');
    return buf.toString();
  };
  function AtomTransition(target, label) {
    Transition.call(this, target);
    this.y11_1 = label;
    this.z11_1 = 5;
  }
  protoOf(AtomTransition).y10 = function () {
    return this.z11_1;
  };
  protoOf(AtomTransition).a12 = function () {
    return Companion_getInstance_26().d12(this.y11_1);
  };
  protoOf(AtomTransition).getLabel = function () {
    return this.a12();
  };
  protoOf(AtomTransition).z10 = function (symbol, minVocabSymbol, maxVocabSymbol) {
    return this.y11_1 === symbol;
  };
  protoOf(AtomTransition).toString = function () {
    return this.y11_1.toString();
  };
  function BasicBlockStartState() {
    BlockStartState.call(this);
    this.o12_1 = 3;
  }
  protoOf(BasicBlockStartState).zk = function () {
    return this.o12_1;
  };
  function BasicState() {
    ATNState.call(this);
    this.w12_1 = 1;
  }
  protoOf(BasicState).zk = function () {
    return this.w12_1;
  };
  function BlockEndState() {
    ATNState.call(this);
    this.oy_1 = null;
    this.py_1 = 8;
  }
  protoOf(BlockEndState).zk = function () {
    return this.py_1;
  };
  function BlockStartState() {
    DecisionState.call(this);
    this.tx_1 = null;
  }
  function DecisionState() {
    ATNState.call(this);
    this.ut_1 = -1;
    this.vt_1 = false;
  }
  function EmptyPredictionContext() {
    EmptyPredictionContext_instance = this;
    SingletonPredictionContext.call(this, null, 2147483647);
    this.b13_1 = true;
  }
  protoOf(EmptyPredictionContext).kp = function () {
    return this.b13_1;
  };
  protoOf(EmptyPredictionContext).gg = function () {
    return 1;
  };
  protoOf(EmptyPredictionContext).q11 = function (index) {
    return null;
  };
  protoOf(EmptyPredictionContext).r11 = function (index) {
    return 2147483647;
  };
  protoOf(EmptyPredictionContext).equals = function (other) {
    return this === other;
  };
  protoOf(EmptyPredictionContext).toString = function () {
    return '$';
  };
  var EmptyPredictionContext_instance;
  function EmptyPredictionContext_getInstance() {
    if (EmptyPredictionContext_instance == null)
      new EmptyPredictionContext();
    return EmptyPredictionContext_instance;
  }
  function EpsilonTransition(target, outermostPrecedenceReturn) {
    outermostPrecedenceReturn = outermostPrecedenceReturn === VOID ? -1 : outermostPrecedenceReturn;
    Transition.call(this, target);
    this.e13_1 = 1;
    this.f13_1 = true;
    this.g13_1 = outermostPrecedenceReturn;
  }
  protoOf(EpsilonTransition).y10 = function () {
    return this.e13_1;
  };
  protoOf(EpsilonTransition).x10 = function () {
    return this.f13_1;
  };
  protoOf(EpsilonTransition).z10 = function (symbol, minVocabSymbol, maxVocabSymbol) {
    return false;
  };
  protoOf(EpsilonTransition).toString = function () {
    return 'epsilon';
  };
  function Companion_13() {
    this.h13_1 = 0;
  }
  var Companion_instance_13;
  function Companion_getInstance_13() {
    return Companion_instance_13;
  }
  function LL1Analyzer(atn) {
    this.it_1 = atn;
  }
  protoOf(LL1Analyzer).jt = function (s, ctx) {
    return this.i13(s, null, ctx);
  };
  protoOf(LL1Analyzer).i13 = function (s, stopState, ctx) {
    var r = IntervalSet_init_$Create$();
    var seeThruPreds = true;
    var tmp;
    if (!(ctx == null)) {
      tmp = Companion_instance_17.j13(ensureNotNull(s.sk_1), ctx);
    } else {
      tmp = null;
    }
    var lookContext = tmp;
    this.k13(s, stopState, lookContext, r, HashSet_init_$Create$(), BitSet_init_$Create$(), seeThruPreds, true);
    return r;
  };
  protoOf(LL1Analyzer).k13 = function (s, stopState, ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF) {
    var c = ATNConfig_init_$Create$(s, 0, ctx);
    if (!lookBusy.j(c)) {
      return Unit_instance;
    }
    if (s === stopState) {
      if (ctx == null) {
        look.zj(-2);
        return Unit_instance;
      } else if (ctx.kp() && addEOF) {
        look.zj(-1);
        return Unit_instance;
      }
    }
    if (s instanceof RuleStopState) {
      if (ctx == null) {
        look.zj(-2);
        return Unit_instance;
      } else if (ctx.kp() && addEOF) {
        look.zj(-1);
        return Unit_instance;
      }
      if (!(ctx === EmptyPredictionContext_getInstance())) {
        var removed = calledRuleStack.o1(s.uk_1);
        try {
          calledRuleStack.l13(s.uk_1);
          var inductionVariable = 0;
          var last = ctx.gg();
          if (inductionVariable < last)
            do {
              var i = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              var returnState = this.it_1.fk_1.o1(ctx.r11(i));
              this.k13(ensureNotNull(returnState), stopState, ctx.q11(i), look, lookBusy, calledRuleStack, seeThruPreds, addEOF);
            }
             while (inductionVariable < last);
        }finally {
          if (removed) {
            calledRuleStack.cw(s.uk_1);
          }
        }
        return Unit_instance;
      }
    }
    var n = s.gy();
    var inductionVariable_0 = 0;
    if (inductionVariable_0 < n)
      $l$loop: do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var t = s.dm(i_0);
        if (t instanceof RuleTransition) {
          if (calledRuleStack.o1(t.bm_1.uk_1)) {
            continue $l$loop;
          }
          var newContext = Companion_instance_20.n13(ctx, t.om_1.tk_1);
          try {
            calledRuleStack.cw(t.bm_1.uk_1);
            this.k13(t.bm_1, stopState, newContext, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);
          }finally {
            calledRuleStack.l13(t.bm_1.uk_1);
          }
        } else {
          if (t instanceof AbstractPredicateTransition) {
            if (seeThruPreds) {
              this.k13(t.bm_1, stopState, ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);
            } else {
              look.zj(0);
            }
          } else {
            if (t.x10()) {
              this.k13(t.bm_1, stopState, ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);
            } else {
              if (t instanceof WildcardTransition) {
                look.rm(Companion_getInstance_26().dh(1, this.it_1.ek_1));
              } else {
                var set = t.getLabel();
                if (!(set == null)) {
                  if (t instanceof NotSetTransition) {
                    set = set.m13(Companion_getInstance_26().dh(1, this.it_1.ek_1));
                  }
                  look.rm(set);
                }
              }
            }
          }
        }
      }
       while (inductionVariable_0 < n);
  };
  function LexerATNConfig_init_$Init$(state, alt, context, $this) {
    ATNConfig_init_$Init$(state, alt, context, Empty_getInstance(), $this);
    LexerATNConfig.call($this);
    $this.t13_1 = false;
    $this.u13_1 = null;
    return $this;
  }
  function LexerATNConfig_init_$Create$(state, alt, context) {
    return LexerATNConfig_init_$Init$(state, alt, context, objectCreate(protoOf(LexerATNConfig)));
  }
  function LexerATNConfig_init_$Init$_0(c, state, $this) {
    ATNConfig_init_$Init$_2(c, state, c.au_1, c.cu_1, $this);
    LexerATNConfig.call($this);
    $this.u13_1 = c.u13_1;
    $this.t13_1 = checkNonGreedyDecision($this, c, state);
    return $this;
  }
  function LexerATNConfig_init_$Create$_0(c, state) {
    return LexerATNConfig_init_$Init$_0(c, state, objectCreate(protoOf(LexerATNConfig)));
  }
  function LexerATNConfig_init_$Init$_1(c, state, lexerActionExecutor, $this) {
    ATNConfig_init_$Init$_2(c, state, c.au_1, c.cu_1, $this);
    LexerATNConfig.call($this);
    $this.u13_1 = lexerActionExecutor;
    $this.t13_1 = checkNonGreedyDecision($this, c, state);
    return $this;
  }
  function LexerATNConfig_init_$Create$_1(c, state, lexerActionExecutor) {
    return LexerATNConfig_init_$Init$_1(c, state, lexerActionExecutor, objectCreate(protoOf(LexerATNConfig)));
  }
  function LexerATNConfig_init_$Init$_2(c, state, context, $this) {
    ATNConfig_init_$Init$_2(c, state, context, c.cu_1, $this);
    LexerATNConfig.call($this);
    $this.u13_1 = c.u13_1;
    $this.t13_1 = checkNonGreedyDecision($this, c, state);
    return $this;
  }
  function LexerATNConfig_init_$Create$_2(c, state, context) {
    return LexerATNConfig_init_$Init$_2(c, state, context, objectCreate(protoOf(LexerATNConfig)));
  }
  function checkNonGreedyDecision($this, source, target) {
    var tmp;
    if (source.t13_1) {
      tmp = true;
    } else {
      var tmp_0;
      if (target instanceof DecisionState) {
        tmp_0 = target.vt_1;
      } else {
        tmp_0 = false;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  protoOf(LexerATNConfig).v13 = function () {
    return this.t13_1;
  };
  protoOf(LexerATNConfig).hashCode = function () {
    var hashCode = MurmurHash_instance.iu(7);
    hashCode = MurmurHash_instance.ju(hashCode, this.yt_1.tk_1);
    hashCode = MurmurHash_instance.ju(hashCode, this.zt_1);
    hashCode = MurmurHash_instance.ku(hashCode, this.au_1);
    hashCode = MurmurHash_instance.ku(hashCode, this.cu_1);
    hashCode = MurmurHash_instance.ju(hashCode, this.t13_1 ? 1 : 0);
    hashCode = MurmurHash_instance.ku(hashCode, this.u13_1);
    hashCode = MurmurHash_instance.lu(hashCode, 6);
    return hashCode;
  };
  protoOf(LexerATNConfig).gu = function (other) {
    if (this === other) {
      return true;
    }
    if (!(other instanceof LexerATNConfig)) {
      return false;
    }
    if (!(this.t13_1 === other.t13_1)) {
      return false;
    }
    if (!Companion_getInstance_27().w13_1.qv(this.u13_1, other.u13_1)) {
      return false;
    }
    return protoOf(ATNConfig).gu.call(this, other);
  };
  function LexerATNConfig() {
  }
  function Companion_14() {
    this.x13_1 = false;
    this.y13_1 = false;
    this.z13_1 = 0;
    this.a14_1 = 127;
  }
  var Companion_instance_14;
  function Companion_getInstance_14() {
    return Companion_instance_14;
  }
  function SimState() {
    this.b14_1 = -1;
    this.c14_1 = 0;
    this.d14_1 = -1;
    this.e14_1 = null;
  }
  protoOf(SimState).gq = function () {
    this.b14_1 = -1;
    this.c14_1 = 0;
    this.d14_1 = -1;
    this.e14_1 = null;
  };
  function LexerATNSimulator(recog, atn, decisionToDFA, sharedContextCache) {
    ATNSimulator.call(this, atn, sharedContextCache);
    this.mo_1 = recog;
    this.no_1 = decisionToDFA;
    this.oo_1 = -1;
    this.po_1 = 1;
    this.qo_1 = 0;
    this.ro_1 = 0;
    this.so_1 = new SimState();
  }
  protoOf(LexerATNSimulator).wo = function (input, mode) {
    this.ro_1 = mode;
    var mark = input.bg();
    try {
      this.oo_1 = input.ag();
      this.so_1.gq();
      var dfa = this.no_1[mode];
      var tmp;
      if (dfa.i14_1 == null) {
        tmp = this.l14(input);
      } else {
        var tmp_0 = dfa.i14_1;
        tmp = this.k14(input, tmp_0 instanceof DFAState ? tmp_0 : THROW_CCE());
      }
      return tmp;
    }finally {
      input.cg(mark);
    }
  };
  protoOf(LexerATNSimulator).l14 = function (input) {
    var startState = this.nk_1.mk_1.o1(this.ro_1);
    if (false) {
      System_getInstance().mf_1.lf('matchATN mode ' + this.ro_1 + ' start: ' + startState.toString());
    }
    var oldMode = this.ro_1;
    var s0Closure = this.m14(input, startState);
    var suppressEdge = s0Closure.wv_1;
    s0Closure.wv_1 = false;
    var next = this.n14(s0Closure);
    if (!suppressEdge) {
      this.no_1[this.ro_1].i14_1 = next;
    }
    var predict = this.k14(input, next);
    if (false) {
      System_getInstance().mf_1.lf('DFA after matchATN: ' + this.no_1[oldMode].o14());
    }
    return predict;
  };
  protoOf(LexerATNSimulator).k14 = function (input, ds0) {
    if (false) {
      System_getInstance().mf_1.lf('start state closure=' + ds0.xz_1.toString());
    }
    if (ds0.zz_1) {
      this.p14(this.so_1, input, ds0);
    }
    var t = input.ig(1);
    var s = ds0;
    $l$loop_0: while (true) {
      if (false) {
        System_getInstance().mf_1.lf('execATN loop starting closure: ' + s.xz_1.toString());
      }
      var tmp0_elvis_lhs = this.q14(s, t);
      var target = tmp0_elvis_lhs == null ? this.r14(input, s, t) : tmp0_elvis_lhs;
      if (target === Companion_getInstance_11().e10_1) {
        break $l$loop_0;
      }
      if (!(t === -1)) {
        this.op(input);
      }
      if (target.zz_1) {
        this.p14(this.so_1, input, target);
        if (t === -1) {
          break $l$loop_0;
        }
      }
      t = input.ig(1);
      s = target;
    }
    return this.s14(this.so_1, input, s.xz_1, t);
  };
  protoOf(LexerATNSimulator).q14 = function (s, t) {
    if (s.yz_1 == null || t < 0 || t > 127) {
      return null;
    }
    var target = ensureNotNull(s.yz_1)[t - 0 | 0];
    if (false && !(target == null)) {
      System_getInstance().mf_1.lf('reuse state ' + s.wz_1 + ' edge to ' + target.wz_1);
    }
    return target;
  };
  protoOf(LexerATNSimulator).r14 = function (input, s, t) {
    var reach = new OrderedATNConfigSet();
    this.t14(input, s.xz_1, reach, t);
    if (reach.r()) {
      if (!reach.wv_1) {
        this.u14(s, t, Companion_getInstance_11().e10_1);
      }
      return Companion_getInstance_11().e10_1;
    }
    return this.v14(s, t, reach);
  };
  protoOf(LexerATNSimulator).s14 = function (prevAccept, input, reach, t) {
    if (!(prevAccept.e14_1 == null)) {
      var lexerActionExecutor = ensureNotNull(prevAccept.e14_1).b10_1;
      this.w14(input, lexerActionExecutor, this.oo_1, prevAccept.b14_1, prevAccept.c14_1, prevAccept.d14_1);
      return ensureNotNull(prevAccept.e14_1).a10_1;
    }
    if (t === -1 && input.ag() === this.oo_1) {
      return -1;
    }
    throw new LexerNoViableAltException(ensureNotNull(this.mo_1), input, this.oo_1, reach);
  };
  protoOf(LexerATNSimulator).t14 = function (input, closure, reach, t) {
    var skipAlt = 0;
    var tmp0_iterator = closure.f();
    $l$loop: while (tmp0_iterator.g()) {
      var c = tmp0_iterator.h();
      var currentAltReachedAcceptState = c.zt_1 === skipAlt;
      var tmp;
      if (currentAltReachedAcceptState) {
        tmp = (c instanceof LexerATNConfig ? c : THROW_CCE()).v13();
      } else {
        tmp = false;
      }
      if (tmp) {
        continue $l$loop;
      }
      if (false) {
        System_getInstance().mf_1.lf('testing ' + this.x14(t) + ' at ' + c.mu(this.mo_1, true));
      }
      var n = c.yt_1.gy();
      var inductionVariable = 0;
      if (inductionVariable < n)
        $l$loop_0: do {
          var ti = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var trans = c.yt_1.dm(ti);
          var target = this.y14(trans, t);
          if (!(target == null)) {
            var lexerActionExecutor = (c instanceof LexerATNConfig ? c : THROW_CCE()).u13_1;
            if (!(lexerActionExecutor == null)) {
              lexerActionExecutor = lexerActionExecutor.b15(input.ag() - this.oo_1 | 0);
            }
            var treatEofAsEpsilon = t === -1;
            if (this.c15(input, LexerATNConfig_init_$Create$_1(c, target, lexerActionExecutor), reach, currentAltReachedAcceptState, true, treatEofAsEpsilon)) {
              skipAlt = c.zt_1;
              break $l$loop_0;
            }
          }
        }
         while (inductionVariable < n);
    }
  };
  protoOf(LexerATNSimulator).w14 = function (input, lexerActionExecutor, startIndex, index, line, charPos) {
    if (false) {
      System_getInstance().mf_1.lf('ACTION ' + toString_1(lexerActionExecutor));
    }
    input.dg(index);
    this.po_1 = line;
    this.qo_1 = charPos;
    if (!(lexerActionExecutor == null) && !(this.mo_1 == null)) {
      lexerActionExecutor.d15(this.mo_1, input, startIndex);
    }
  };
  protoOf(LexerATNSimulator).y14 = function (trans, t) {
    var tmp;
    if (trans.z10(t, 0, 1114111)) {
      tmp = trans.bm_1;
    } else {
      tmp = null;
    }
    return tmp;
  };
  protoOf(LexerATNSimulator).m14 = function (input, p) {
    var initialContext = EmptyPredictionContext_getInstance();
    var configs = new OrderedATNConfigSet();
    var inductionVariable = 0;
    var last = p.gy();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var target = p.dm(i).bm_1;
        var c = LexerATNConfig_init_$Create$(target, i + 1 | 0, initialContext);
        this.c15(input, c, configs, false, false, false);
      }
       while (inductionVariable < last);
    return configs;
  };
  protoOf(LexerATNSimulator).c15 = function (input, config, configs, currentAltReachedAcceptState, speculative, treatEofAsEpsilon) {
    var tempCurrentAltReachedAcceptState = currentAltReachedAcceptState;
    if (false) {
      System_getInstance().mf_1.lf('closure(' + config.mu(this.mo_1, true) + ')');
    }
    var tmp = config.yt_1;
    if (tmp instanceof RuleStopState) {
      if (false) {
        if (!(this.mo_1 == null)) {
          System_getInstance().mf_1.lf('closure at ' + this.mo_1.ol()[config.yt_1.uk_1] + ' rule stop ' + config.toString());
        } else {
          System_getInstance().mf_1.lf('closure at rule stop ' + config.toString());
        }
      }
      if (config.au_1 == null || ensureNotNull(config.au_1).u11()) {
        if (config.au_1 == null || ensureNotNull(config.au_1).kp()) {
          configs.dw(config);
          return true;
        }
        configs.dw(LexerATNConfig_init_$Create$_2(config, config.yt_1, EmptyPredictionContext_getInstance()));
        tempCurrentAltReachedAcceptState = true;
      }
      if (!(config.au_1 == null) && !ensureNotNull(config.au_1).kp()) {
        var inductionVariable = 0;
        var last = ensureNotNull(config.au_1).gg();
        if (inductionVariable < last)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            if (!(ensureNotNull(config.au_1).r11(i) === 2147483647)) {
              var newContext = ensureNotNull(config.au_1).q11(i);
              var returnState = this.nk_1.fk_1.o1(ensureNotNull(config.au_1).r11(i));
              var c = LexerATNConfig_init_$Create$_2(config, ensureNotNull(returnState), ensureNotNull(newContext));
              tempCurrentAltReachedAcceptState = this.c15(input, c, configs, tempCurrentAltReachedAcceptState, speculative, treatEofAsEpsilon);
            }
          }
           while (inductionVariable < last);
      }
      return tempCurrentAltReachedAcceptState;
    }
    if (!config.yt_1.sz()) {
      if (!tempCurrentAltReachedAcceptState || !config.v13()) {
        configs.dw(config);
      }
    }
    var p = config.yt_1;
    var inductionVariable_0 = 0;
    var last_0 = p.gy();
    if (inductionVariable_0 < last_0)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var t = p.dm(i_0);
        var c_0 = this.e15(input, config, t, configs, speculative, treatEofAsEpsilon);
        if (!(c_0 == null)) {
          tempCurrentAltReachedAcceptState = this.c15(input, c_0, configs, tempCurrentAltReachedAcceptState, speculative, treatEofAsEpsilon);
        }
      }
       while (inductionVariable_0 < last_0);
    return tempCurrentAltReachedAcceptState;
  };
  protoOf(LexerATNSimulator).e15 = function (input, config, t, configs, speculative, treatEofAsEpsilon) {
    var c = null;
    switch (t.y10()) {
      case 3:
        var ruleTransition = t instanceof RuleTransition ? t : THROW_CCE();
        var newContext = Companion_instance_20.n13(config.au_1, ruleTransition.om_1.tk_1);
        c = LexerATNConfig_init_$Create$_2(config, t.bm_1, newContext);
        break;
      case 10:
        throw UnsupportedOperationException_init_$Create$_0('Precedence predicates are not supported in lexers.');
      case 4:
        var pt = t instanceof PredicateTransition ? t : THROW_CCE();
        if (false) {
          System_getInstance().mf_1.lf('EVAL rule ' + pt.en_1 + ':' + pt.fn_1);
        }

        configs.wv_1 = true;
        if (this.f15(input, pt.en_1, pt.fn_1, speculative)) {
          c = LexerATNConfig_init_$Create$_0(config, t.bm_1);
        }

        break;
      case 6:
        if (config.au_1 == null || ensureNotNull(config.au_1).u11()) {
          var tmp = Companion_instance_15;
          var tmp_0 = ensureNotNull(this.nk_1.lk_1);
          var lexerActionExecutor = tmp.g15(config.u13_1, tmp_0[(t instanceof ActionTransition ? t : THROW_CCE()).d11_1]);
          c = LexerATNConfig_init_$Create$_1(config, t.bm_1, lexerActionExecutor);
        } else {
          c = LexerATNConfig_init_$Create$_0(config, t.bm_1);
        }

        break;
      case 1:
        c = LexerATNConfig_init_$Create$_0(config, t.bm_1);
        break;
      case 5:
      case 2:
      case 7:
        if (treatEofAsEpsilon) {
          if (t.z10(-1, 0, 1114111)) {
            c = LexerATNConfig_init_$Create$_0(config, t.bm_1);
          }
        }

        break;
    }
    return c;
  };
  protoOf(LexerATNSimulator).f15 = function (input, ruleIndex, predIndex, speculative) {
    if (this.mo_1 == null) {
      return true;
    }
    if (!speculative) {
      return this.mo_1.tp(null, ruleIndex, predIndex);
    }
    var savedCharPositionInLine = this.qo_1;
    var savedLine = this.po_1;
    var index = input.ag();
    var marker = input.bg();
    try {
      this.op(input);
      return this.mo_1.tp(null, ruleIndex, predIndex);
    }finally {
      this.qo_1 = savedCharPositionInLine;
      this.po_1 = savedLine;
      input.dg(index);
      input.cg(marker);
    }
  };
  protoOf(LexerATNSimulator).p14 = function (settings, input, dfaState) {
    settings.b14_1 = input.ag();
    settings.c14_1 = this.po_1;
    settings.d14_1 = this.qo_1;
    settings.e14_1 = dfaState;
  };
  protoOf(LexerATNSimulator).v14 = function (from, t, q) {
    var suppressEdge = q.wv_1;
    q.wv_1 = false;
    var to = this.n14(q);
    if (suppressEdge) {
      return to;
    }
    this.u14(from, t, to);
    return to;
  };
  protoOf(LexerATNSimulator).u14 = function (p, t, q) {
    if (t < 0 || t > 127) {
      return Unit_instance;
    }
    if (false) {
      System_getInstance().mf_1.lf('EDGE ' + p.toString() + ' -> ' + q.toString() + ' upon ' + toString(numberToChar(t)));
    }
    // Inline function 'com.strumenta.antlrkotlin.runtime.synchronized' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'org.antlr.v4.kotlinruntime.atn.LexerATNSimulator.addDFAEdge.<anonymous>' call
    if (p.yz_1 == null) {
      var tmp = p;
      // Inline function 'kotlin.arrayOfNulls' call
      tmp.yz_1 = fillArrayVal(Array(128), null);
    }
    ensureNotNull(p.yz_1)[t - 0 | 0] = q;
  };
  protoOf(LexerATNSimulator).n14 = function (configs) {
    // Inline function 'com.strumenta.antlrkotlin.runtime.assert' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!configs.wv_1) {
      throw AssertionError_init_$Create$(null);
    }
    var proposed = DFAState_init_$Create$_0(configs);
    var firstConfigWithRuleStopState = null;
    var tmp0_iterator = configs.f();
    $l$loop: while (tmp0_iterator.g()) {
      var c = tmp0_iterator.h();
      var tmp = c.yt_1;
      if (tmp instanceof RuleStopState) {
        firstConfigWithRuleStopState = c;
        break $l$loop;
      }
    }
    if (!(firstConfigWithRuleStopState == null)) {
      proposed.zz_1 = true;
      var tmp_0 = proposed;
      tmp_0.b10_1 = (firstConfigWithRuleStopState instanceof LexerATNConfig ? firstConfigWithRuleStopState : THROW_CCE()).u13_1;
      proposed.a10_1 = ensureNotNull(this.nk_1.kk_1)[firstConfigWithRuleStopState.yt_1.uk_1];
    }
    var dfa = this.no_1[this.ro_1];
    // Inline function 'com.strumenta.antlrkotlin.runtime.synchronized' call
    dfa.h14_1;
    // Inline function 'kotlin.contracts.contract' call
    var existing = dfa.h14_1.t1(proposed);
    if (!(existing == null)) {
      return existing;
    }
    proposed.wz_1 = dfa.h14_1.i();
    configs.kt(true);
    proposed.xz_1 = configs;
    // Inline function 'kotlin.collections.set' call
    dfa.h14_1.w1(proposed, proposed);
    return proposed;
  };
  protoOf(LexerATNSimulator).op = function (input) {
    var curChar = input.ig(1);
    if (numberToChar(curChar) === _Char___init__impl__6a9atx(10)) {
      this.po_1 = this.po_1 + 1 | 0;
      this.qo_1 = 0;
    } else {
      this.qo_1 = this.qo_1 + 1 | 0;
    }
    input.hg();
  };
  protoOf(LexerATNSimulator).x14 = function (t) {
    var tmp;
    if (t === -1) {
      tmp = 'EOF';
    } else {
      tmp = "'" + toString(numberToChar(t)) + "'";
    }
    return tmp;
  };
  function Companion_15() {
  }
  protoOf(Companion_15).g15 = function (lexerActionExecutor, lexerAction) {
    if (lexerActionExecutor == null) {
      // Inline function 'kotlin.arrayOf' call
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp$ret$2 = [lexerAction];
      return new LexerActionExecutor(tmp$ret$2);
    }
    var lexerActions = copyOf(lexerActionExecutor.z14_1, lexerActionExecutor.z14_1.length + 1 | 0);
    lexerActions[get_lastIndex(lexerActions)] = lexerAction;
    return new LexerActionExecutor(isArray(lexerActions) ? lexerActions : THROW_CCE());
  };
  var Companion_instance_15;
  function Companion_getInstance_15() {
    return Companion_instance_15;
  }
  function LexerActionExecutor(lexerActions) {
    this.z14_1 = lexerActions;
    var hash = MurmurHash_instance.h15();
    var indexedObject = this.z14_1;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var lexerAction = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      hash = MurmurHash_instance.ku(hash, lexerAction);
    }
    this.a15_1 = MurmurHash_instance.lu(hash, this.z14_1.length);
  }
  protoOf(LexerActionExecutor).b15 = function (offset) {
    var updatedLexerActions = null;
    var inductionVariable = 0;
    var last = this.z14_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp;
        if (this.z14_1[i].i15()) {
          var tmp_0 = this.z14_1[i];
          tmp = !(tmp_0 instanceof LexerIndexedCustomAction);
        } else {
          tmp = false;
        }
        if (tmp) {
          if (updatedLexerActions == null) {
            // Inline function 'kotlin.collections.copyOf' call
            // Inline function 'kotlin.js.asDynamic' call
            updatedLexerActions = this.z14_1.slice();
          }
          updatedLexerActions[i] = new LexerIndexedCustomAction(offset, this.z14_1[i]);
        }
      }
       while (inductionVariable <= last);
    var tmp_1;
    if (updatedLexerActions == null) {
      tmp_1 = this;
    } else {
      tmp_1 = new LexerActionExecutor(updatedLexerActions);
    }
    return tmp_1;
  };
  protoOf(LexerActionExecutor).d15 = function (lexer, input, startIndex) {
    var requiresSeek = false;
    var stopIndex = input.ag();
    try {
      var indexedObject = this.z14_1;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var lexerAction = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        var mutableLexerAction = lexerAction;
        if (mutableLexerAction instanceof LexerIndexedCustomAction) {
          var offset = mutableLexerAction.j15_1;
          input.dg(startIndex + offset | 0);
          mutableLexerAction = mutableLexerAction.k15_1;
          requiresSeek = !((startIndex + offset | 0) === stopIndex);
        } else {
          if (mutableLexerAction.i15()) {
            input.dg(stopIndex);
            requiresSeek = false;
          }
        }
        mutableLexerAction.m15(lexer);
      }
    }finally {
      if (requiresSeek) {
        input.dg(stopIndex);
      }
    }
  };
  protoOf(LexerActionExecutor).hashCode = function () {
    return this.a15_1;
  };
  protoOf(LexerActionExecutor).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof LexerActionExecutor)) {
      return false;
    }
    return this.a15_1 === other.a15_1 && contentEquals_0(this.z14_1, other.z14_1);
  };
  var LexerActionType_CHANNEL_instance;
  var LexerActionType_CUSTOM_instance;
  var LexerActionType_MODE_instance;
  var LexerActionType_MORE_instance;
  var LexerActionType_POP_MODE_instance;
  var LexerActionType_PUSH_MODE_instance;
  var LexerActionType_SKIP_instance;
  var LexerActionType_TYPE_instance;
  function values_0() {
    return [LexerActionType_CHANNEL_getInstance(), LexerActionType_CUSTOM_getInstance(), LexerActionType_MODE_getInstance(), LexerActionType_MORE_getInstance(), LexerActionType_POP_MODE_getInstance(), LexerActionType_PUSH_MODE_getInstance(), LexerActionType_SKIP_getInstance(), LexerActionType_TYPE_getInstance()];
  }
  function get_entries_0() {
    if ($ENTRIES_0 == null)
      $ENTRIES_0 = enumEntries(values_0());
    return $ENTRIES_0;
  }
  var LexerActionType_entriesInitialized;
  function LexerActionType_initEntries() {
    if (LexerActionType_entriesInitialized)
      return Unit_instance;
    LexerActionType_entriesInitialized = true;
    LexerActionType_CHANNEL_instance = new LexerActionType('CHANNEL', 0);
    LexerActionType_CUSTOM_instance = new LexerActionType('CUSTOM', 1);
    LexerActionType_MODE_instance = new LexerActionType('MODE', 2);
    LexerActionType_MORE_instance = new LexerActionType('MORE', 3);
    LexerActionType_POP_MODE_instance = new LexerActionType('POP_MODE', 4);
    LexerActionType_PUSH_MODE_instance = new LexerActionType('PUSH_MODE', 5);
    LexerActionType_SKIP_instance = new LexerActionType('SKIP', 6);
    LexerActionType_TYPE_instance = new LexerActionType('TYPE', 7);
  }
  var $ENTRIES_0;
  function LexerActionType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function LexerActionType_CHANNEL_getInstance() {
    LexerActionType_initEntries();
    return LexerActionType_CHANNEL_instance;
  }
  function LexerActionType_CUSTOM_getInstance() {
    LexerActionType_initEntries();
    return LexerActionType_CUSTOM_instance;
  }
  function LexerActionType_MODE_getInstance() {
    LexerActionType_initEntries();
    return LexerActionType_MODE_instance;
  }
  function LexerActionType_MORE_getInstance() {
    LexerActionType_initEntries();
    return LexerActionType_MORE_instance;
  }
  function LexerActionType_POP_MODE_getInstance() {
    LexerActionType_initEntries();
    return LexerActionType_POP_MODE_instance;
  }
  function LexerActionType_PUSH_MODE_getInstance() {
    LexerActionType_initEntries();
    return LexerActionType_PUSH_MODE_instance;
  }
  function LexerActionType_SKIP_getInstance() {
    LexerActionType_initEntries();
    return LexerActionType_SKIP_instance;
  }
  function LexerActionType_TYPE_getInstance() {
    LexerActionType_initEntries();
    return LexerActionType_TYPE_instance;
  }
  function LexerChannelAction(channel) {
    this.n15_1 = channel;
    this.o15_1 = LexerActionType_CHANNEL_getInstance();
    this.p15_1 = false;
  }
  protoOf(LexerChannelAction).i15 = function () {
    return this.p15_1;
  };
  protoOf(LexerChannelAction).m15 = function (lexer) {
    lexer.ao_1 = this.n15_1;
  };
  protoOf(LexerChannelAction).hashCode = function () {
    var hash = MurmurHash_instance.h15();
    hash = MurmurHash_instance.ju(hash, this.o15_1.z1_1);
    hash = MurmurHash_instance.ju(hash, this.n15_1);
    return MurmurHash_instance.lu(hash, 2);
  };
  protoOf(LexerChannelAction).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof LexerChannelAction)) {
      return false;
    }
    return this.n15_1 === other.n15_1;
  };
  protoOf(LexerChannelAction).toString = function () {
    return 'channel(' + this.n15_1 + ')';
  };
  function LexerCustomAction(ruleIndex, actionIndex) {
    this.q15_1 = ruleIndex;
    this.r15_1 = actionIndex;
    this.s15_1 = LexerActionType_CUSTOM_getInstance();
    this.t15_1 = true;
  }
  protoOf(LexerCustomAction).u15 = function () {
    return this.s15_1;
  };
  protoOf(LexerCustomAction).i15 = function () {
    return this.t15_1;
  };
  protoOf(LexerCustomAction).m15 = function (lexer) {
    return lexer.vp(null, this.q15_1, this.r15_1);
  };
  protoOf(LexerCustomAction).hashCode = function () {
    var hash = MurmurHash_instance.h15();
    hash = MurmurHash_instance.ju(hash, this.u15().z1_1);
    hash = MurmurHash_instance.ju(hash, this.q15_1);
    hash = MurmurHash_instance.ju(hash, this.r15_1);
    return MurmurHash_instance.lu(hash, 3);
  };
  protoOf(LexerCustomAction).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof LexerCustomAction)) {
      return false;
    }
    return this.q15_1 === other.q15_1 && this.r15_1 === other.r15_1;
  };
  function LexerIndexedCustomAction(offset, action) {
    this.j15_1 = offset;
    this.k15_1 = action;
    this.l15_1 = true;
  }
  protoOf(LexerIndexedCustomAction).i15 = function () {
    return this.l15_1;
  };
  protoOf(LexerIndexedCustomAction).m15 = function (lexer) {
    return this.k15_1.m15(lexer);
  };
  protoOf(LexerIndexedCustomAction).hashCode = function () {
    var hash = MurmurHash_instance.h15();
    hash = MurmurHash_instance.ju(hash, this.j15_1);
    hash = MurmurHash_instance.ku(hash, this.k15_1);
    return MurmurHash_instance.lu(hash, 2);
  };
  protoOf(LexerIndexedCustomAction).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof LexerIndexedCustomAction)) {
      return false;
    }
    return this.j15_1 === other.j15_1 && equals(this.k15_1, other.k15_1);
  };
  function LexerModeAction(mode) {
    this.v15_1 = mode;
    this.w15_1 = LexerActionType_MODE_getInstance();
    this.x15_1 = false;
  }
  protoOf(LexerModeAction).i15 = function () {
    return this.x15_1;
  };
  protoOf(LexerModeAction).m15 = function (lexer) {
    return lexer.cp(this.v15_1);
  };
  protoOf(LexerModeAction).hashCode = function () {
    var hash = MurmurHash_instance.h15();
    hash = MurmurHash_instance.ju(hash, this.w15_1.z1_1);
    hash = MurmurHash_instance.ju(hash, this.v15_1);
    return MurmurHash_instance.lu(hash, 2);
  };
  protoOf(LexerModeAction).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof LexerModeAction)) {
      return false;
    }
    return this.v15_1 === other.v15_1;
  };
  protoOf(LexerModeAction).toString = function () {
    return 'mode(' + this.v15_1 + ')';
  };
  function LexerMoreAction() {
    LexerMoreAction_instance = this;
    this.y15_1 = LexerActionType_MORE_getInstance();
    this.z15_1 = false;
  }
  protoOf(LexerMoreAction).i15 = function () {
    return this.z15_1;
  };
  protoOf(LexerMoreAction).m15 = function (lexer) {
    return lexer.bp();
  };
  protoOf(LexerMoreAction).hashCode = function () {
    var hash = MurmurHash_instance.h15();
    hash = MurmurHash_instance.ju(hash, this.y15_1.z1_1);
    return MurmurHash_instance.lu(hash, 1);
  };
  protoOf(LexerMoreAction).equals = function (other) {
    return other === this;
  };
  protoOf(LexerMoreAction).toString = function () {
    return 'more';
  };
  var LexerMoreAction_instance;
  function LexerMoreAction_getInstance() {
    if (LexerMoreAction_instance == null)
      new LexerMoreAction();
    return LexerMoreAction_instance;
  }
  function LexerPopModeAction() {
    LexerPopModeAction_instance = this;
    this.a16_1 = LexerActionType_POP_MODE_getInstance();
    this.b16_1 = false;
  }
  protoOf(LexerPopModeAction).i15 = function () {
    return this.b16_1;
  };
  protoOf(LexerPopModeAction).m15 = function (lexer) {
    lexer.hp();
  };
  protoOf(LexerPopModeAction).hashCode = function () {
    var hash = MurmurHash_instance.h15();
    hash = MurmurHash_instance.ju(hash, this.a16_1.z1_1);
    return MurmurHash_instance.lu(hash, 1);
  };
  protoOf(LexerPopModeAction).equals = function (other) {
    return other === this;
  };
  protoOf(LexerPopModeAction).toString = function () {
    return 'popMode';
  };
  var LexerPopModeAction_instance;
  function LexerPopModeAction_getInstance() {
    if (LexerPopModeAction_instance == null)
      new LexerPopModeAction();
    return LexerPopModeAction_instance;
  }
  function LexerPushModeAction(mode) {
    this.c16_1 = mode;
    this.d16_1 = LexerActionType_PUSH_MODE_getInstance();
    this.e16_1 = false;
  }
  protoOf(LexerPushModeAction).i15 = function () {
    return this.e16_1;
  };
  protoOf(LexerPushModeAction).m15 = function (lexer) {
    return lexer.dp(this.c16_1);
  };
  protoOf(LexerPushModeAction).hashCode = function () {
    var hash = MurmurHash_instance.h15();
    hash = MurmurHash_instance.ju(hash, this.d16_1.z1_1);
    hash = MurmurHash_instance.ju(hash, this.c16_1);
    return MurmurHash_instance.lu(hash, 2);
  };
  protoOf(LexerPushModeAction).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof LexerPushModeAction)) {
      return false;
    }
    return this.c16_1 === other.c16_1;
  };
  protoOf(LexerPushModeAction).toString = function () {
    return 'pushMode(' + this.c16_1 + ')';
  };
  function LexerSkipAction() {
    LexerSkipAction_instance = this;
    this.f16_1 = LexerActionType_SKIP_getInstance();
    this.g16_1 = false;
  }
  protoOf(LexerSkipAction).i15 = function () {
    return this.g16_1;
  };
  protoOf(LexerSkipAction).m15 = function (lexer) {
    return lexer.ap();
  };
  protoOf(LexerSkipAction).hashCode = function () {
    var hash = MurmurHash_instance.h15();
    hash = MurmurHash_instance.ju(hash, this.f16_1.z1_1);
    return MurmurHash_instance.lu(hash, 1);
  };
  protoOf(LexerSkipAction).equals = function (other) {
    return other === this;
  };
  protoOf(LexerSkipAction).toString = function () {
    return 'skip';
  };
  var LexerSkipAction_instance;
  function LexerSkipAction_getInstance() {
    if (LexerSkipAction_instance == null)
      new LexerSkipAction();
    return LexerSkipAction_instance;
  }
  function LexerTypeAction(type) {
    this.h16_1 = type;
    this.i16_1 = LexerActionType_TYPE_getInstance();
    this.j16_1 = false;
  }
  protoOf(LexerTypeAction).i15 = function () {
    return this.j16_1;
  };
  protoOf(LexerTypeAction).m15 = function (lexer) {
    lexer.bo_1 = this.h16_1;
  };
  protoOf(LexerTypeAction).hashCode = function () {
    var hash = MurmurHash_instance.h15();
    hash = MurmurHash_instance.ju(hash, this.i16_1.z1_1);
    hash = MurmurHash_instance.ju(hash, this.h16_1);
    return MurmurHash_instance.lu(hash, 2);
  };
  protoOf(LexerTypeAction).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof LexerTypeAction)) {
      return false;
    }
    return this.h16_1 === other.h16_1;
  };
  protoOf(LexerTypeAction).toString = function () {
    return 'type(' + this.h16_1 + ')';
  };
  function LoopEndState() {
    ATNState.call(this);
    this.ix_1 = null;
    this.jx_1 = 12;
  }
  protoOf(LoopEndState).zk = function () {
    return this.jx_1;
  };
  function NotSetTransition(target, set) {
    SetTransition.call(this, target, set);
    this.o16_1 = 8;
  }
  protoOf(NotSetTransition).y10 = function () {
    return this.o16_1;
  };
  protoOf(NotSetTransition).z10 = function (symbol, minVocabSymbol, maxVocabSymbol) {
    return (minVocabSymbol <= symbol ? symbol <= maxVocabSymbol : false) && !protoOf(SetTransition).z10.call(this, symbol, minVocabSymbol, maxVocabSymbol);
  };
  protoOf(NotSetTransition).toString = function () {
    return '~' + protoOf(SetTransition).toString.call(this);
  };
  function LexerConfigHashSet() {
    AbstractConfigHashSet.call(this, Companion_getInstance_27().w13_1);
  }
  function OrderedATNConfigSet() {
    ATNConfigSet.call(this);
    this.sv_1 = new LexerConfigHashSet();
  }
  function getSafeEnv($this, envName, defaultValue) {
    var tmp;
    try {
      tmp = System_getInstance().of(envName, defaultValue);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Exception) {
        var e = $p;
        System_getInstance().nf_1.lf(e.toString());
        tmp_0 = null;
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function Companion_16() {
    Companion_instance_16 = this;
    this.t16_1 = false;
    this.u16_1 = false;
    this.v16_1 = false;
    this.w16_1 = false;
    this.x16_1 = toBoolean(getSafeEnv(this, 'TURN_OFF_LR_LOOP_ENTRY_BRANCH_OPT', 'false'));
  }
  protoOf(Companion_16).y16 = function (configs) {
    var alt = 0;
    var tmp0_iterator = configs.f();
    while (tmp0_iterator.g()) {
      var c = tmp0_iterator.h();
      if (alt === 0) {
        alt = c.zt_1;
      } else if (!(c.zt_1 === alt)) {
        return 0;
      }
    }
    return alt;
  };
  var Companion_instance_16;
  function Companion_getInstance_16() {
    if (Companion_instance_16 == null)
      new Companion_16();
    return Companion_instance_16;
  }
  function ParserATNSimulator(parser, atn, decisionToDFA, sharedContextCache) {
    Companion_getInstance_16();
    ATNSimulator.call(this, atn, sharedContextCache);
    this.mq_1 = parser;
    this.nq_1 = decisionToDFA;
    this.oq_1 = PredictionMode_LL_getInstance();
    this.pq_1 = null;
    this.qq_1 = null;
    this.rq_1 = 0;
    this.sq_1 = null;
    this.tq_1 = null;
  }
  protoOf(ParserATNSimulator).gq = function () {
  };
  protoOf(ParserATNSimulator).z16 = function (input, decision, outerContext) {
    var tempOuterContext = outerContext;
    if (Companion_getInstance_16().t16_1 || Companion_getInstance_16().u16_1) {
      System_getInstance().mf_1.lf('adaptivePredict decision ' + decision + (' exec LA(1)==' + this.a17(input)) + (' line ' + ensureNotNull(input.og(1)).sh() + ':' + ensureNotNull(input.og(1)).uh()));
    }
    this.qq_1 = input;
    this.rq_1 = input.ag();
    this.sq_1 = tempOuterContext;
    var dfa = this.nq_1[decision];
    this.tq_1 = dfa;
    var m = input.bg();
    var index = this.rq_1;
    try {
      var tmp;
      if (dfa.j14_1) {
        tmp = dfa.b17(this.mq_1.hq());
      } else {
        tmp = dfa.i14_1;
      }
      var s0 = tmp;
      if (s0 == null) {
        if (tempOuterContext == null) {
          tempOuterContext = Companion_getInstance_4().ds_1;
        }
        var fullCtx = false;
        var s0Closure = this.c17(dfa.f14_1, Companion_getInstance_4().ds_1, fullCtx);
        if (dfa.j14_1) {
          ensureNotNull(dfa.i14_1).xz_1 = s0Closure;
          s0Closure = this.e17(s0Closure);
          s0 = this.d17(dfa, DFAState_init_$Create$_0(s0Closure));
          dfa.f17(this.mq_1.hq(), s0);
        } else {
          s0 = this.d17(dfa, DFAState_init_$Create$_0(s0Closure));
          dfa.i14_1 = s0;
        }
      }
      var alt = this.g17(dfa, s0, input, index, ensureNotNull(tempOuterContext));
      if (Companion_getInstance_16().t16_1) {
        System_getInstance().mf_1.lf('DFA after predictATN: ' + dfa.nl(this.mq_1.di()));
      }
      return alt;
    }finally {
      this.pq_1 = null;
      this.tq_1 = null;
      input.dg(index);
      input.cg(m);
    }
  };
  protoOf(ParserATNSimulator).g17 = function (dfa, s0, input, startIndex, outerContext) {
    if (Companion_getInstance_16().t16_1 || Companion_getInstance_16().u16_1) {
      System_getInstance().mf_1.lf('execATN decision ' + dfa.g14_1 + (', DFA state ' + s0.toString()) + (', LA(1)==' + this.a17(input)) + (', line ' + ensureNotNull(input.og(1)).sh() + ':' + ensureNotNull(input.og(1)).uh()));
    }
    var previousD = s0;
    var t = input.ig(1);
    while (true) {
      var tmp0_elvis_lhs = this.q14(previousD, t);
      var D = tmp0_elvis_lhs == null ? this.h17(dfa, previousD, t) : tmp0_elvis_lhs;
      if (D === Companion_getInstance_11().e10_1) {
        var e = this.i17(input, outerContext, previousD.xz_1, startIndex);
        input.dg(startIndex);
        var alt = this.j17(previousD.xz_1, outerContext);
        if (!(alt === 0)) {
          return alt;
        }
        throw e;
      }
      if (ensureNotNull(D).c10_1 && !this.oq_1.equals(PredictionMode_SLL_getInstance())) {
        var conflictingAlts = D.xz_1.vv_1;
        if (!(D.d10_1 == null)) {
          if (Companion_getInstance_16().t16_1) {
            System_getInstance().mf_1.lf('DFA state has preds in DFA sim LL failover');
          }
          var conflictIndex = input.ag();
          if (!(conflictIndex === startIndex)) {
            input.dg(startIndex);
          }
          conflictingAlts = this.k17(ensureNotNull(D.d10_1), outerContext, true);
          if (conflictingAlts.m17() === 1) {
            if (Companion_getInstance_16().t16_1) {
              System_getInstance().mf_1.lf('Full LL avoided');
            }
            return conflictingAlts.l17(0);
          }
          if (!(conflictIndex === startIndex)) {
            input.dg(conflictIndex);
          }
        }
        if (Companion_getInstance_16().v16_1) {
          System_getInstance().mf_1.lf('ctx sensitive state ' + outerContext.toString() + ' in ' + toString_1(D));
        }
        var fullCtx = true;
        var s0Closure = this.c17(dfa.f14_1, outerContext, fullCtx);
        this.n17(dfa, ensureNotNull(conflictingAlts), D.xz_1, startIndex, input.ag());
        return this.o17(dfa, D, s0Closure, input, startIndex, outerContext);
      }
      if (D.zz_1) {
        if (D.d10_1 == null) {
          return D.a10_1;
        }
        var stopIndex = input.ag();
        input.dg(startIndex);
        var alts = this.k17(ensureNotNull(D.d10_1), outerContext, true);
        switch (alts.m17()) {
          case 0:
            throw this.i17(input, outerContext, D.xz_1, startIndex);
          case 1:
            return alts.l17(0);
          default:
            this.p17(dfa, D, startIndex, stopIndex, false, alts, D.xz_1);
            return alts.l17(0);
        }
      }
      previousD = D;
      if (!(t === -1)) {
        input.hg();
        t = input.ig(1);
      }
    }
  };
  protoOf(ParserATNSimulator).q14 = function (previousD, t) {
    var edges = previousD.yz_1;
    if (edges == null || (t + 1 | 0) < 0 || (t + 1 | 0) >= edges.length) {
      return null;
    }
    return edges[t + 1 | 0];
  };
  protoOf(ParserATNSimulator).h17 = function (dfa, previousD, t) {
    var reach = this.q17(previousD.xz_1, t, false);
    if (reach == null) {
      this.r17(dfa, previousD, t, Companion_getInstance_11().e10_1);
      return Companion_getInstance_11().e10_1;
    }
    var D = DFAState_init_$Create$_0(reach);
    var predictedAlt = Companion_getInstance_16().y16(reach);
    if (Companion_getInstance_16().t16_1) {
      var altSubSets = Companion_instance_18.s17(reach);
      System_getInstance().mf_1.lf('SLL altSubSets=' + toString_0(altSubSets) + (', configs=' + toString_1(reach)) + (', predict=' + predictedAlt) + (', allSubsetsConflict=' + Companion_instance_18.t17(altSubSets)) + (', conflictingAlts=' + this.u17(reach).toString()));
    }
    if (!(predictedAlt === 0)) {
      D.zz_1 = true;
      D.xz_1.uv_1 = predictedAlt;
      D.a10_1 = predictedAlt;
    } else if (Companion_instance_18.v17(this.oq_1, reach)) {
      D.xz_1.vv_1 = this.u17(reach);
      D.c10_1 = true;
      D.zz_1 = true;
      D.a10_1 = ensureNotNull(D.xz_1.vv_1).l17(0);
    }
    if (D.zz_1 && D.xz_1.wv_1) {
      this.w17(D, ensureNotNull(this.nk_1.wt(dfa.g14_1)));
      if (!(D.d10_1 == null)) {
        D.a10_1 = 0;
      }
    }
    return this.r17(dfa, previousD, t, D);
  };
  protoOf(ParserATNSimulator).w17 = function (dfaState, decisionState) {
    var nAlts = decisionState.gy();
    var altsToCollectPredsFrom = this.x17(dfaState.xz_1);
    var altToPred = this.y17(altsToCollectPredsFrom, dfaState.xz_1, nAlts);
    if (!(altToPred == null)) {
      dfaState.d10_1 = this.z17(altsToCollectPredsFrom, altToPred);
      dfaState.a10_1 = 0;
    } else {
      dfaState.a10_1 = altsToCollectPredsFrom.l17(0);
    }
  };
  protoOf(ParserATNSimulator).o17 = function (dfa, D, s0, input, startIndex, outerContext) {
    if (Companion_getInstance_16().t16_1 || Companion_getInstance_16().u16_1) {
      System_getInstance().mf_1.lf('execATNWithFullContext ' + s0.toString());
    }
    var fullCtx = true;
    var foundExactAmbig = false;
    var reach;
    var previous = s0;
    input.dg(startIndex);
    var t = input.ig(1);
    var predictedAlt;
    $l$loop_1: while (true) {
      reach = this.q17(previous, t, fullCtx);
      if (reach == null) {
        var e = this.i17(input, outerContext, previous, startIndex);
        input.dg(startIndex);
        var alt = this.j17(previous, outerContext);
        if (!(alt === 0)) {
          return alt;
        }
        throw e;
      }
      var altSubSets = Companion_instance_18.s17(reach);
      if (Companion_getInstance_16().t16_1) {
        System_getInstance().mf_1.lf('LL altSubSets=' + toString_0(altSubSets) + (', predict=' + Companion_instance_18.a18(altSubSets)) + (', resolvesToJustOneViableAlt=' + Companion_instance_18.b18(altSubSets)));
      }
      reach.uv_1 = Companion_getInstance_16().y16(reach);
      if (!(reach.uv_1 === 0)) {
        predictedAlt = reach.uv_1;
        break $l$loop_1;
      }
      if (!this.oq_1.equals(PredictionMode_LL_EXACT_AMBIG_DETECTION_getInstance())) {
        predictedAlt = Companion_instance_18.b18(altSubSets);
        if (!(predictedAlt === 0)) {
          break $l$loop_1;
        }
      } else {
        if (Companion_instance_18.t17(altSubSets) && Companion_instance_18.d18(altSubSets)) {
          foundExactAmbig = true;
          predictedAlt = Companion_instance_18.c18(altSubSets);
          break $l$loop_1;
        }
      }
      previous = reach;
      if (!(t === -1)) {
        input.hg();
        t = input.ig(1);
      }
    }
    if (!(ensureNotNull(reach).uv_1 === 0)) {
      this.e18(dfa, predictedAlt, reach, startIndex, input.ag());
      return predictedAlt;
    }
    this.p17(dfa, D, startIndex, input.ag(), foundExactAmbig, reach.aw(), reach);
    return predictedAlt;
  };
  protoOf(ParserATNSimulator).q17 = function (closure, t, fullCtx) {
    if (Companion_getInstance_16().t16_1) {
      System_getInstance().mf_1.lf('in computeReachSet, starting closure: ' + closure.toString());
    }
    if (this.pq_1 == null) {
      this.pq_1 = new DoubleKeyMap();
    }
    var intermediate = new ATNConfigSet(fullCtx);
    var skippedStopStates = null;
    var tmp0_iterator = closure.f();
    $l$loop: while (tmp0_iterator.g()) {
      var c = tmp0_iterator.h();
      if (Companion_getInstance_16().t16_1) {
        System_getInstance().mf_1.lf('testing ' + this.x14(t) + ' at ' + c.toString());
      }
      var tmp = c.yt_1;
      if (tmp instanceof RuleStopState) {
        // Inline function 'com.strumenta.antlrkotlin.runtime.assert' call
        // Inline function 'kotlin.contracts.contract' call
        if (!ensureNotNull(c.au_1).kp()) {
          throw AssertionError_init_$Create$(null);
        }
        if (fullCtx || t === -1) {
          if (skippedStopStates == null) {
            skippedStopStates = ArrayList_init_$Create$_0();
          }
          skippedStopStates.j(c);
        }
        continue $l$loop;
      }
      var n = c.yt_1.gy();
      var inductionVariable = 0;
      if (inductionVariable < n)
        do {
          var ti = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var trans = c.yt_1.dm(ti);
          var target = this.y14(trans, t);
          if (!(target == null)) {
            intermediate.ew(ATNConfig_init_$Create$_2(c, target), this.pq_1);
          }
        }
         while (inductionVariable < n);
    }
    var reach = null;
    if (skippedStopStates == null && !(t === -1)) {
      if (intermediate.i() === 1) {
        reach = intermediate;
      } else if (!(Companion_getInstance_16().y16(intermediate) === 0)) {
        reach = intermediate;
      }
    }
    if (reach == null) {
      reach = new ATNConfigSet(fullCtx);
      var closureBusy = HashSet_init_$Create$();
      var treatEofAsEpsilon = t === -1;
      var tmp2_iterator = intermediate.f();
      while (tmp2_iterator.g()) {
        var c_0 = tmp2_iterator.h();
        this.f18(c_0, reach, closureBusy, false, fullCtx, treatEofAsEpsilon);
      }
    }
    if (t === -1) {
      reach = this.g18(reach, reach === intermediate);
    }
    if (!(skippedStopStates == null) && (!fullCtx || !Companion_instance_18.h18(reach))) {
      // Inline function 'kotlin.collections.isNotEmpty' call
      // Inline function 'com.strumenta.antlrkotlin.runtime.assert' call
      // Inline function 'kotlin.contracts.contract' call
      if (!!skippedStopStates.r()) {
        throw AssertionError_init_$Create$(null);
      }
      var tmp3_iterator = skippedStopStates.f();
      while (tmp3_iterator.g()) {
        var c_1 = tmp3_iterator.h();
        reach.ew(c_1, this.pq_1);
      }
    }
    if (Companion_getInstance_16().u16_1) {
      System_getInstance().mf_1.lf('computeReachSet ' + closure.toString() + ' -> ' + toString_1(reach));
    }
    var tmp_0;
    if (reach.r()) {
      tmp_0 = null;
    } else {
      tmp_0 = reach;
    }
    return tmp_0;
  };
  protoOf(ParserATNSimulator).g18 = function (configs, lookToEndOfRule) {
    if (Companion_instance_18.i18(configs)) {
      return configs;
    }
    var result = new ATNConfigSet(configs.rv_1);
    var tmp0_iterator = configs.f();
    $l$loop: while (tmp0_iterator.g()) {
      var config = tmp0_iterator.h();
      var tmp = config.yt_1;
      if (tmp instanceof RuleStopState) {
        result.ew(config, this.pq_1);
        continue $l$loop;
      }
      if (lookToEndOfRule && config.yt_1.sz()) {
        var nextTokens = this.nk_1.rk(config.yt_1);
        if (nextTokens.oc(-2)) {
          var endOfRuleState = ensureNotNull(this.nk_1.ik_1)[config.yt_1.uk_1];
          result.ew(ATNConfig_init_$Create$_2(config, ensureNotNull(endOfRuleState)), this.pq_1);
        }
      }
    }
    return result;
  };
  protoOf(ParserATNSimulator).c17 = function (p, ctx, fullCtx) {
    var initialContext = Companion_instance_17.j13(this.nk_1, ctx);
    var configs = new ATNConfigSet(fullCtx);
    if (Companion_getInstance_16().u16_1) {
      System_getInstance().mf_1.lf('computeStartState from ATN state ' + p.toString() + ' initialContext=' + initialContext.v11(this.mq_1));
    }
    var inductionVariable = 0;
    var last = p.gy();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var target = p.dm(i).bm_1;
        var c = ATNConfig_init_$Create$(target, i + 1 | 0, initialContext);
        var closureBusy = HashSet_init_$Create$();
        this.f18(c, configs, closureBusy, true, fullCtx, false);
      }
       while (inductionVariable < last);
    return configs;
  };
  protoOf(ParserATNSimulator).e17 = function (configs) {
    var statesFromAlt1 = HashMap_init_$Create$();
    var configSet = new ATNConfigSet(configs.rv_1);
    var tmp0_iterator = configs.f();
    $l$loop_0: while (tmp0_iterator.g()) {
      var config = tmp0_iterator.h();
      if (!(config.zt_1 === 1)) {
        continue $l$loop_0;
      }
      var tmp1_elvis_lhs = config.cu_1.j18(this.mq_1, ensureNotNull(this.sq_1));
      var tmp;
      if (tmp1_elvis_lhs == null) {
        continue $l$loop_0;
      } else {
        tmp = tmp1_elvis_lhs;
      }
      var updatedContext = tmp;
      var tmp1 = config.yt_1.tk_1;
      // Inline function 'kotlin.collections.set' call
      var value = ensureNotNull(config.au_1);
      statesFromAlt1.w1(tmp1, value);
      if (!(updatedContext === config.cu_1)) {
        configSet.ew(ATNConfig_init_$Create$_1(config, updatedContext), this.pq_1);
      } else {
        configSet.ew(config, this.pq_1);
      }
    }
    var tmp2_iterator = configs.f();
    $l$loop_2: while (tmp2_iterator.g()) {
      var config_0 = tmp2_iterator.h();
      if (config_0.zt_1 === 1) {
        continue $l$loop_2;
      }
      if (!config_0.fu()) {
        var context = statesFromAlt1.t1(config_0.yt_1.tk_1);
        if (!(context == null) && equals(context, config_0.au_1)) {
          continue $l$loop_2;
        }
      }
      configSet.ew(config_0, this.pq_1);
    }
    return configSet;
  };
  protoOf(ParserATNSimulator).y14 = function (trans, ttype) {
    var tmp;
    if (trans.z10(ttype, 0, this.nk_1.ek_1)) {
      tmp = trans.bm_1;
    } else {
      tmp = null;
    }
    return tmp;
  };
  protoOf(ParserATNSimulator).y17 = function (ambigAlts, configs, nAlts) {
    // Inline function 'kotlin.arrayOfNulls' call
    var size = nAlts + 1 | 0;
    var altToPred = fillArrayVal(Array(size), null);
    var tmp0_iterator = configs.f();
    while (tmp0_iterator.g()) {
      var c = tmp0_iterator.h();
      if (ambigAlts.o1(c.zt_1)) {
        altToPred[c.zt_1] = Companion_instance_19.k18(altToPred[c.zt_1], c.cu_1);
      }
    }
    var nPredAlts = 0;
    var inductionVariable = 1;
    if (inductionVariable <= nAlts)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (altToPred[i] == null) {
          altToPred[i] = Empty_getInstance();
        } else if (!(altToPred[i] === Empty_getInstance())) {
          nPredAlts = nPredAlts + 1 | 0;
        }
      }
       while (!(i === nAlts));
    if (nPredAlts === 0) {
      if (Companion_getInstance_16().t16_1) {
        System_getInstance().mf_1.lf('getPredsForAmbigAlts result null');
      }
      return null;
    }
    if (Companion_getInstance_16().t16_1) {
      System_getInstance().mf_1.lf('getPredsForAmbigAlts result ' + joinToString(altToPred));
    }
    return altToPred;
  };
  protoOf(ParserATNSimulator).z17 = function (ambigAlts, altToPred) {
    var pairs = ArrayList_init_$Create$_0();
    var containsPredicate = false;
    var inductionVariable = 1;
    var last = altToPred.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var pred = altToPred[i];
        // Inline function 'com.strumenta.antlrkotlin.runtime.assert' call
        // Inline function 'kotlin.contracts.contract' call
        if (!!(pred == null)) {
          throw AssertionError_init_$Create$(null);
        }
        if (!(ambigAlts == null) && ambigAlts.o1(i)) {
          pairs.j(new PredPrediction(pred, i));
        }
        if (!(pred === Empty_getInstance())) {
          containsPredicate = true;
        }
      }
       while (inductionVariable < last);
    if (!containsPredicate) {
      return null;
    }
    // Inline function 'kotlin.collections.toTypedArray' call
    return copyToArray(pairs);
  };
  protoOf(ParserATNSimulator).j17 = function (configs, outerContext) {
    var sets = this.l18(configs, outerContext);
    var semValidConfigs = sets.qb_1;
    var semInvalidConfigs = sets.rb_1;
    var alt = this.m18(semValidConfigs);
    if (!(alt === 0)) {
      return alt;
    }
    if (semInvalidConfigs.i() > 0) {
      alt = this.m18(semInvalidConfigs);
      if (!(alt === 0)) {
        return alt;
      }
    }
    return 0;
  };
  protoOf(ParserATNSimulator).m18 = function (configs) {
    var alts = IntervalSet_init_$Create$();
    var tmp0_iterator = configs.f();
    while (tmp0_iterator.g()) {
      var c = tmp0_iterator.h();
      var tmp;
      if (c.du() > 0) {
        tmp = true;
      } else {
        var tmp_0;
        var tmp_1 = c.yt_1;
        if (tmp_1 instanceof RuleStopState) {
          tmp_0 = ensureNotNull(c.au_1).u11();
        } else {
          tmp_0 = false;
        }
        tmp = tmp_0;
      }
      if (tmp) {
        alts.zj(c.zt_1);
      }
    }
    if (alts.gg() === 0) {
      return 0;
    }
    return alts.fm();
  };
  protoOf(ParserATNSimulator).l18 = function (configs, outerContext) {
    var succeeded = new ATNConfigSet(configs.rv_1);
    var failed = new ATNConfigSet(configs.rv_1);
    var tmp0_iterator = configs.f();
    while (tmp0_iterator.g()) {
      var c = tmp0_iterator.h();
      if (!(c.cu_1 === Empty_getInstance())) {
        var predicateEvaluationResult = this.n18(c.cu_1, outerContext, c.zt_1, configs.rv_1);
        if (predicateEvaluationResult) {
          succeeded.dw(c);
        } else {
          failed.dw(c);
        }
      } else {
        succeeded.dw(c);
      }
    }
    return new Pair(succeeded, failed);
  };
  protoOf(ParserATNSimulator).k17 = function (predPredictions, outerContext, complete) {
    var predictions = BitSet_init_$Create$();
    var inductionVariable = 0;
    var last = predPredictions.length;
    $l$loop_1: while (inductionVariable < last) {
      var pair = predPredictions[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (pair.o18_1 === Empty_getInstance()) {
        predictions.cw(pair.p18_1);
        if (!complete) {
          break $l$loop_1;
        }
        continue $l$loop_1;
      }
      var fullCtx = false;
      var predicateEvaluationResult = this.n18(pair.o18_1, outerContext, pair.p18_1, fullCtx);
      if (Companion_getInstance_16().t16_1 || Companion_getInstance_16().v16_1) {
        System_getInstance().mf_1.lf('eval pred ' + pair.toString() + '=' + predicateEvaluationResult);
      }
      if (predicateEvaluationResult) {
        if (Companion_getInstance_16().t16_1 || Companion_getInstance_16().v16_1) {
          System_getInstance().mf_1.lf('PREDICT ' + pair.p18_1);
        }
        predictions.cw(pair.p18_1);
        if (!complete) {
          break $l$loop_1;
        }
      }
    }
    return predictions;
  };
  protoOf(ParserATNSimulator).n18 = function (pred, parserCallStack, alt, fullCtx) {
    return pred.q18(this.mq_1, parserCallStack);
  };
  protoOf(ParserATNSimulator).f18 = function (config, configs, closureBusy, collectPredicates, fullCtx, treatEofAsEpsilon) {
    var initialDepth = 0;
    this.r18(config, configs, closureBusy, collectPredicates, fullCtx, initialDepth, treatEofAsEpsilon);
    // Inline function 'com.strumenta.antlrkotlin.runtime.assert' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(!fullCtx || !configs.xv_1)) {
      throw AssertionError_init_$Create$(null);
    }
  };
  protoOf(ParserATNSimulator).r18 = function (config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon) {
    if (Companion_getInstance_16().u16_1) {
      System_getInstance().mf_1.lf('closure(' + config.mu(this.mq_1, true) + ')');
    }
    var tmp = config.yt_1;
    if (tmp instanceof RuleStopState) {
      if (!ensureNotNull(config.au_1).kp()) {
        var inductionVariable = 0;
        var last = ensureNotNull(config.au_1).gg();
        if (inductionVariable < last)
          $l$loop_0: do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            if (ensureNotNull(config.au_1).r11(i) === 2147483647) {
              if (fullCtx) {
                configs.ew(ATNConfig_init_$Create$_2(config, config.yt_1, EmptyPredictionContext_getInstance()), this.pq_1);
                continue $l$loop_0;
              }
              if (Companion_getInstance_16().t16_1) {
                System_getInstance().mf_1.lf('FALLING off rule ' + this.s18(config.yt_1.uk_1));
              }
              this.t18(config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon);
              continue $l$loop_0;
            }
            var returnState = this.nk_1.fk_1.o1(ensureNotNull(config.au_1).r11(i));
            var newContext = ensureNotNull(config.au_1).q11(i);
            var c = ATNConfig_init_$Create$(ensureNotNull(returnState), config.zt_1, ensureNotNull(newContext), config.cu_1);
            c.bu_1 = config.bu_1;
            // Inline function 'com.strumenta.antlrkotlin.runtime.assert' call
            // Inline function 'kotlin.contracts.contract' call
            if (!(depth > -2147483648)) {
              throw AssertionError_init_$Create$(null);
            }
            this.r18(c, configs, closureBusy, collectPredicates, fullCtx, depth - 1 | 0, treatEofAsEpsilon);
          }
           while (inductionVariable < last);
        return Unit_instance;
      } else if (fullCtx) {
        configs.ew(config, this.pq_1);
        return Unit_instance;
      } else {
        if (Companion_getInstance_16().t16_1) {
          System_getInstance().mf_1.lf('FALLING off rule ' + this.s18(config.yt_1.uk_1));
        }
      }
    }
    this.t18(config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon);
  };
  protoOf(ParserATNSimulator).t18 = function (config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon) {
    var p = config.yt_1;
    if (!p.sz()) {
      configs.ew(config, this.pq_1);
    }
    var inductionVariable = 0;
    var last = p.gy();
    if (inductionVariable < last)
      $l$loop_1: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (i === 0 && this.u18(config)) {
          continue $l$loop_1;
        }
        var t = p.dm(i);
        var tmp;
        if (!(t instanceof ActionTransition)) {
          tmp = collectPredicates;
        } else {
          tmp = false;
        }
        var continueCollecting = tmp;
        var c = this.v18(config, t, continueCollecting, depth === 0, fullCtx, treatEofAsEpsilon);
        if (!(c == null)) {
          var newDepth = depth;
          var tmp_0 = config.yt_1;
          if (tmp_0 instanceof RuleStopState) {
            // Inline function 'com.strumenta.antlrkotlin.runtime.assert' call
            // Inline function 'kotlin.contracts.contract' call
            if (!!fullCtx) {
              throw AssertionError_init_$Create$(null);
            }
            if (!(this.tq_1 == null) && ensureNotNull(this.tq_1).j14_1) {
              var outermostPrecedenceReturn = (t instanceof EpsilonTransition ? t : THROW_CCE()).g13_1;
              if (outermostPrecedenceReturn === ensureNotNull(this.tq_1).f14_1.uk_1) {
                c.eu(true);
              }
            }
            c.bu_1 = c.bu_1 + 1 | 0;
            if (!closureBusy.j(c)) {
              continue $l$loop_1;
            }
            configs.xv_1 = true;
            // Inline function 'com.strumenta.antlrkotlin.runtime.assert' call
            // Inline function 'kotlin.contracts.contract' call
            if (!(newDepth > -2147483648)) {
              throw AssertionError_init_$Create$(null);
            }
            newDepth = newDepth - 1 | 0;
            if (Companion_getInstance_16().t16_1) {
              System_getInstance().mf_1.lf('dips into outer ctx: ' + toString_1(c));
            }
          } else {
            if (!t.x10() && !closureBusy.j(c)) {
              continue $l$loop_1;
            }
            if (t instanceof RuleTransition) {
              if (newDepth >= 0) {
                newDepth = newDepth + 1 | 0;
              }
            }
          }
          this.r18(c, configs, closureBusy, continueCollecting, fullCtx, newDepth, treatEofAsEpsilon);
        }
      }
       while (inductionVariable < last);
  };
  protoOf(ParserATNSimulator).u18 = function (config) {
    if (Companion_getInstance_16().x16_1) {
      return false;
    }
    var p = config.yt_1;
    var tmp;
    var tmp_0;
    var tmp_1;
    if (!(p.zk() === 10)) {
      tmp_1 = true;
    } else {
      tmp_1 = !(p instanceof StarLoopEntryState ? p : THROW_CCE()).az_1;
    }
    if (tmp_1) {
      tmp_0 = true;
    } else {
      tmp_0 = ensureNotNull(config.au_1).kp();
    }
    if (tmp_0) {
      tmp = true;
    } else {
      tmp = ensureNotNull(config.au_1).u11();
    }
    if (tmp) {
      return false;
    }
    var numCtxs = ensureNotNull(config.au_1).gg();
    var inductionVariable = 0;
    if (inductionVariable < numCtxs)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var returnState = this.nk_1.fk_1.o1(ensureNotNull(config.au_1).r11(i));
        if (!(ensureNotNull(returnState).uk_1 === p.uk_1)) {
          return false;
        }
      }
       while (inductionVariable < numCtxs);
    var tmp_2 = p.dm(0).bm_1;
    var decisionStartState = tmp_2 instanceof BlockStartState ? tmp_2 : THROW_CCE();
    var blockEndStateNum = ensureNotNull(decisionStartState.tx_1).tk_1;
    var tmp_3 = this.nk_1.fk_1.o1(blockEndStateNum);
    var blockEndState = tmp_3 instanceof BlockEndState ? tmp_3 : THROW_CCE();
    var inductionVariable_0 = 0;
    if (inductionVariable_0 < numCtxs)
      $l$loop_2: do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var returnStateNumber = ensureNotNull(config.au_1).r11(i_0);
        var returnState_0 = this.nk_1.fk_1.o1(returnStateNumber);
        if (!(ensureNotNull(returnState_0).gy() === 1) || !returnState_0.dm(0).x10()) {
          return false;
        }
        var returnStateTarget = returnState_0.dm(0).bm_1;
        if (returnState_0.zk() === 8 && returnStateTarget === p) {
          continue $l$loop_2;
        }
        if (returnState_0 === blockEndState) {
          continue $l$loop_2;
        }
        if (returnStateTarget === blockEndState) {
          continue $l$loop_2;
        }
        if (returnStateTarget.zk() === 8 && returnStateTarget.gy() === 1 && returnStateTarget.dm(0).x10() && returnStateTarget.dm(0).bm_1 === p) {
          continue $l$loop_2;
        }
        return false;
      }
       while (inductionVariable_0 < numCtxs);
    return true;
  };
  protoOf(ParserATNSimulator).s18 = function (index) {
    if (index >= 0) {
      return this.mq_1.ol()[index];
    }
    return '<rule ' + index + '>';
  };
  protoOf(ParserATNSimulator).v18 = function (config, t, collectPredicates, inContext, fullCtx, treatEofAsEpsilon) {
    switch (t.y10()) {
      case 3:
        return this.w18(config, t instanceof RuleTransition ? t : THROW_CCE());
      case 10:
        return this.x18(config, t instanceof PrecedencePredicateTransition ? t : THROW_CCE(), collectPredicates, inContext, fullCtx);
      case 4:
        return this.y18(config, t instanceof PredicateTransition ? t : THROW_CCE(), collectPredicates, inContext, fullCtx);
      case 6:
        return this.z18(config, t instanceof ActionTransition ? t : THROW_CCE());
      case 1:
        return ATNConfig_init_$Create$_2(config, t.bm_1);
      case 5:
      case 2:
      case 7:
        if (treatEofAsEpsilon) {
          if (t.z10(-1, 0, 1)) {
            return ATNConfig_init_$Create$_2(config, t.bm_1);
          }
        }

        return null;
      default:
        return null;
    }
  };
  protoOf(ParserATNSimulator).z18 = function (config, t) {
    if (Companion_getInstance_16().t16_1) {
      System_getInstance().mf_1.lf('ACTION edge ' + t.c11_1 + ':' + t.d11_1);
    }
    return ATNConfig_init_$Create$_2(config, t.bm_1);
  };
  protoOf(ParserATNSimulator).x18 = function (config, pt, collectPredicates, inContext, fullCtx) {
    if (Companion_getInstance_16().t16_1) {
      System_getInstance().mf_1.lf('PRED (collectPredicates=' + collectPredicates + ') ' + pt.c19_1 + '>=_p, ctx dependent=true');
      System_getInstance().mf_1.lf('context surrounding pred is ' + toString_0(this.mq_1.cs()));
    }
    var c = null;
    if (collectPredicates && inContext) {
      if (fullCtx) {
        var currentPosition = ensureNotNull(this.qq_1).ag();
        ensureNotNull(this.qq_1).dg(this.rq_1);
        var predSucceeds = this.n18(pt.f19(), ensureNotNull(this.sq_1), config.zt_1, fullCtx);
        ensureNotNull(this.qq_1).dg(currentPosition);
        if (predSucceeds) {
          c = ATNConfig_init_$Create$_2(config, pt.bm_1);
        }
      } else {
        var newSemCtx = Companion_instance_19.g19(config.cu_1, pt.f19());
        c = ATNConfig_init_$Create$_0(config, pt.bm_1, ensureNotNull(newSemCtx));
      }
    } else {
      c = ATNConfig_init_$Create$_2(config, pt.bm_1);
    }
    if (Companion_getInstance_16().t16_1) {
      System_getInstance().mf_1.lf('config from pred transition=' + toString_1(c));
    }
    return c;
  };
  protoOf(ParserATNSimulator).y18 = function (config, pt, collectPredicates, inContext, fullCtx) {
    if (Companion_getInstance_16().t16_1) {
      System_getInstance().mf_1.lf('PRED (collectPredicates=' + collectPredicates + ')' + (' ' + pt.en_1 + ':' + pt.fn_1) + (', ctx dependent=' + pt.gn_1));
      System_getInstance().mf_1.lf('context surrounding pred is ' + toString_0(this.mq_1.cs()));
    }
    var c = null;
    if (collectPredicates && (!pt.gn_1 || (pt.gn_1 && inContext))) {
      if (fullCtx) {
        var currentPosition = ensureNotNull(this.qq_1).ag();
        ensureNotNull(this.qq_1).dg(this.rq_1);
        var predSucceeds = this.n18(pt.f19(), ensureNotNull(this.sq_1), config.zt_1, fullCtx);
        ensureNotNull(this.qq_1).dg(currentPosition);
        if (predSucceeds) {
          c = ATNConfig_init_$Create$_2(config, pt.bm_1);
        }
      } else {
        var newSemCtx = Companion_instance_19.g19(config.cu_1, pt.f19());
        c = ATNConfig_init_$Create$_0(config, pt.bm_1, ensureNotNull(newSemCtx));
      }
    } else {
      c = ATNConfig_init_$Create$_2(config, pt.bm_1);
    }
    if (Companion_getInstance_16().t16_1) {
      System_getInstance().mf_1.lf('config from pred transition=' + toString_1(c));
    }
    return c;
  };
  protoOf(ParserATNSimulator).w18 = function (config, t) {
    if (Companion_getInstance_16().t16_1) {
      System_getInstance().mf_1.lf('CALL rule ' + this.s18(t.bm_1.uk_1) + ', ctx=' + toString_1(config.au_1));
    }
    var returnState = t.om_1;
    var newContext = Companion_instance_20.n13(config.au_1, returnState.tk_1);
    return ATNConfig_init_$Create$_2(config, t.bm_1, newContext);
  };
  protoOf(ParserATNSimulator).u17 = function (configs) {
    var altSets = Companion_instance_18.s17(configs);
    return Companion_instance_18.h19(altSets);
  };
  protoOf(ParserATNSimulator).x17 = function (configs) {
    var conflictingAlts;
    if (!(configs.uv_1 === 0)) {
      conflictingAlts = BitSet_init_$Create$();
      conflictingAlts.cw(configs.uv_1);
    } else {
      conflictingAlts = ensureNotNull(configs.vv_1);
    }
    return conflictingAlts;
  };
  protoOf(ParserATNSimulator).x14 = function (t) {
    if (t === -1) {
      return 'EOF';
    }
    var vocabulary = this.mq_1.di();
    var displayName = vocabulary.ei(t);
    if (displayName === t.toString()) {
      return displayName;
    }
    return displayName + '<' + t + '>';
  };
  protoOf(ParserATNSimulator).a17 = function (input) {
    return this.x14(input.ig(1));
  };
  protoOf(ParserATNSimulator).i17 = function (input, outerContext, configs, startIndex) {
    return new NoViableAltException(this.mq_1, input, input.o1(startIndex), input.og(1), configs, outerContext);
  };
  protoOf(ParserATNSimulator).r17 = function (dfa, from, t, to) {
    if (Companion_getInstance_16().t16_1) {
      System_getInstance().mf_1.lf('EDGE ' + toString_1(from) + ' -> ' + toString_1(to) + ' upon ' + this.x14(t));
    }
    if (to == null) {
      return null;
    }
    var tto = this.d17(dfa, to);
    if (from == null || t < -1 || t > this.nk_1.ek_1) {
      return tto;
    }
    // Inline function 'com.strumenta.antlrkotlin.runtime.synchronized' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'org.antlr.v4.kotlinruntime.atn.ParserATNSimulator.addDFAEdge.<anonymous>' call
    if (from.yz_1 == null) {
      var tmp = from;
      // Inline function 'kotlin.arrayOfNulls' call
      var size = (this.nk_1.ek_1 + 1 | 0) + 1 | 0;
      tmp.yz_1 = fillArrayVal(Array(size), null);
    }
    ensureNotNull(from.yz_1)[t + 1 | 0] = tto;
    if (Companion_getInstance_16().t16_1) {
      System_getInstance().mf_1.lf('DFA=\n' + dfa.nl(this.mq_1.di()));
    }
    return tto;
  };
  protoOf(ParserATNSimulator).d17 = function (dfa, D) {
    if (D === Companion_getInstance_11().e10_1) {
      return D;
    }
    // Inline function 'com.strumenta.antlrkotlin.runtime.synchronized' call
    dfa.h14_1;
    // Inline function 'kotlin.contracts.contract' call
    var existing = dfa.h14_1.t1(D);
    if (!(existing == null)) {
      if (Companion_getInstance_16().u16_1) {
        System_getInstance().mf_1.lf('addDFAState ' + D.toString() + ' exists');
      }
      return existing;
    }
    D.wz_1 = dfa.h14_1.i();
    if (!D.xz_1.zv_1) {
      D.xz_1.kw(this);
      D.xz_1.kt(true);
    }
    if (Companion_getInstance_16().u16_1) {
      System_getInstance().mf_1.lf('addDFAState new ' + D.toString());
    }
    // Inline function 'kotlin.collections.set' call
    dfa.h14_1.w1(D, D);
    return D;
  };
  protoOf(ParserATNSimulator).n17 = function (dfa, conflictingAlts, configs, startIndex, stopIndex) {
    if (Companion_getInstance_16().t16_1 || Companion_getInstance_16().w16_1) {
      var interval = Companion_getInstance_25().dh(startIndex, stopIndex);
      System_getInstance().mf_1.lf('reportAttemptingFullContext' + (' decision=' + dfa.g14_1 + ':' + configs.toString()) + (', input=' + this.mq_1.wj().ug(interval)));
    }
    this.mq_1.qp().tf(this.mq_1, dfa, startIndex, stopIndex, conflictingAlts, configs);
  };
  protoOf(ParserATNSimulator).e18 = function (dfa, prediction, configs, startIndex, stopIndex) {
    if (Companion_getInstance_16().t16_1 || Companion_getInstance_16().w16_1) {
      var interval = Companion_getInstance_25().dh(startIndex, stopIndex);
      System_getInstance().mf_1.lf('reportContextSensitivity' + (' decision=' + dfa.g14_1 + ':' + configs.toString()) + (', input=' + this.mq_1.wj().ug(interval)));
    }
    this.mq_1.qp().uf(this.mq_1, dfa, startIndex, stopIndex, prediction, configs);
  };
  protoOf(ParserATNSimulator).p17 = function (dfa, D, startIndex, stopIndex, exact, ambigAlts, configs) {
    if (Companion_getInstance_16().t16_1 || Companion_getInstance_16().w16_1) {
      var interval = Companion_getInstance_25().dh(startIndex, stopIndex);
      System_getInstance().mf_1.lf('reportAmbiguity ' + ambigAlts.toString() + ':' + configs.toString() + ', input=' + this.mq_1.wj().ug(interval));
    }
    this.mq_1.qp().sf(this.mq_1, dfa, startIndex, stopIndex, exact, ambigAlts, configs);
  };
  function PlusBlockStartState() {
    BlockStartState.call(this);
    this.mz_1 = null;
    this.nz_1 = 4;
  }
  protoOf(PlusBlockStartState).zk = function () {
    return this.nz_1;
  };
  function PlusLoopbackState() {
    DecisionState.call(this);
    this.r19_1 = 11;
  }
  protoOf(PlusLoopbackState).zk = function () {
    return this.r19_1;
  };
  function PrecedencePredicateTransition(target, precedence) {
    AbstractPredicateTransition.call(this, target);
    this.c19_1 = precedence;
    this.d19_1 = 10;
    this.e19_1 = true;
  }
  protoOf(PrecedencePredicateTransition).y10 = function () {
    return this.d19_1;
  };
  protoOf(PrecedencePredicateTransition).x10 = function () {
    return this.e19_1;
  };
  protoOf(PrecedencePredicateTransition).f19 = function () {
    return new PrecedencePredicate(this.c19_1);
  };
  protoOf(PrecedencePredicateTransition).z10 = function (symbol, minVocabSymbol, maxVocabSymbol) {
    return false;
  };
  protoOf(PrecedencePredicateTransition).toString = function () {
    return '' + this.c19_1 + ' >= _p';
  };
  function PredicateTransition(target, ruleIndex, predIndex, isCtxDependent) {
    AbstractPredicateTransition.call(this, target);
    this.en_1 = ruleIndex;
    this.fn_1 = predIndex;
    this.gn_1 = isCtxDependent;
    this.hn_1 = 4;
    this.in_1 = true;
  }
  protoOf(PredicateTransition).y10 = function () {
    return this.hn_1;
  };
  protoOf(PredicateTransition).x10 = function () {
    return this.in_1;
  };
  protoOf(PredicateTransition).f19 = function () {
    return Predicate_init_$Create$_0(this.en_1, this.fn_1, this.gn_1);
  };
  protoOf(PredicateTransition).z10 = function (symbol, minVocabSymbol, maxVocabSymbol) {
    return false;
  };
  protoOf(PredicateTransition).toString = function () {
    return 'pred_' + this.en_1 + ':' + this.fn_1;
  };
  function Companion_17() {
    this.fw_1 = 1;
    this.gw_1 = 2147483647;
    this.hw_1 = 0;
  }
  protoOf(Companion_17).j13 = function (atn, outerContext) {
    var tempOuterContext = outerContext == null ? Companion_getInstance_4().ds_1 : outerContext;
    if (tempOuterContext.sm() == null || tempOuterContext === Companion_getInstance_4().ds_1) {
      return EmptyPredictionContext_getInstance();
    }
    var parent = this.j13(atn, tempOuterContext.sm());
    var state = atn.fk_1.o1(tempOuterContext.ql_1);
    var tmp = ensureNotNull(state).dm(0);
    var transition = tmp instanceof RuleTransition ? tmp : THROW_CCE();
    return Companion_instance_20.n13(parent, transition.om_1.tk_1);
  };
  protoOf(Companion_17).s19 = function () {
    var hash = MurmurHash_instance.iu(1);
    hash = MurmurHash_instance.lu(hash, 0);
    return hash;
  };
  protoOf(Companion_17).t19 = function (parent, returnState) {
    var hash = MurmurHash_instance.iu(1);
    hash = MurmurHash_instance.ku(hash, parent);
    hash = MurmurHash_instance.ju(hash, returnState);
    hash = MurmurHash_instance.lu(hash, 2);
    return hash;
  };
  protoOf(Companion_17).l11 = function (parents, returnStates) {
    var hash = MurmurHash_instance.iu(1);
    var inductionVariable = 0;
    var last = parents.length;
    while (inductionVariable < last) {
      var parent = parents[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      hash = MurmurHash_instance.ku(hash, parent);
    }
    var inductionVariable_0 = 0;
    var last_0 = returnStates.length;
    while (inductionVariable_0 < last_0) {
      var returnState = returnStates[inductionVariable_0];
      inductionVariable_0 = inductionVariable_0 + 1 | 0;
      hash = MurmurHash_instance.ju(hash, returnState);
    }
    hash = MurmurHash_instance.lu(hash, imul(2, parents.length));
    return hash;
  };
  protoOf(Companion_17).iw = function (a, b, rootIsWildcard, mergeCache) {
    var aa = a;
    var bb = b;
    // Inline function 'com.strumenta.antlrkotlin.runtime.assert' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(!(aa == null) && !(bb == null))) {
      throw AssertionError_init_$Create$(null);
    }
    if (a === b || equals(aa, bb)) {
      return aa;
    }
    var tmp;
    if (aa instanceof SingletonPredictionContext) {
      tmp = bb instanceof SingletonPredictionContext;
    } else {
      tmp = false;
    }
    if (tmp) {
      return this.u19(aa, bb, rootIsWildcard, mergeCache);
    }
    if (rootIsWildcard) {
      if (aa instanceof EmptyPredictionContext) {
        return aa;
      }
      if (bb instanceof EmptyPredictionContext) {
        return bb;
      }
    }
    if (aa instanceof SingletonPredictionContext) {
      aa = ArrayPredictionContext_init_$Create$(aa);
    }
    if (bb instanceof SingletonPredictionContext) {
      bb = ArrayPredictionContext_init_$Create$(bb);
    }
    var tmp_0 = aa instanceof ArrayPredictionContext ? aa : THROW_CCE();
    return this.v19(tmp_0, bb instanceof ArrayPredictionContext ? bb : THROW_CCE(), rootIsWildcard, mergeCache);
  };
  protoOf(Companion_17).u19 = function (a, b, rootIsWildcard, mergeCache) {
    if (!(mergeCache == null)) {
      var previous = mergeCache.x19(a, b);
      if (!(previous == null)) {
        return previous;
      }
      previous = mergeCache.x19(b, a);
      if (!(previous == null)) {
        return previous;
      }
    }
    var rootMerge = this.y19(a, b, rootIsWildcard);
    if (!(rootMerge == null)) {
      if (mergeCache == null)
        null;
      else
        mergeCache.z19(a, b, rootMerge);
      return rootMerge;
    }
    if (a.k11_1 === b.k11_1) {
      var parent = this.iw(a.j11_1, b.j11_1, rootIsWildcard, mergeCache);
      if (parent === a.j11_1) {
        return a;
      }
      if (parent === b.j11_1) {
        return b;
      }
      var a_ = Companion_instance_20.n13(parent, a.k11_1);
      if (mergeCache == null)
        null;
      else
        mergeCache.z19(a, b, a_);
      return a_;
    }
    var singleParent = null;
    if (a === b || (!(a.j11_1 == null) && equals(a.j11_1, b.j11_1))) {
      singleParent = a.j11_1;
    }
    if (!(singleParent == null)) {
      // Inline function 'kotlin.intArrayOf' call
      var payloads = new Int32Array([a.k11_1, b.k11_1]);
      if (a.k11_1 > b.k11_1) {
        payloads[0] = b.k11_1;
        payloads[1] = a.k11_1;
      }
      // Inline function 'kotlin.arrayOf' call
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var parents = [singleParent, singleParent];
      var a__0 = new ArrayPredictionContext(parents, payloads);
      if (mergeCache == null)
        null;
      else
        mergeCache.z19(a, b, a__0);
      return a__0;
    }
    // Inline function 'kotlin.intArrayOf' call
    var payloads_0 = new Int32Array([a.k11_1, b.k11_1]);
    // Inline function 'kotlin.arrayOf' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var parents_0 = [a.j11_1, b.j11_1];
    if (a.k11_1 > b.k11_1) {
      payloads_0[0] = b.k11_1;
      payloads_0[1] = a.k11_1;
      // Inline function 'kotlin.arrayOf' call
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      parents_0 = [b.j11_1, a.j11_1];
    }
    var a__1 = new ArrayPredictionContext(parents_0, payloads_0);
    if (mergeCache == null)
      null;
    else
      mergeCache.z19(a, b, a__1);
    return a__1;
  };
  protoOf(Companion_17).y19 = function (a, b, rootIsWildcard) {
    if (rootIsWildcard) {
      if (a === EmptyPredictionContext_getInstance()) {
        return EmptyPredictionContext_getInstance();
      }
      if (b === EmptyPredictionContext_getInstance()) {
        return EmptyPredictionContext_getInstance();
      }
    } else {
      if (a === EmptyPredictionContext_getInstance() && b === EmptyPredictionContext_getInstance()) {
        return EmptyPredictionContext_getInstance();
      }
      if (a === EmptyPredictionContext_getInstance()) {
        // Inline function 'kotlin.intArrayOf' call
        var payloads = new Int32Array([b.k11_1, 2147483647]);
        // Inline function 'kotlin.arrayOf' call
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        var parents = [b.j11_1, null];
        return new ArrayPredictionContext(parents, payloads);
      }
      if (b === EmptyPredictionContext_getInstance()) {
        // Inline function 'kotlin.intArrayOf' call
        var payloads_0 = new Int32Array([a.k11_1, 2147483647]);
        // Inline function 'kotlin.arrayOf' call
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        var parents_0 = [a.j11_1, null];
        return new ArrayPredictionContext(parents_0, payloads_0);
      }
    }
    return null;
  };
  protoOf(Companion_17).v19 = function (a, b, rootIsWildcard, mergeCache) {
    if (!(mergeCache == null)) {
      var previous = mergeCache.x19(a, b);
      if (!(previous == null)) {
        if (Companion_getInstance_16().u16_1) {
          System_getInstance().mf_1.lf('mergeArrays a=' + a.toString() + ',b=' + b.toString() + ' -> previous');
        }
        return previous;
      }
      previous = mergeCache.x19(b, a);
      if (!(previous == null)) {
        if (Companion_getInstance_16().u16_1) {
          System_getInstance().mf_1.lf('mergeArrays a=' + a.toString() + ',b=' + b.toString() + ' -> previous');
        }
        return previous;
      }
    }
    var i = 0;
    var j = 0;
    var k = 0;
    var mergedReturnStates = new Int32Array(a.p11_1.length + b.p11_1.length | 0);
    // Inline function 'kotlin.arrayOfNulls' call
    var size = a.p11_1.length + b.p11_1.length | 0;
    var mergedParents = fillArrayVal(Array(size), null);
    while (i < a.p11_1.length && j < b.p11_1.length) {
      var aParent = a.o11_1[i];
      var bParent = b.o11_1[j];
      if (a.p11_1[i] === b.p11_1[j]) {
        var payload = a.p11_1[i];
        var both = payload === 2147483647 && aParent == null && bParent == null;
        var ax_ax = !(aParent == null) && !(bParent == null) && equals(aParent, bParent);
        if (both || ax_ax) {
          mergedParents[k] = aParent;
          mergedReturnStates[k] = payload;
        } else {
          var mergedParent = this.iw(aParent, bParent, rootIsWildcard, mergeCache);
          mergedParents[k] = mergedParent;
          mergedReturnStates[k] = payload;
        }
        i = i + 1 | 0;
        j = j + 1 | 0;
      } else if (a.p11_1[i] < b.p11_1[j]) {
        mergedParents[k] = aParent;
        mergedReturnStates[k] = a.p11_1[i];
        i = i + 1 | 0;
      } else {
        mergedParents[k] = bParent;
        mergedReturnStates[k] = b.p11_1[j];
        j = j + 1 | 0;
      }
      k = k + 1 | 0;
    }
    if (i < a.p11_1.length) {
      var inductionVariable = i;
      var last = a.p11_1.length;
      if (inductionVariable < last)
        do {
          var p = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          mergedParents[k] = a.o11_1[p];
          mergedReturnStates[k] = a.p11_1[p];
          k = k + 1 | 0;
        }
         while (inductionVariable < last);
    } else {
      var inductionVariable_0 = j;
      var last_0 = b.p11_1.length;
      if (inductionVariable_0 < last_0)
        do {
          var p_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          mergedParents[k] = b.o11_1[p_0];
          mergedReturnStates[k] = b.p11_1[p_0];
          k = k + 1 | 0;
        }
         while (inductionVariable_0 < last_0);
    }
    if (k < mergedParents.length) {
      if (k === 1) {
        var a_ = Companion_instance_20.n13(mergedParents[0], mergedReturnStates[0]);
        if (mergeCache == null)
          null;
        else
          mergeCache.z19(a, b, a_);
        return a_;
      }
      mergedParents = copyOf(mergedParents, k);
      mergedReturnStates = copyOf_0(mergedReturnStates, k);
    }
    var M = new ArrayPredictionContext(mergedParents, mergedReturnStates);
    if (M.equals(a)) {
      if (mergeCache == null)
        null;
      else
        mergeCache.z19(a, b, a);
      if (Companion_getInstance_16().u16_1) {
        System_getInstance().mf_1.lf('mergeArrays a=' + a.toString() + ',b=' + b.toString() + ' -> a');
      }
      return a;
    }
    if (M.equals(b)) {
      if (mergeCache == null)
        null;
      else
        mergeCache.z19(a, b, b);
      if (Companion_getInstance_16().u16_1) {
        System_getInstance().mf_1.lf('mergeArrays a=' + a.toString() + ',b=' + b.toString() + ' -> b');
      }
      return b;
    }
    this.a1a(mergedParents);
    if (mergeCache == null)
      null;
    else
      mergeCache.z19(a, b, M);
    if (Companion_getInstance_16().u16_1) {
      System_getInstance().mf_1.lf('mergeArrays a=' + a.toString() + ',b=' + b.toString() + ' -> ' + M.toString());
    }
    return M;
  };
  protoOf(Companion_17).a1a = function (parents) {
    var uniqueParents = HashMap_init_$Create$();
    var inductionVariable = 0;
    var last = parents.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var p = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var parent = parents[p];
        if (!uniqueParents.r1(parent)) {
          // Inline function 'kotlin.collections.set' call
          uniqueParents.w1(parent, parent);
        }
      }
       while (inductionVariable <= last);
    var inductionVariable_0 = 0;
    var last_0 = parents.length - 1 | 0;
    if (inductionVariable_0 <= last_0)
      do {
        var p_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        parents[p_0] = uniqueParents.t1(parents[p_0]);
      }
       while (inductionVariable_0 <= last_0);
  };
  protoOf(Companion_17).f10 = function (context, contextCache, visited) {
    if (context.kp()) {
      return context;
    }
    var existing = visited.t1(context);
    if (!(existing == null)) {
      return existing;
    }
    existing = contextCache.c1a(context);
    if (!(existing == null)) {
      // Inline function 'kotlin.collections.set' call
      var value = existing;
      visited.w1(context, value);
      return existing;
    }
    var changed = false;
    // Inline function 'kotlin.arrayOfNulls' call
    var size = context.gg();
    var parents = fillArrayVal(Array(size), null);
    var inductionVariable = 0;
    var last = parents.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var parent = this.f10(ensureNotNull(context.q11(i)), contextCache, visited);
        if (changed || !(parent === context.q11(i))) {
          if (!changed) {
            // Inline function 'kotlin.arrayOfNulls' call
            var size_0 = context.gg();
            parents = fillArrayVal(Array(size_0), null);
            var inductionVariable_0 = 0;
            var last_0 = context.gg();
            if (inductionVariable_0 < last_0)
              do {
                var j = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                parents[j] = context.q11(j);
              }
               while (inductionVariable_0 < last_0);
            changed = true;
          }
          parents[i] = parent;
        }
      }
       while (inductionVariable <= last);
    if (!changed) {
      contextCache.d1a(context);
      // Inline function 'kotlin.collections.set' call
      visited.w1(context, context);
      return context;
    }
    var tmp;
    // Inline function 'kotlin.collections.isEmpty' call
    if (parents.length === 0) {
      tmp = EmptyPredictionContext_getInstance();
    } else {
      if (parents.length === 1) {
        tmp = Companion_instance_20.n13(parents[0], context.r11(0));
      } else {
        var arrayPredictionContext = context instanceof ArrayPredictionContext ? context : THROW_CCE();
        tmp = new ArrayPredictionContext(parents, arrayPredictionContext.p11_1);
      }
    }
    var updated = tmp;
    contextCache.d1a(updated);
    // Inline function 'kotlin.collections.set' call
    visited.w1(updated, updated);
    // Inline function 'kotlin.collections.set' call
    visited.w1(context, updated);
    return updated;
  };
  var Companion_instance_17;
  function Companion_getInstance_17() {
    return Companion_instance_17;
  }
  function PredictionContext(cachedHashCode) {
    this.s11_1 = cachedHashCode;
    var tmp = this;
    var tmp1 = Companion_instance_17.hw_1;
    Companion_instance_17.hw_1 = tmp1 + 1 | 0;
    tmp.t11_1 = tmp1;
  }
  protoOf(PredictionContext).kp = function () {
    return this === EmptyPredictionContext_getInstance();
  };
  protoOf(PredictionContext).u11 = function () {
    return this.r11(this.gg() - 1 | 0) === 2147483647;
  };
  protoOf(PredictionContext).v11 = function (recog) {
    return toString_0(this);
  };
  protoOf(PredictionContext).hashCode = function () {
    return this.s11_1;
  };
  function PredictionContextCache() {
    this.b1a_1 = HashMap_init_$Create$();
  }
  protoOf(PredictionContextCache).d1a = function (ctx) {
    if (ctx === EmptyPredictionContext_getInstance()) {
      return EmptyPredictionContext_getInstance();
    }
    var existing = this.b1a_1.t1(ctx);
    if (!(existing == null)) {
      return existing;
    }
    // Inline function 'kotlin.collections.set' call
    this.b1a_1.w1(ctx, ctx);
    return ctx;
  };
  protoOf(PredictionContextCache).c1a = function (ctx) {
    return this.b1a_1.t1(ctx);
  };
  var PredictionMode_SLL_instance;
  var PredictionMode_LL_instance;
  var PredictionMode_LL_EXACT_AMBIG_DETECTION_instance;
  function AltAndContextMap() {
    FlexibleHashMap.call(this, AltAndContextConfigEqualityComparator_getInstance());
  }
  function AltAndContextConfigEqualityComparator() {
    AltAndContextConfigEqualityComparator_instance = this;
    AbstractEqualityComparator.call(this);
  }
  protoOf(AltAndContextConfigEqualityComparator).nv = function (obj) {
    var hashCode = MurmurHash_instance.iu(7);
    hashCode = MurmurHash_instance.ju(hashCode, obj.yt_1.tk_1);
    hashCode = MurmurHash_instance.ku(hashCode, obj.au_1);
    hashCode = MurmurHash_instance.lu(hashCode, 2);
    return hashCode;
  };
  protoOf(AltAndContextConfigEqualityComparator).ov = function (obj) {
    return this.nv(obj instanceof ATNConfig ? obj : THROW_CCE());
  };
  protoOf(AltAndContextConfigEqualityComparator).pv = function (a, b) {
    if (a === b) {
      return true;
    }
    if (a == null || b == null) {
      return false;
    }
    return a.yt_1.tk_1 === b.yt_1.tk_1 && equals(a.au_1, b.au_1);
  };
  protoOf(AltAndContextConfigEqualityComparator).qv = function (a, b) {
    var tmp = (a == null ? true : a instanceof ATNConfig) ? a : THROW_CCE();
    return this.pv(tmp, (b == null ? true : b instanceof ATNConfig) ? b : THROW_CCE());
  };
  var AltAndContextConfigEqualityComparator_instance;
  function AltAndContextConfigEqualityComparator_getInstance() {
    PredictionMode_initEntries();
    if (AltAndContextConfigEqualityComparator_instance == null)
      new AltAndContextConfigEqualityComparator();
    return AltAndContextConfigEqualityComparator_instance;
  }
  function Companion_18() {
  }
  protoOf(Companion_18).v17 = function (mode, configs) {
    var tempConfig = configs;
    if (this.i18(tempConfig)) {
      return true;
    }
    if (mode.equals(PredictionMode_SLL_getInstance())) {
      if (tempConfig.wv_1) {
        var dup = new ATNConfigSet();
        var tmp0_iterator = tempConfig.f();
        while (tmp0_iterator.g()) {
          var c = tmp0_iterator.h();
          var tempC = c;
          tempC = ATNConfig_init_$Create$_1(tempC, Empty_getInstance());
          dup.dw(tempC);
        }
        tempConfig = dup;
      }
    }
    var altSets = this.s17(tempConfig);
    return this.m1a(altSets) && !this.n1a(tempConfig);
  };
  protoOf(Companion_18).h18 = function (configs) {
    var tmp0_iterator = configs.f();
    while (tmp0_iterator.g()) {
      var c = tmp0_iterator.h();
      var tmp = c.yt_1;
      if (tmp instanceof RuleStopState) {
        return true;
      }
    }
    return false;
  };
  protoOf(Companion_18).i18 = function (configs) {
    var tmp0_iterator = configs.f();
    while (tmp0_iterator.g()) {
      var config = tmp0_iterator.h();
      var tmp = config.yt_1;
      if (!(tmp instanceof RuleStopState)) {
        return false;
      }
    }
    return true;
  };
  protoOf(Companion_18).b18 = function (altSets) {
    return this.c18(altSets);
  };
  protoOf(Companion_18).t17 = function (altSets) {
    return !this.o1a(altSets);
  };
  protoOf(Companion_18).o1a = function (altSets) {
    var tmp0_iterator = altSets.f();
    while (tmp0_iterator.g()) {
      var alts = tmp0_iterator.h();
      if (alts.m17() === 1) {
        return true;
      }
    }
    return false;
  };
  protoOf(Companion_18).m1a = function (altSets) {
    var tmp0_iterator = altSets.f();
    while (tmp0_iterator.g()) {
      var alts = tmp0_iterator.h();
      if (alts.m17() > 1) {
        return true;
      }
    }
    return false;
  };
  protoOf(Companion_18).d18 = function (altSets) {
    var it = altSets.f();
    var first = it.h();
    while (it.g()) {
      var next = it.h();
      if (!next.equals(first)) {
        return false;
      }
    }
    return true;
  };
  protoOf(Companion_18).a18 = function (altSets) {
    var all = this.h19(altSets);
    if (all.m17() === 1) {
      return all.l17(0);
    }
    return 0;
  };
  protoOf(Companion_18).h19 = function (altSets) {
    var all = BitSet_init_$Create$();
    var tmp0_iterator = altSets.f();
    while (tmp0_iterator.g()) {
      var alts = tmp0_iterator.h();
      all.p1a(alts);
    }
    return all;
  };
  protoOf(Companion_18).s17 = function (configs) {
    var configToAlts = new AltAndContextMap();
    var tmp0_iterator = configs.f();
    while (tmp0_iterator.g()) {
      var c = tmp0_iterator.h();
      var alts = configToAlts.t1(c);
      if (alts == null) {
        alts = BitSet_init_$Create$();
        // Inline function 'kotlin.collections.set' call
        var value = alts;
        configToAlts.w1(c, value);
      }
      alts.cw(c.zt_1);
    }
    return configToAlts.v1();
  };
  protoOf(Companion_18).q1a = function (configs) {
    var m = HashMap_init_$Create$();
    var tmp0_iterator = configs.f();
    while (tmp0_iterator.g()) {
      var c = tmp0_iterator.h();
      var alts = m.t1(c.yt_1);
      if (alts == null) {
        alts = BitSet_init_$Create$();
        var tmp1 = c.yt_1;
        // Inline function 'kotlin.collections.set' call
        var value = alts;
        m.w1(tmp1, value);
      }
      alts.cw(c.zt_1);
    }
    return m;
  };
  protoOf(Companion_18).n1a = function (configs) {
    var x = this.q1a(configs);
    var tmp0_iterator = x.v1().f();
    while (tmp0_iterator.g()) {
      var alts = tmp0_iterator.h();
      if (alts.m17() === 1) {
        return true;
      }
    }
    return false;
  };
  protoOf(Companion_18).c18 = function (altSets) {
    var viableAlts = BitSet_init_$Create$();
    var tmp0_iterator = altSets.f();
    while (tmp0_iterator.g()) {
      var alts = tmp0_iterator.h();
      var minAlt = alts.l17(0);
      viableAlts.cw(minAlt);
      if (viableAlts.m17() > 1) {
        return 0;
      }
    }
    return viableAlts.l17(0);
  };
  var Companion_instance_18;
  function Companion_getInstance_18() {
    return Companion_instance_18;
  }
  var PredictionMode_entriesInitialized;
  function PredictionMode_initEntries() {
    if (PredictionMode_entriesInitialized)
      return Unit_instance;
    PredictionMode_entriesInitialized = true;
    PredictionMode_SLL_instance = new PredictionMode('SLL', 0);
    PredictionMode_LL_instance = new PredictionMode('LL', 1);
    PredictionMode_LL_EXACT_AMBIG_DETECTION_instance = new PredictionMode('LL_EXACT_AMBIG_DETECTION', 2);
  }
  function PredictionMode(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function PredictionMode_SLL_getInstance() {
    PredictionMode_initEntries();
    return PredictionMode_SLL_instance;
  }
  function PredictionMode_LL_getInstance() {
    PredictionMode_initEntries();
    return PredictionMode_LL_instance;
  }
  function PredictionMode_LL_EXACT_AMBIG_DETECTION_getInstance() {
    PredictionMode_initEntries();
    return PredictionMode_LL_EXACT_AMBIG_DETECTION_instance;
  }
  function RangeTransition(target, from, to) {
    Transition.call(this, target);
    this.t1a_1 = from;
    this.u1a_1 = to;
    this.v1a_1 = 2;
  }
  protoOf(RangeTransition).y10 = function () {
    return this.v1a_1;
  };
  protoOf(RangeTransition).a12 = function () {
    return Companion_getInstance_26().dh(this.t1a_1, this.u1a_1);
  };
  protoOf(RangeTransition).getLabel = function () {
    return this.a12();
  };
  protoOf(RangeTransition).z10 = function (symbol, minVocabSymbol, maxVocabSymbol) {
    var containsLower = this.t1a_1;
    return symbol <= this.u1a_1 ? containsLower <= symbol : false;
  };
  protoOf(RangeTransition).toString = function () {
    var buf = new StringBuilder("'");
    appendCodePoint(buf, this.t1a_1);
    buf.p7("'..'");
    appendCodePoint(buf, this.u1a_1);
    buf.p7("'");
    return buf.toString();
  };
  function RuleStartState() {
    ATNState.call(this);
    this.by_1 = null;
    this.cy_1 = false;
    this.dy_1 = 2;
  }
  protoOf(RuleStartState).zk = function () {
    return this.dy_1;
  };
  function RuleStopState() {
    ATNState.call(this);
    this.d1b_1 = 7;
  }
  protoOf(RuleStopState).zk = function () {
    return this.d1b_1;
  };
  function RuleTransition(ruleStart, ruleIndex, precedence, followState) {
    Transition.call(this, ruleStart);
    this.mm_1 = ruleIndex;
    this.nm_1 = precedence;
    this.om_1 = followState;
    this.pm_1 = 3;
    this.qm_1 = true;
  }
  protoOf(RuleTransition).y10 = function () {
    return this.pm_1;
  };
  protoOf(RuleTransition).x10 = function () {
    return this.qm_1;
  };
  protoOf(RuleTransition).z10 = function (symbol, minVocabSymbol, maxVocabSymbol) {
    return false;
  };
  function filterPrecedencePredicates($this, collection) {
    var result = ArrayList_init_$Create$_0();
    var iterator = collection.f();
    while (iterator.g()) {
      var context = iterator.h();
      if (context instanceof PrecedencePredicate) {
        result.j(context);
        iterator.n3();
      }
    }
    return result;
  }
  function Predicate_init_$Init$($this) {
    SemanticContext.call($this);
    Predicate.call($this);
    $this.e1b_1 = -1;
    $this.f1b_1 = -1;
    $this.g1b_1 = false;
    return $this;
  }
  function Predicate_init_$Create$() {
    return Predicate_init_$Init$(objectCreate(protoOf(Predicate)));
  }
  function Predicate_init_$Init$_0(ruleIndex, predIndex, isCtxDependent, $this) {
    SemanticContext.call($this);
    Predicate.call($this);
    $this.e1b_1 = ruleIndex;
    $this.f1b_1 = predIndex;
    $this.g1b_1 = isCtxDependent;
    return $this;
  }
  function Predicate_init_$Create$_0(ruleIndex, predIndex, isCtxDependent) {
    return Predicate_init_$Init$_0(ruleIndex, predIndex, isCtxDependent, objectCreate(protoOf(Predicate)));
  }
  function Companion_19() {
  }
  protoOf(Companion_19).g19 = function (a, b) {
    if (a == null || a === Empty_getInstance()) {
      return b;
    }
    if (b == null || b === Empty_getInstance()) {
      return a;
    }
    var result = new AND(a, b);
    var tmp;
    if (result.h1b_1.length === 1) {
      tmp = result.h1b_1[0];
    } else {
      tmp = result;
    }
    return tmp;
  };
  protoOf(Companion_19).k18 = function (a, b) {
    if (a == null) {
      return b;
    }
    if (b == null) {
      return a;
    }
    if (a === Empty_getInstance() || b === Empty_getInstance()) {
      return Empty_getInstance();
    }
    var result = new OR(a, b);
    var tmp;
    if (result.i1b_1.length === 1) {
      tmp = result.i1b_1[0];
    } else {
      tmp = result;
    }
    return tmp;
  };
  var Companion_instance_19;
  function Companion_getInstance_19() {
    return Companion_instance_19;
  }
  function Empty() {
    Empty_instance = this;
    SemanticContext.call(this);
  }
  protoOf(Empty).q18 = function (parser, parserCallStack) {
    return false;
  };
  var Empty_instance;
  function Empty_getInstance() {
    if (Empty_instance == null)
      new Empty();
    return Empty_instance;
  }
  protoOf(Predicate).q18 = function (parser, parserCallStack) {
    var tmp;
    if (this.g1b_1) {
      tmp = parserCallStack;
    } else {
      tmp = null;
    }
    var localctx = tmp;
    return parser.tp(localctx, this.e1b_1, this.f1b_1);
  };
  protoOf(Predicate).hashCode = function () {
    var hashCode = MurmurHash_instance.h15();
    hashCode = MurmurHash_instance.ju(hashCode, this.e1b_1);
    hashCode = MurmurHash_instance.ju(hashCode, this.f1b_1);
    hashCode = MurmurHash_instance.ju(hashCode, this.g1b_1 ? 1 : 0);
    hashCode = MurmurHash_instance.lu(hashCode, 3);
    return hashCode;
  };
  protoOf(Predicate).equals = function (other) {
    if (!(other instanceof Predicate)) {
      return false;
    }
    if (this === other) {
      return true;
    }
    return this.e1b_1 === other.e1b_1 && this.f1b_1 === other.f1b_1 && this.g1b_1 === other.g1b_1;
  };
  protoOf(Predicate).toString = function () {
    return '{' + this.e1b_1 + ':' + this.f1b_1 + '}?';
  };
  function Predicate() {
  }
  function PrecedencePredicate(precedence) {
    precedence = precedence === VOID ? 0 : precedence;
    SemanticContext.call(this);
    this.j1b_1 = precedence;
  }
  protoOf(PrecedencePredicate).q18 = function (parser, parserCallStack) {
    return parser.up(parserCallStack, this.j1b_1);
  };
  protoOf(PrecedencePredicate).j18 = function (parser, parserCallStack) {
    var tmp;
    if (parser.up(parserCallStack, this.j1b_1)) {
      tmp = Empty_getInstance();
    } else {
      tmp = null;
    }
    return tmp;
  };
  protoOf(PrecedencePredicate).k1b = function (other) {
    return this.j1b_1 - other.j1b_1 | 0;
  };
  protoOf(PrecedencePredicate).d = function (other) {
    return this.k1b(other instanceof PrecedencePredicate ? other : THROW_CCE());
  };
  protoOf(PrecedencePredicate).hashCode = function () {
    var hashCode = 1;
    hashCode = imul(31, hashCode) + this.j1b_1 | 0;
    return hashCode;
  };
  protoOf(PrecedencePredicate).equals = function (other) {
    if (!(other instanceof PrecedencePredicate)) {
      return false;
    }
    if (this === other) {
      return true;
    }
    return this.j1b_1 === other.j1b_1;
  };
  protoOf(PrecedencePredicate).toString = function () {
    return '{' + this.j1b_1 + '>=prec}?';
  };
  function Operator() {
    SemanticContext.call(this);
  }
  function AND(a, b) {
    Operator.call(this);
    var operands = LinkedHashSet_init_$Create$();
    if (a instanceof AND) {
      operands.i3(asList(a.h1b_1));
    } else {
      operands.j(a);
    }
    if (b instanceof AND) {
      operands.i3(asList(b.h1b_1));
    } else {
      operands.j(b);
    }
    var precedencePredicates = filterPrecedencePredicates(Companion_instance_19, operands);
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!precedencePredicates.r()) {
      var reduced = Collections_instance.jf(precedencePredicates);
      operands.j(reduced);
    }
    var tmp = this;
    // Inline function 'kotlin.collections.toTypedArray' call
    tmp.h1b_1 = copyToArray(operands);
  }
  protoOf(AND).equals = function (other) {
    if (this === other) {
      return true;
    }
    if (!(other instanceof AND)) {
      return false;
    }
    return contentEquals_0(this.h1b_1, other.h1b_1);
  };
  protoOf(AND).hashCode = function () {
    var fqn = 'org.antlr.v4.kotlinruntime.atn.SemanticContext.AND';
    var seed = imul(31, getStringHashCode(fqn)) + getKClass(AND).hashCode() | 0;
    return MurmurHash_instance.l1b(this.h1b_1, seed);
  };
  protoOf(AND).q18 = function (parser, parserCallStack) {
    var indexedObject = this.h1b_1;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var operand = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (!operand.q18(parser, parserCallStack)) {
        return false;
      }
    }
    return true;
  };
  protoOf(AND).j18 = function (parser, parserCallStack) {
    var differs = false;
    var operands = ArrayList_init_$Create$_0();
    var indexedObject = this.h1b_1;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var context = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var evaluated = context.j18(parser, parserCallStack);
      differs = !!(differs | !(evaluated === context));
      if (evaluated == null) {
        return null;
      } else if (!(evaluated === Empty_getInstance())) {
        operands.j(evaluated);
      }
    }
    if (!differs) {
      return this;
    }
    if (operands.r()) {
      return Empty_getInstance();
    }
    var result = operands.o1(0);
    var inductionVariable_0 = 1;
    var last_0 = operands.i();
    if (inductionVariable_0 < last_0)
      do {
        var i = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        result = Companion_instance_19.g19(result, operands.o1(i));
      }
       while (inductionVariable_0 < last_0);
    return result;
  };
  protoOf(AND).toString = function () {
    return joinToString(this.h1b_1, '&&');
  };
  function OR(a, b) {
    Operator.call(this);
    var operands = LinkedHashSet_init_$Create$();
    if (a instanceof OR) {
      operands.i3(asList(a.i1b_1));
    } else {
      operands.j(a);
    }
    if (b instanceof OR) {
      operands.i3(asList(b.i1b_1));
    } else {
      operands.j(b);
    }
    var precedencePredicates = filterPrecedencePredicates(Companion_instance_19, operands);
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!precedencePredicates.r()) {
      var reduced = Collections_instance.kf(precedencePredicates);
      operands.j(reduced);
    }
    var tmp = this;
    // Inline function 'kotlin.collections.toTypedArray' call
    tmp.i1b_1 = copyToArray(operands);
  }
  protoOf(OR).equals = function (other) {
    if (this === other) {
      return true;
    }
    if (!(other instanceof OR)) {
      return false;
    }
    return contentEquals_0(this.i1b_1, other.i1b_1);
  };
  protoOf(OR).hashCode = function () {
    var fqn = 'org.antlr.v4.kotlinruntime.atn.SemanticContext.OR';
    var seed = imul(31, getStringHashCode(fqn)) + getKClass(OR).hashCode() | 0;
    return MurmurHash_instance.l1b(this.i1b_1, seed);
  };
  protoOf(OR).q18 = function (parser, parserCallStack) {
    var indexedObject = this.i1b_1;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var operand = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (operand.q18(parser, parserCallStack)) {
        return true;
      }
    }
    return false;
  };
  protoOf(OR).j18 = function (parser, parserCallStack) {
    var differs = false;
    var operands = ArrayList_init_$Create$_0();
    var indexedObject = this.i1b_1;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var context = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var evaluated = context.j18(parser, parserCallStack);
      differs = !!(differs | !(evaluated === context));
      if (evaluated === Empty_getInstance()) {
        return Empty_getInstance();
      } else if (!(evaluated == null)) {
        operands.j(evaluated);
      }
    }
    if (!differs) {
      return this;
    }
    if (operands.r()) {
      return null;
    }
    var result = operands.o1(0);
    var inductionVariable_0 = 1;
    var last_0 = operands.i();
    if (inductionVariable_0 < last_0)
      do {
        var i = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        result = Companion_instance_19.k18(result, operands.o1(i));
      }
       while (inductionVariable_0 < last_0);
    return result;
  };
  protoOf(OR).toString = function () {
    return joinToString(this.i1b_1, '||');
  };
  function SemanticContext() {
  }
  protoOf(SemanticContext).j18 = function (parser, parserCallStack) {
    return this;
  };
  function SetTransition(target, set) {
    Transition.call(this, target);
    var tmp = this;
    tmp.r16_1 = set == null ? Companion_getInstance_26().d12(0) : set;
    this.s16_1 = 7;
  }
  protoOf(SetTransition).y10 = function () {
    return this.s16_1;
  };
  protoOf(SetTransition).a12 = function () {
    return this.r16_1;
  };
  protoOf(SetTransition).getLabel = function () {
    return this.a12();
  };
  protoOf(SetTransition).z10 = function (symbol, minVocabSymbol, maxVocabSymbol) {
    return this.r16_1.oc(symbol);
  };
  protoOf(SetTransition).toString = function () {
    return this.r16_1.toString();
  };
  function Companion_20() {
  }
  protoOf(Companion_20).n13 = function (parent, returnState) {
    var tmp;
    if (returnState === 2147483647 && parent == null) {
      tmp = EmptyPredictionContext_getInstance();
    } else {
      tmp = new SingletonPredictionContext(parent, returnState);
    }
    return tmp;
  };
  var Companion_instance_20;
  function Companion_getInstance_20() {
    return Companion_instance_20;
  }
  function SingletonPredictionContext(parent, returnState) {
    PredictionContext.call(this, !(parent == null) ? Companion_instance_17.t19(parent, returnState) : Companion_instance_17.s19());
    this.j11_1 = parent;
    this.k11_1 = returnState;
    // Inline function 'com.strumenta.antlrkotlin.runtime.assert' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!(this.k11_1 === -1)) {
      throw AssertionError_init_$Create$(null);
    }
  }
  protoOf(SingletonPredictionContext).gg = function () {
    return 1;
  };
  protoOf(SingletonPredictionContext).q11 = function (index) {
    // Inline function 'com.strumenta.antlrkotlin.runtime.assert' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(index === 0)) {
      throw AssertionError_init_$Create$(null);
    }
    return this.j11_1;
  };
  protoOf(SingletonPredictionContext).r11 = function (index) {
    // Inline function 'com.strumenta.antlrkotlin.runtime.assert' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(index === 0)) {
      throw AssertionError_init_$Create$(null);
    }
    return this.k11_1;
  };
  protoOf(SingletonPredictionContext).equals = function (other) {
    if (this === other) {
      return true;
    }
    if (!(other instanceof SingletonPredictionContext)) {
      return false;
    }
    if (!(this.hashCode() === hashCode(other))) {
      return false;
    }
    return this.k11_1 === other.k11_1 && (!(this.j11_1 == null) && equals(this.j11_1, other.j11_1));
  };
  protoOf(SingletonPredictionContext).toString = function () {
    var tmp0_safe_receiver = this.j11_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : toString_0(tmp0_safe_receiver);
    var up = tmp1_elvis_lhs == null ? '' : tmp1_elvis_lhs;
    var tmp;
    // Inline function 'kotlin.text.isEmpty' call
    if (charSequenceLength(up) === 0) {
      var tmp_0;
      if (this.k11_1 === 2147483647) {
        tmp_0 = '$';
      } else {
        tmp_0 = this.k11_1.toString();
      }
      tmp = tmp_0;
    } else {
      tmp = '' + this.k11_1 + ' ' + up;
    }
    return tmp;
  };
  function StarBlockStartState() {
    BlockStartState.call(this);
    this.w1b_1 = 5;
  }
  protoOf(StarBlockStartState).zk = function () {
    return this.w1b_1;
  };
  function StarLoopEntryState() {
    DecisionState.call(this);
    this.zy_1 = null;
    this.az_1 = false;
    this.bz_1 = 10;
  }
  protoOf(StarLoopEntryState).zk = function () {
    return this.bz_1;
  };
  function StarLoopbackState() {
    ATNState.call(this);
    this.e1c_1 = 9;
  }
  protoOf(StarLoopbackState).zk = function () {
    return this.e1c_1;
  };
  function TokensStartState() {
    DecisionState.call(this);
    this.o1c_1 = 6;
  }
  protoOf(TokensStartState).zk = function () {
    return this.o1c_1;
  };
  function Companion_21() {
    Companion_instance_21 = this;
    this.p1c_1 = 1;
    this.q1c_1 = 2;
    this.r1c_1 = 3;
    this.s1c_1 = 4;
    this.t1c_1 = 5;
    this.u1c_1 = 6;
    this.v1c_1 = 7;
    this.w1c_1 = 8;
    this.x1c_1 = 9;
    this.y1c_1 = 10;
    var tmp = this;
    // Inline function 'kotlin.arrayOf' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    tmp.z1c_1 = ['INVALID', 'EPSILON', 'RANGE', 'RULE', 'PREDICATE', 'ATOM', 'ACTION', 'SET', 'NOT_SET', 'WILDCARD', 'PRECEDENCE'];
  }
  var Companion_instance_21;
  function Companion_getInstance_21() {
    if (Companion_instance_21 == null)
      new Companion_21();
    return Companion_instance_21;
  }
  function Transition(target) {
    Companion_getInstance_21();
    this.bm_1 = target;
    this.cm_1 = false;
  }
  protoOf(Transition).x10 = function () {
    return this.cm_1;
  };
  protoOf(Transition).getLabel = function () {
    return null;
  };
  function WildcardTransition(target) {
    Transition.call(this, target);
    this.c1d_1 = 9;
  }
  protoOf(WildcardTransition).y10 = function () {
    return this.c1d_1;
  };
  protoOf(WildcardTransition).z10 = function (symbol, minVocabSymbol, maxVocabSymbol) {
    return minVocabSymbol <= symbol ? symbol <= maxVocabSymbol : false;
  };
  protoOf(WildcardTransition).toString = function () {
    return '.';
  };
  function sam$kotlin_Comparator$0(function_0) {
    this.d1d_1 = function_0;
  }
  protoOf(sam$kotlin_Comparator$0).ta = function (a, b) {
    return this.d1d_1(a, b);
  };
  protoOf(sam$kotlin_Comparator$0).compare = function (a, b) {
    return this.ta(a, b);
  };
  protoOf(sam$kotlin_Comparator$0).r2 = function () {
    return this.d1d_1;
  };
  protoOf(sam$kotlin_Comparator$0).equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, Comparator) : false) {
      var tmp_0;
      if (!(other == null) ? isInterface(other, FunctionAdapter) : false) {
        tmp_0 = equals(this.r2(), other.r2());
      } else {
        tmp_0 = false;
      }
      tmp = tmp_0;
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(sam$kotlin_Comparator$0).hashCode = function () {
    return hashCode(this.r2());
  };
  function DFA$getStates$lambda(a, b) {
    // Inline function 'kotlin.comparisons.compareValuesBy' call
    // Inline function 'org.antlr.v4.kotlinruntime.dfa.DFA.getStates.stub_for_inlining' call
    var tmp = a.wz_1;
    // Inline function 'org.antlr.v4.kotlinruntime.dfa.DFA.getStates.stub_for_inlining' call
    var tmp$ret$1 = b.wz_1;
    return compareValues(tmp, tmp$ret$1);
  }
  function DFA(atnStartState, decision) {
    decision = decision === VOID ? 0 : decision;
    this.f14_1 = atnStartState;
    this.g14_1 = decision;
    this.h14_1 = HashMap_init_$Create$();
    this.i14_1 = null;
    var isPrecedenceDfa = false;
    var tmp = this.f14_1;
    if (tmp instanceof StarLoopEntryState) {
      if (this.f14_1.az_1) {
        isPrecedenceDfa = true;
        var precedenceState = DFAState_init_$Create$_0(new ATNConfigSet());
        var tmp_0 = precedenceState;
        // Inline function 'kotlin.arrayOfNulls' call
        tmp_0.yz_1 = fillArrayVal(Array(0), null);
        precedenceState.zz_1 = false;
        precedenceState.c10_1 = false;
        this.i14_1 = precedenceState;
      }
    }
    this.j14_1 = isPrecedenceDfa;
  }
  protoOf(DFA).b17 = function (precedence) {
    if (!this.j14_1) {
      throw IllegalStateException_init_$Create$('Only precedence DFAs may contain a precedence start state.');
    }
    var edges = ensureNotNull(ensureNotNull(this.i14_1).yz_1);
    var tmp;
    if (precedence < 0 || precedence >= edges.length) {
      tmp = null;
    } else {
      tmp = edges[precedence];
    }
    return tmp;
  };
  protoOf(DFA).f17 = function (precedence, startState) {
    if (!this.j14_1) {
      throw IllegalStateException_init_$Create$('Only precedence DFAs may contain a precedence start state.');
    }
    if (precedence < 0) {
      return Unit_instance;
    }
    var s0 = ensureNotNull(this.i14_1);
    // Inline function 'com.strumenta.antlrkotlin.runtime.synchronized' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'org.antlr.v4.kotlinruntime.dfa.DFA.setPrecedenceStartState.<anonymous>' call
    if (precedence >= ensureNotNull(s0.yz_1).length) {
      s0.yz_1 = copyOf(ensureNotNull(s0.yz_1), precedence + 1 | 0);
    }
    ensureNotNull(s0.yz_1)[precedence] = startState;
  };
  protoOf(DFA).e1d = function () {
    var result = ArrayList_init_$Create$_1(this.h14_1.u1());
    // Inline function 'kotlin.collections.sortBy' call
    if (result.i() > 1) {
      // Inline function 'kotlin.comparisons.compareBy' call
      var tmp = DFA$getStates$lambda;
      var tmp$ret$0 = new sam$kotlin_Comparator$0(tmp);
      sortWith(result, tmp$ret$0);
    }
    return result;
  };
  protoOf(DFA).toString = function () {
    return this.nl(Companion_getInstance_6().ps_1);
  };
  protoOf(DFA).nl = function (vocabulary) {
    if (this.i14_1 == null) {
      return '';
    }
    var serializer = new DFASerializer(this, vocabulary);
    return serializer.toString();
  };
  protoOf(DFA).o14 = function () {
    if (this.i14_1 == null) {
      return '';
    }
    var serializer = new LexerDFASerializer(this);
    return serializer.toString();
  };
  function DFASerializer(dfa, vocabulary) {
    this.f1d_1 = dfa;
    this.g1d_1 = vocabulary;
  }
  protoOf(DFASerializer).toString = function () {
    if (this.f1d_1.i14_1 == null) {
      return 'null';
    }
    var buf = StringBuilder_init_$Create$();
    var states = this.f1d_1.e1d();
    var tmp0_iterator = states.f();
    while (tmp0_iterator.g()) {
      var s = tmp0_iterator.h();
      var n = 0;
      var edges = s.yz_1;
      if (!(edges == null)) {
        n = edges.length;
      }
      var inductionVariable = 0;
      var last = n;
      if (inductionVariable < last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var t = ensureNotNull(edges)[i];
          if (!(t == null) && !(t.wz_1 === 2147483647)) {
            buf.p7(this.h1d(s));
            buf.p7('-');
            buf.p7(this.i1d(i));
            buf.p7('->');
            buf.p7(this.h1d(t));
            buf.p7('\n');
          }
        }
         while (inductionVariable < last);
    }
    var output = buf.toString();
    // Inline function 'kotlin.text.ifEmpty' call
    var tmp;
    // Inline function 'kotlin.text.isEmpty' call
    if (charSequenceLength(output) === 0) {
      // Inline function 'org.antlr.v4.kotlinruntime.dfa.DFASerializer.toString.<anonymous>' call
      tmp = 'null';
    } else {
      tmp = output;
    }
    return tmp;
  };
  protoOf(DFASerializer).i1d = function (i) {
    return this.g1d_1.ei(i - 1 | 0);
  };
  protoOf(DFASerializer).h1d = function (s) {
    var n = s.wz_1;
    var baseStateStr = (s.zz_1 ? ':' : '') + 's' + n + (s.c10_1 ? '^' : '');
    var tmp;
    if (s.zz_1) {
      var predicates = s.d10_1;
      var tmp_0;
      if (!(predicates == null)) {
        tmp_0 = baseStateStr + '=>' + joinToString(predicates);
      } else {
        tmp_0 = baseStateStr + '=>' + s.a10_1;
      }
      tmp = tmp_0;
    } else {
      tmp = baseStateStr;
    }
    return tmp;
  };
  function PredPrediction(pred, alt) {
    this.o18_1 = pred;
    this.p18_1 = alt;
  }
  protoOf(PredPrediction).toString = function () {
    return '(' + toString_0(this.o18_1) + ', ' + this.p18_1 + ')';
  };
  function DFAState_init_$Init$($this) {
    DFAState.call($this);
    return $this;
  }
  function DFAState_init_$Create$() {
    return DFAState_init_$Init$(objectCreate(protoOf(DFAState)));
  }
  function DFAState_init_$Init$_0(configs, $this) {
    DFAState.call($this);
    $this.xz_1 = configs;
    return $this;
  }
  function DFAState_init_$Create$_0(configs) {
    return DFAState_init_$Init$_0(configs, objectCreate(protoOf(DFAState)));
  }
  protoOf(DFAState).hashCode = function () {
    var hash = MurmurHash_instance.iu(7);
    hash = MurmurHash_instance.ju(hash, this.xz_1.hashCode());
    hash = MurmurHash_instance.lu(hash, 1);
    return hash;
  };
  protoOf(DFAState).equals = function (other) {
    if (this === other) {
      return true;
    }
    if (!(other instanceof DFAState)) {
      return false;
    }
    return this.xz_1.equals(other.xz_1);
  };
  protoOf(DFAState).toString = function () {
    var buf = StringBuilder_init_$Create$();
    buf.la(this.wz_1);
    buf.p7(':');
    buf.o7(this.xz_1);
    if (this.zz_1) {
      buf.p7('=>');
      var predicates = this.d10_1;
      if (!(predicates == null)) {
        buf.p7(joinToString(predicates));
      } else {
        buf.la(this.a10_1);
      }
    }
    return buf.toString();
  };
  function DFAState() {
    this.wz_1 = -1;
    this.xz_1 = new ATNConfigSet();
    this.yz_1 = null;
    this.zz_1 = false;
    this.a10_1 = 0;
    this.b10_1 = null;
    this.c10_1 = false;
    this.d10_1 = null;
  }
  function LexerDFASerializer(dfa) {
    DFASerializer.call(this, dfa, Companion_getInstance_6().ps_1);
  }
  protoOf(LexerDFASerializer).i1d = function (i) {
    var buf = StringBuilder_init_$Create$();
    buf.p7("'");
    appendCodePoint(buf, i);
    buf.p7("'");
    return buf.toString();
  };
  function AbstractEqualityComparator() {
  }
  function Companion_22() {
    this.l1d_1 = 16;
    this.m1d_1 = 8;
    this.n1d_1 = 0.75;
  }
  var Companion_instance_22;
  function Companion_getInstance_22() {
    return Companion_instance_22;
  }
  function SetIterator($outer, data) {
    this.r1d_1 = $outer;
    this.o1d_1 = data;
    this.p1d_1 = 0;
    this.q1d_1 = true;
  }
  protoOf(SetIterator).g = function () {
    return this.p1d_1 < this.o1d_1.length;
  };
  protoOf(SetIterator).h = function () {
    if (!this.g()) {
      throw NoSuchElementException_init_$Create$();
    }
    this.q1d_1 = false;
    var tmp1 = this.p1d_1;
    this.p1d_1 = tmp1 + 1 | 0;
    return this.o1d_1[tmp1];
  };
  protoOf(SetIterator).n3 = function () {
    if (this.q1d_1) {
      throw IllegalStateException_init_$Create$_0();
    }
    this.r1d_1.lv(this.o1d_1[this.p1d_1 - 1 | 0]);
    this.q1d_1 = true;
  };
  function Array2DHashSet(comparator, initialCapacity, initialBucketCapacity) {
    comparator = comparator === VOID ? Companion_getInstance_27().w13_1 : comparator;
    initialCapacity = initialCapacity === VOID ? 16 : initialCapacity;
    initialBucketCapacity = initialBucketCapacity === VOID ? 8 : initialBucketCapacity;
    this.xu_1 = comparator;
    this.yu_1 = initialCapacity;
    this.zu_1 = initialBucketCapacity;
    this.bv_1 = 0;
    this.cv_1 = 1;
    this.dv_1 = 0;
    this.av_1 = this.vu(this.yu_1);
    var tmp = this;
    // Inline function 'kotlin.math.floor' call
    var x = this.yu_1 * 0.75;
    var tmp$ret$0 = Math.floor(x);
    tmp.dv_1 = numberToInt(tmp$ret$0);
  }
  protoOf(Array2DHashSet).ev = function (o) {
    if (this.bv_1 > this.dv_1) {
      this.iv();
    }
    return this.fv(o);
  };
  protoOf(Array2DHashSet).fv = function (o) {
    var b = this.hv(o);
    var bucket = this.av_1[b];
    if (bucket == null) {
      bucket = this.wu(this.zu_1);
      bucket[0] = o;
      this.av_1[b] = bucket;
      this.bv_1 = this.bv_1 + 1 | 0;
      return o;
    }
    var inductionVariable = 0;
    var last = bucket.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var existing = bucket[i];
        if (existing == null) {
          bucket[i] = o;
          this.bv_1 = this.bv_1 + 1 | 0;
          return o;
        }
        if (this.xu_1.qv(existing, o)) {
          return existing;
        }
      }
       while (inductionVariable <= last);
    var oldLength = bucket.length;
    bucket = copyOf(bucket, imul(bucket.length, 2));
    this.av_1[b] = bucket;
    bucket[oldLength] = o;
    this.bv_1 = this.bv_1 + 1 | 0;
    return o;
  };
  protoOf(Array2DHashSet).gv = function (o) {
    if (o == null) {
      return o;
    }
    var b = this.hv(o);
    var tmp0_elvis_lhs = this.av_1[b];
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var bucket = tmp;
    var inductionVariable = 0;
    var last = bucket.length;
    while (inductionVariable < last) {
      var e = bucket[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (e == null) {
        return null;
      }
      if (this.xu_1.qv(e, o)) {
        return e;
      }
    }
    return null;
  };
  protoOf(Array2DHashSet).hv = function (o) {
    var hash = this.xu_1.ov(o);
    return hash & (this.av_1.length - 1 | 0);
  };
  protoOf(Array2DHashSet).hashCode = function () {
    var hash = MurmurHash_instance.h15();
    var indexedObject = this.av_1;
    var inductionVariable = 0;
    var last = indexedObject.length;
    $l$loop: while (inductionVariable < last) {
      var bucket = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (bucket == null) {
        continue $l$loop;
      }
      var tmp1_iterator = arrayIterator(bucket);
      $l$loop_0: while (tmp1_iterator.g()) {
        var o = tmp1_iterator.h();
        if (o == null) {
          break $l$loop_0;
        }
        hash = MurmurHash_instance.ju(hash, this.xu_1.ov(o));
      }
    }
    hash = MurmurHash_instance.lu(hash, this.i());
    return hash;
  };
  protoOf(Array2DHashSet).equals = function (other) {
    if (other === this) {
      return true;
    }
    if (!(other instanceof Array2DHashSet)) {
      return false;
    }
    var tmp;
    if (other.i() === this.i()) {
      // Inline function 'kotlin.collections.containsAll' call
      tmp = this.n1(other);
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(Array2DHashSet).iv = function () {
    var old = this.av_1;
    this.cv_1 = this.cv_1 + 4 | 0;
    var newCapacity = imul(this.av_1.length, 2);
    var newTable = this.vu(newCapacity);
    var newBucketLengths = new Int32Array(newTable.length);
    this.av_1 = newTable;
    var tmp = this;
    tmp.dv_1 = numberToInt(newCapacity * 0.75);
    var oldSize = this.i();
    var inductionVariable = 0;
    var last = old.length;
    $l$loop: while (inductionVariable < last) {
      var bucket = old[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (bucket == null) {
        continue $l$loop;
      }
      var tmp2_iterator = arrayIterator(bucket);
      $l$loop_0: while (tmp2_iterator.g()) {
        var o = tmp2_iterator.h();
        if (o == null) {
          break $l$loop_0;
        }
        var b = this.hv(o);
        var bucketLength = newBucketLengths[b];
        var newBucket;
        if (bucketLength === 0) {
          newBucket = this.wu(this.zu_1);
          newTable[b] = newBucket;
        } else {
          newBucket = ensureNotNull(newTable[b]);
          if (bucketLength === newBucket.length) {
            newBucket = copyOf(newBucket, imul(newBucket.length, 2));
            newTable[b] = newBucket;
          }
        }
        newBucket[bucketLength] = o;
        newBucketLengths[b] = newBucketLengths[b] + 1 | 0;
      }
    }
    // Inline function 'com.strumenta.antlrkotlin.runtime.assert' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(this.bv_1 === oldSize)) {
      throw AssertionError_init_$Create$(null);
    }
  };
  protoOf(Array2DHashSet).jv = function (element) {
    var existing = this.ev(element);
    return existing === element;
  };
  protoOf(Array2DHashSet).j = function (element) {
    return this.jv((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(Array2DHashSet).i = function () {
    return this.bv_1;
  };
  protoOf(Array2DHashSet).r = function () {
    return this.bv_1 === 0;
  };
  protoOf(Array2DHashSet).kv = function (obj) {
    var tmp;
    if (obj == null) {
      tmp = false;
    } else {
      tmp = !(this.gv(obj) == null);
    }
    return tmp;
  };
  protoOf(Array2DHashSet).f = function () {
    return new SetIterator(this, this.y4());
  };
  protoOf(Array2DHashSet).y4 = function () {
    var a = this.wu(this.i());
    var i = 0;
    var indexedObject = this.av_1;
    var inductionVariable = 0;
    var last = indexedObject.length;
    $l$loop: while (inductionVariable < last) {
      var bucket = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (bucket == null) {
        continue $l$loop;
      }
      var tmp1_iterator = arrayIterator(bucket);
      $l$loop_0: while (tmp1_iterator.g()) {
        var o = tmp1_iterator.h();
        if (o == null) {
          break $l$loop_0;
        }
        var tmp2 = i;
        i = tmp2 + 1 | 0;
        a[tmp2] = o;
      }
    }
    return isArray(a) ? a : THROW_CCE();
  };
  protoOf(Array2DHashSet).lv = function (element) {
    return this.mv(this.uu(element));
  };
  protoOf(Array2DHashSet).mv = function (obj) {
    if (obj == null) {
      return false;
    }
    var b = this.hv(obj);
    var tmp0_elvis_lhs = this.av_1[b];
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var bucket = tmp;
    var inductionVariable = 0;
    var last = bucket.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp2_elvis_lhs = bucket[i];
        var tmp_0;
        if (tmp2_elvis_lhs == null) {
          return false;
        } else {
          tmp_0 = tmp2_elvis_lhs;
        }
        var e = tmp_0;
        if (this.xu_1.qv(e, obj)) {
          var tmp3 = i + 1 | 0;
          // Inline function 'kotlin.collections.copyInto' call
          var endIndex = bucket.length;
          arrayCopy(bucket, bucket, i, tmp3, endIndex);
          bucket[bucket.length - 1 | 0] = null;
          this.bv_1 = this.bv_1 - 1 | 0;
          return true;
        }
      }
       while (inductionVariable <= last);
    return false;
  };
  protoOf(Array2DHashSet).fb = function (elements) {
    if (elements instanceof Array2DHashSet) {
      var indexedObject = this.av_1;
      var inductionVariable = 0;
      var last = indexedObject.length;
      $l$loop: while (inductionVariable < last) {
        var bucket = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        if (bucket == null) {
          continue $l$loop;
        }
        var tmp1_iterator = arrayIterator(bucket);
        $l$loop_0: while (tmp1_iterator.g()) {
          var o = tmp1_iterator.h();
          if (o == null) {
            break $l$loop_0;
          }
          if (!this.kv(this.uu(o))) {
            return false;
          }
        }
      }
    } else {
      var tmp2_iterator = elements.f();
      while (tmp2_iterator.g()) {
        var o_0 = tmp2_iterator.h();
        if (!(o_0 == null) && !this.kv(this.uu(o_0))) {
          return false;
        }
      }
    }
    return true;
  };
  protoOf(Array2DHashSet).n1 = function (elements) {
    return this.fb(elements);
  };
  protoOf(Array2DHashSet).toString = function () {
    if (this.i() === 0) {
      return '{}';
    }
    var buf = StringBuilder_init_$Create$();
    buf.p7('{');
    var first = true;
    var indexedObject = this.av_1;
    var inductionVariable = 0;
    var last = indexedObject.length;
    $l$loop: while (inductionVariable < last) {
      var bucket = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (bucket == null)
        continue $l$loop;
      var tmp1_iterator = arrayIterator(bucket);
      $l$loop_0: while (tmp1_iterator.g()) {
        var o = tmp1_iterator.h();
        if (o == null) {
          break $l$loop_0;
        }
        if (first) {
          first = false;
        } else {
          buf.p7(', ');
        }
        buf.p7(toString_0(o));
      }
    }
    buf.p7('}');
    return buf.toString();
  };
  protoOf(Array2DHashSet).uu = function (o) {
    return (o == null ? true : !(o == null)) ? o : THROW_CCE();
  };
  protoOf(Array2DHashSet).vu = function (capacity) {
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp = fillArrayVal(Array(capacity), null);
    return isArray(tmp) ? tmp : THROW_CCE();
  };
  protoOf(Array2DHashSet).wu = function (capacity) {
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp = fillArrayVal(Array(capacity), null);
    return isArray(tmp) ? tmp : THROW_CCE();
  };
  function DoubleKeyMap() {
    this.w19_1 = LinkedHashMap_init_$Create$();
  }
  protoOf(DoubleKeyMap).z19 = function (k1, k2, v) {
    var data2 = this.w19_1.t1(k1);
    var prev = null;
    if (data2 == null) {
      data2 = LinkedHashMap_init_$Create$();
      var tmp0 = this.w19_1;
      // Inline function 'kotlin.collections.set' call
      var value = data2;
      tmp0.w1(k1, value);
    } else {
      prev = data2.t1(k2);
    }
    // Inline function 'kotlin.collections.set' call
    data2.w1(k2, v);
    return prev;
  };
  protoOf(DoubleKeyMap).x19 = function (k1, k2) {
    var tmp0_elvis_lhs = this.w19_1.t1(k1);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var data2 = tmp;
    return data2.t1(k2);
  };
  function createEntryListArray($this, length) {
    // Inline function 'kotlin.arrayOfNulls' call
    return fillArrayVal(Array(length), null);
  }
  function Companion_23() {
    this.s1d_1 = 16;
    this.t1d_1 = 8;
    this.u1d_1 = 0.75;
  }
  var Companion_instance_23;
  function Companion_getInstance_23() {
    return Companion_instance_23;
  }
  function Entry(key, value) {
    this.v1d_1 = key;
    this.w1d_1 = value;
  }
  protoOf(Entry).toString = function () {
    return toString_1(this.v1d_1) + ':' + toString_1(this.w1d_1);
  };
  protoOf(Entry).hashCode = function () {
    var result = this.v1d_1 == null ? 0 : hashCode(this.v1d_1);
    result = imul(result, 31) + (this.w1d_1 == null ? 0 : hashCode(this.w1d_1)) | 0;
    return result;
  };
  protoOf(Entry).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Entry))
      return false;
    var tmp0_other_with_cast = other instanceof Entry ? other : THROW_CCE();
    if (!equals(this.v1d_1, tmp0_other_with_cast.v1d_1))
      return false;
    if (!equals(this.w1d_1, tmp0_other_with_cast.w1d_1))
      return false;
    return true;
  };
  function FlexibleHashMap(comparator, initialCapacity, initialBucketCapacity) {
    comparator = comparator === VOID ? Companion_getInstance_27().w13_1 : comparator;
    initialCapacity = initialCapacity === VOID ? 16 : initialCapacity;
    initialBucketCapacity = initialBucketCapacity === VOID ? 8 : initialBucketCapacity;
    this.e1a_1 = comparator;
    this.f1a_1 = initialCapacity;
    this.g1a_1 = initialBucketCapacity;
    this.i1a_1 = 0;
    this.j1a_1 = 1;
    this.k1a_1 = 0;
    this.h1a_1 = createEntryListArray(Companion_instance_23, this.g1a_1);
    var tmp = this;
    // Inline function 'kotlin.math.floor' call
    var x = this.f1a_1 * 0.75;
    var tmp$ret$0 = Math.floor(x);
    tmp.k1a_1 = numberToInt(tmp$ret$0);
  }
  protoOf(FlexibleHashMap).i = function () {
    return this.i1a_1;
  };
  protoOf(FlexibleHashMap).u1 = function () {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(FlexibleHashMap).v1 = function () {
    var a = ArrayList_init_$Create$(this.i());
    var indexedObject = this.h1a_1;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var bucket = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (!(bucket == null)) {
        var tmp1_iterator = bucket.f();
        while (tmp1_iterator.g()) {
          var entry = tmp1_iterator.h();
          a.j(ensureNotNull(entry).w1d_1);
        }
      }
    }
    return a;
  };
  protoOf(FlexibleHashMap).l = function () {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(FlexibleHashMap).t1 = function (key) {
    if (key == null) {
      return null;
    }
    var b = this.l1a(key);
    var tmp0_elvis_lhs = this.h1a_1[b];
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var bucket = tmp;
    var tmp1_iterator = bucket.f();
    while (tmp1_iterator.g()) {
      var e = tmp1_iterator.h();
      if (this.e1a_1.qv(e == null ? null : e.v1d_1, key)) {
        return e == null ? null : e.w1d_1;
      }
    }
    return null;
  };
  protoOf(FlexibleHashMap).w1 = function (key, value) {
    if (key == null) {
      return null;
    }
    if (this.i1a_1 > this.k1a_1) {
      this.iv();
    }
    var b = this.l1a(key);
    var existingBucket = this.h1a_1[b];
    var tmp;
    if (!(existingBucket == null)) {
      tmp = existingBucket;
    } else {
      var list = ArrayList_init_$Create$_0();
      this.h1a_1[b] = list;
      tmp = list;
    }
    var bucket = tmp;
    var tmp0_iterator = bucket.f();
    while (tmp0_iterator.g()) {
      var e = tmp0_iterator.h();
      if (this.e1a_1.qv(e == null ? null : e.v1d_1, key)) {
        var prev = e == null ? null : e.w1d_1;
        if (e != null)
          e.w1d_1 = value;
        this.i1a_1 = this.i1a_1 + 1 | 0;
        return prev;
      }
    }
    bucket.j(new Entry(key, value));
    this.i1a_1 = this.i1a_1 + 1 | 0;
    return null;
  };
  protoOf(FlexibleHashMap).x1 = function (key) {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(FlexibleHashMap).r1 = function (key) {
    return !(this.t1(key) == null);
  };
  protoOf(FlexibleHashMap).s1 = function (value) {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(FlexibleHashMap).hashCode = function () {
    var hash = MurmurHash_instance.h15();
    var indexedObject = this.h1a_1;
    var inductionVariable = 0;
    var last = indexedObject.length;
    $l$loop: while (inductionVariable < last) {
      var bucket = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (bucket == null) {
        continue $l$loop;
      }
      var tmp1_iterator = bucket.f();
      $l$loop_0: while (tmp1_iterator.g()) {
        var e = tmp1_iterator.h();
        if (e == null) {
          break $l$loop_0;
        }
        hash = MurmurHash_instance.ju(hash, this.e1a_1.ov(e.v1d_1));
      }
    }
    hash = MurmurHash_instance.lu(hash, this.i());
    return hash;
  };
  protoOf(FlexibleHashMap).equals = function (other) {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(FlexibleHashMap).l1a = function (key) {
    var hash = this.e1a_1.ov(key);
    return hash & (this.h1a_1.length - 1 | 0);
  };
  protoOf(FlexibleHashMap).iv = function () {
    var old = this.h1a_1;
    this.j1a_1 = this.j1a_1 + 4 | 0;
    var newCapacity = imul(this.h1a_1.length, 2);
    var newTable = createEntryListArray(Companion_instance_23, newCapacity);
    this.h1a_1 = newTable;
    var tmp = this;
    tmp.k1a_1 = numberToInt(newCapacity * 0.75);
    var oldSize = this.i();
    var inductionVariable = 0;
    var last = old.length;
    $l$loop: while (inductionVariable < last) {
      var bucket = old[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (bucket == null) {
        continue $l$loop;
      }
      var tmp2_iterator = bucket.f();
      $l$loop_0: while (tmp2_iterator.g()) {
        var e = tmp2_iterator.h();
        if (e == null) {
          break $l$loop_0;
        }
        this.w1(e.v1d_1, e.w1d_1);
      }
    }
    this.i1a_1 = oldSize;
  };
  protoOf(FlexibleHashMap).r = function () {
    return this.i1a_1 === 0;
  };
  protoOf(FlexibleHashMap).toString = function () {
    if (this.i() === 0) {
      return '{}';
    }
    var first = true;
    var buf = StringBuilder_init_$Create$();
    buf.p7('{');
    var indexedObject = this.h1a_1;
    var inductionVariable = 0;
    var last = indexedObject.length;
    $l$loop: while (inductionVariable < last) {
      var bucket = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (bucket == null) {
        continue $l$loop;
      }
      var tmp1_iterator = bucket.f();
      $l$loop_0: while (tmp1_iterator.g()) {
        var e = tmp1_iterator.h();
        if (e == null) {
          break $l$loop_0;
        }
        if (first) {
          first = false;
        } else {
          buf.p7(', ');
        }
        buf.p7(e.toString());
      }
    }
    buf.p7('}');
    return buf.toString();
  };
  function Companion_24() {
    Companion_instance_24 = this;
    this.x1d_1 = new Int32Array(0);
    this.y1d_1 = 4;
    this.z1d_1 = 2147483639;
  }
  var Companion_instance_24;
  function Companion_getInstance_24() {
    if (Companion_instance_24 == null)
      new Companion_24();
    return Companion_instance_24;
  }
  function IntegerList_init_$Init$($this) {
    IntegerList.call($this);
    $this.ip_1 = Companion_getInstance_24().x1d_1;
    return $this;
  }
  function IntegerList_init_$Create$() {
    return IntegerList_init_$Init$(objectCreate(protoOf(IntegerList)));
  }
  function ensureCapacity($this, capacity) {
    if (capacity < 0 || capacity > 2147483639) {
      throw RuntimeException_init_$Create$();
    }
    var tmp;
    // Inline function 'kotlin.collections.isEmpty' call
    if ($this.ip_1.length === 0) {
      tmp = 4;
    } else {
      tmp = $this.ip_1.length;
    }
    var newLength = tmp;
    while (newLength < capacity) {
      newLength = imul(newLength, 2);
      if (newLength < 0 || newLength > 2147483639) {
        newLength = 2147483639;
      }
    }
    $this.ip_1 = copyOf_0($this.ip_1, newLength);
  }
  protoOf(IntegerList).kp = function () {
    return this.jp_1 === 0;
  };
  protoOf(IntegerList).zj = function (value) {
    if (this.ip_1.length === this.jp_1) {
      ensureCapacity(this, this.jp_1 + 1 | 0);
    }
    this.ip_1[this.jp_1] = value;
    this.jp_1 = this.jp_1 + 1 | 0;
  };
  protoOf(IntegerList).o1 = function (index) {
    if (index < 0 || index >= this.jp_1) {
      throw IndexOutOfBoundsException_init_$Create$_0();
    }
    return this.ip_1[index];
  };
  protoOf(IntegerList).p3 = function (index) {
    var value = this.o1(index);
    var inductionVariable = 0;
    var last = (this.jp_1 - index | 0) - 1 | 0;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.ip_1[index + i | 0] = this.ip_1[(index + i | 0) + 1 | 0];
      }
       while (inductionVariable < last);
    this.ip_1[this.jp_1 - 1 | 0] = 0;
    this.jp_1 = this.jp_1 - 1 | 0;
    return value;
  };
  protoOf(IntegerList).gg = function () {
    return this.jp_1;
  };
  protoOf(IntegerList).jq = function () {
    fill(this.ip_1, 0);
    this.jp_1 = 0;
  };
  protoOf(IntegerList).y4 = function () {
    var tmp;
    if (this.jp_1 === 0) {
      tmp = Companion_getInstance_24().x1d_1;
    } else {
      // Inline function 'kotlin.collections.copyOf' call
      // Inline function 'kotlin.js.asDynamic' call
      tmp = this.ip_1.slice();
    }
    return tmp;
  };
  protoOf(IntegerList).equals = function (other) {
    if (other === this) {
      return true;
    }
    var tmp;
    if (!(other instanceof IntegerList)) {
      tmp = true;
    } else {
      tmp = !(this.jp_1 === other.jp_1);
    }
    if (tmp) {
      return false;
    }
    var inductionVariable = 0;
    var last = this.jp_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!(this.ip_1[i] === other.ip_1[i])) {
          return false;
        }
      }
       while (inductionVariable < last);
    return true;
  };
  protoOf(IntegerList).hashCode = function () {
    var hashCode = 1;
    var inductionVariable = 0;
    var last = this.jp_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        hashCode = imul(31, hashCode) + this.ip_1[i] | 0;
      }
       while (inductionVariable < last);
    return hashCode;
  };
  protoOf(IntegerList).toString = function () {
    return joinToString_0(this.y4());
  };
  function IntegerList() {
    Companion_getInstance_24();
    this.jp_1 = 0;
  }
  function IntegerStack_init_$Init$($this) {
    IntegerList_init_$Init$($this);
    IntegerStack.call($this);
    return $this;
  }
  function IntegerStack_init_$Create$() {
    return IntegerStack_init_$Init$(objectCreate(protoOf(IntegerStack)));
  }
  protoOf(IntegerStack).gp = function (value) {
    return this.zj(value);
  };
  protoOf(IntegerStack).mp = function () {
    return this.p3(this.gg() - 1 | 0);
  };
  protoOf(IntegerStack).lp = function () {
    return this.o1(this.gg() - 1 | 0);
  };
  function IntegerStack() {
  }
  function Companion_25() {
    Companion_instance_25 = this;
    this.ah_1 = 1000;
    this.bh_1 = new Interval(-1, -2);
    var tmp = this;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp.ch_1 = fillArrayVal(Array(1001), null);
  }
  protoOf(Companion_25).dh = function (a, b) {
    if (!(a === b) || a < 0 || a > 1000) {
      return new Interval(a, b);
    }
    var interval = this.ch_1[a];
    if (interval == null) {
      interval = new Interval(a, a);
      this.ch_1[a] = interval;
    }
    return interval;
  };
  var Companion_instance_25;
  function Companion_getInstance_25() {
    if (Companion_instance_25 == null)
      new Companion_25();
    return Companion_instance_25;
  }
  function Interval(a, b) {
    Companion_getInstance_25();
    this.vg_1 = a;
    this.wg_1 = b;
  }
  protoOf(Interval).a1e = function (other) {
    return this.vg_1 < other.vg_1 && this.wg_1 < other.vg_1;
  };
  protoOf(Interval).b1e = function (other) {
    return this.vg_1 > other.wg_1;
  };
  protoOf(Interval).c1e = function (other) {
    return this.a1e(other) || this.b1e(other);
  };
  protoOf(Interval).d1e = function (other) {
    return this.vg_1 === (other.wg_1 + 1 | 0) || this.wg_1 === (other.vg_1 - 1 | 0);
  };
  protoOf(Interval).e1e = function (other) {
    var tmp = Companion_getInstance_25();
    var tmp0 = this.vg_1;
    // Inline function 'kotlin.math.min' call
    var b = other.vg_1;
    var tmp_0 = Math.min(tmp0, b);
    var tmp2 = this.wg_1;
    // Inline function 'kotlin.math.max' call
    var b_0 = other.wg_1;
    var tmp$ret$1 = Math.max(tmp2, b_0);
    return tmp.dh(tmp_0, tmp$ret$1);
  };
  protoOf(Interval).equals = function (other) {
    var tmp;
    var tmp_0;
    if (other instanceof Interval) {
      tmp_0 = this.vg_1 === other.vg_1;
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = this.wg_1 === other.wg_1;
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(Interval).hashCode = function () {
    var hash = 23;
    hash = imul(hash, 31) + this.vg_1 | 0;
    hash = imul(hash, 31) + this.wg_1 | 0;
    return hash;
  };
  protoOf(Interval).toString = function () {
    return '' + this.vg_1 + '..' + this.wg_1;
  };
  function Companion_26() {
    Companion_instance_26 = this;
    var tmp = this;
    // Inline function 'kotlin.also' call
    var this_0 = this.dh(0, 1114111);
    // Inline function 'org.antlr.v4.kotlinruntime.misc.Companion.COMPLETE_CHAR_SET.<anonymous>' call
    this_0.kt(true);
    tmp.b12_1 = this_0;
    var tmp_0 = this;
    // Inline function 'kotlin.also' call
    var this_1 = IntervalSet_init_$Create$();
    // Inline function 'org.antlr.v4.kotlinruntime.misc.Companion.EMPTY_SET.<anonymous>' call
    this_1.kt(true);
    tmp_0.c12_1 = this_1;
  }
  protoOf(Companion_26).d12 = function (a) {
    var s = IntervalSet_init_$Create$();
    s.zj(a);
    return s;
  };
  protoOf(Companion_26).dh = function (a, b) {
    var s = IntervalSet_init_$Create$();
    s.vw(a, b);
    return s;
  };
  protoOf(Companion_26).f1e = function (left, right) {
    if (left.gm()) {
      return IntervalSet_init_$Create$();
    }
    var result = IntervalSet_init_$Create$_0(left);
    if (right.gm()) {
      return result;
    }
    var resultI = 0;
    var rightI = 0;
    $l$loop_4: while (resultI < result.xj_1.i() && rightI < right.xj_1.i()) {
      var resultInterval = result.xj_1.o1(resultI);
      var rightInterval = right.xj_1.o1(rightI);
      if (rightInterval.wg_1 < resultInterval.vg_1) {
        rightI = rightI + 1 | 0;
        continue $l$loop_4;
      }
      if (rightInterval.vg_1 > resultInterval.wg_1) {
        resultI = resultI + 1 | 0;
        continue $l$loop_4;
      }
      var beforeCurrent = null;
      var afterCurrent = null;
      if (rightInterval.vg_1 > resultInterval.vg_1) {
        beforeCurrent = new Interval(resultInterval.vg_1, rightInterval.vg_1 - 1 | 0);
      }
      if (rightInterval.wg_1 < resultInterval.wg_1) {
        afterCurrent = new Interval(rightInterval.wg_1 + 1 | 0, resultInterval.wg_1);
      }
      if (!(beforeCurrent == null)) {
        if (!(afterCurrent == null)) {
          result.xj_1.h3(resultI, beforeCurrent);
          result.xj_1.y3(resultI + 1 | 0, afterCurrent);
          resultI = resultI + 1 | 0;
          rightI = rightI + 1 | 0;
          continue $l$loop_4;
        } else {
          result.xj_1.h3(resultI, beforeCurrent);
          resultI = resultI + 1 | 0;
          continue $l$loop_4;
        }
      } else {
        if (!(afterCurrent == null)) {
          result.xj_1.h3(resultI, afterCurrent);
          rightI = rightI + 1 | 0;
          continue $l$loop_4;
        } else {
          result.xj_1.p3(resultI);
          continue $l$loop_4;
        }
      }
    }
    return result;
  };
  var Companion_instance_26;
  function Companion_getInstance_26() {
    if (Companion_instance_26 == null)
      new Companion_26();
    return Companion_instance_26;
  }
  function IntervalSet_init_$Init$($this) {
    IntervalSet.call($this);
    $this.xj_1 = ArrayList_init_$Create$(16);
    return $this;
  }
  function IntervalSet_init_$Create$() {
    return IntervalSet_init_$Init$(objectCreate(protoOf(IntervalSet)));
  }
  function IntervalSet_init_$Init$_0(set, $this) {
    IntervalSet.call($this);
    $this.xj_1 = ArrayList_init_$Create$(set.xj_1.i());
    $this.rm(set);
    return $this;
  }
  function IntervalSet_init_$Create$_0(set) {
    return IntervalSet_init_$Init$_0(set, objectCreate(protoOf(IntervalSet)));
  }
  function add($this, addition) {
    if ($this.yj_1) {
      throw IllegalStateException_init_$Create$("can't alter readonly IntervalSet");
    }
    if (addition.wg_1 < addition.vg_1) {
      return Unit_instance;
    }
    var iter = $this.xj_1.d4();
    while (iter.g()) {
      var r = iter.h();
      if (addition.equals(r)) {
        return Unit_instance;
      }
      if (addition.d1e(r) || !addition.c1e(r)) {
        var bigger = addition.e1e(r);
        iter.b4(bigger);
        $l$loop: while (iter.g()) {
          var next = iter.h();
          if (!bigger.d1e(next) && bigger.c1e(next)) {
            break $l$loop;
          }
          iter.n3();
          iter.w3();
          iter.b4(bigger.e1e(next));
          iter.h();
        }
        return Unit_instance;
      }
      if (addition.a1e(r)) {
        iter.w3();
        iter.z3(addition);
        return Unit_instance;
      }
    }
    $this.xj_1.j(addition);
  }
  function elementName($this, vocabulary, a) {
    switch (a) {
      case -1:
        return '<EOF>';
      case -2:
        return '<EPSILON>';
      default:
        return vocabulary.ei(a);
    }
  }
  protoOf(IntervalSet).gm = function () {
    return this.xj_1.i() === 0;
  };
  protoOf(IntervalSet).fm = function () {
    if (this.gm()) {
      throw RuntimeException_init_$Create$_0('set is empty');
    }
    return this.xj_1.o1(0).vg_1;
  };
  protoOf(IntervalSet).kt = function (value) {
    if (this.yj_1 && !value) {
      throw IllegalStateException_init_$Create$("can't alter readonly IntervalSet");
    }
    this.yj_1 = value;
  };
  protoOf(IntervalSet).zj = function (el) {
    return this.vw(el, el);
  };
  protoOf(IntervalSet).vw = function (a, b) {
    return add(this, Companion_getInstance_25().dh(a, b));
  };
  protoOf(IntervalSet).rm = function (set) {
    if (set instanceof IntervalSet) {
      var setIntervals = set.xj_1;
      var inductionVariable = 0;
      var last = setIntervals.i();
      if (inductionVariable < last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var I = setIntervals.o1(i);
          this.vw(I.vg_1, I.wg_1);
        }
         while (inductionVariable < last);
    } else {
      var tmp1_iterator = set.g1e().f();
      while (tmp1_iterator.g()) {
        var value = tmp1_iterator.h();
        this.zj(value);
      }
    }
    return this;
  };
  protoOf(IntervalSet).m13 = function (elements) {
    if (elements.gm()) {
      return IntervalSet_init_$Create$();
    }
    var tmp;
    if (elements instanceof IntervalSet) {
      tmp = elements;
    } else {
      var temp = IntervalSet_init_$Create$();
      temp.rm(elements);
      tmp = temp;
    }
    var vocabularyIS = tmp;
    return vocabularyIS.h1e(this);
  };
  protoOf(IntervalSet).h1e = function (a) {
    if (a.gm()) {
      return IntervalSet_init_$Create$_0(this);
    }
    if (a instanceof IntervalSet) {
      return Companion_getInstance_26().f1e(this, a);
    }
    var other = IntervalSet_init_$Create$();
    other.rm(a);
    return Companion_getInstance_26().f1e(this, other);
  };
  protoOf(IntervalSet).dl = function (a) {
    var o = IntervalSet_init_$Create$();
    o.rm(this);
    o.rm(a);
    return o;
  };
  protoOf(IntervalSet).oc = function (el) {
    var n = this.xj_1.i();
    var l = 0;
    var r = n - 1 | 0;
    while (l <= r) {
      var m = (l + r | 0) / 2 | 0;
      var I = this.xj_1.o1(m);
      var a = I.vg_1;
      var b = I.wg_1;
      if (b < el) {
        l = m + 1 | 0;
      } else if (a > el) {
        r = m - 1 | 0;
      } else {
        return true;
      }
    }
    return false;
  };
  protoOf(IntervalSet).hashCode = function () {
    var hash = MurmurHash_instance.h15();
    var tmp0_iterator = this.xj_1.f();
    while (tmp0_iterator.g()) {
      var I = tmp0_iterator.h();
      hash = MurmurHash_instance.ju(hash, I.vg_1);
      hash = MurmurHash_instance.ju(hash, I.wg_1);
    }
    hash = MurmurHash_instance.lu(hash, imul(this.xj_1.i(), 2));
    return hash;
  };
  protoOf(IntervalSet).equals = function (other) {
    var tmp;
    if (other instanceof IntervalSet) {
      tmp = equals(this.xj_1, other.xj_1);
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(IntervalSet).toString = function () {
    return this.i1e(false);
  };
  protoOf(IntervalSet).i1e = function (elemAreChar) {
    if (this.xj_1.r()) {
      return '{}';
    }
    var buf = StringBuilder_init_$Create$_0(64);
    if (this.gg() > 1) {
      buf.p7('{');
    }
    var n = this.xj_1.i();
    var index = 0;
    while (index < n) {
      var tmp0 = index;
      index = tmp0 + 1 | 0;
      var I = this.xj_1.o1(tmp0);
      var a = I.vg_1;
      var b = I.wg_1;
      if (a === b) {
        if (a === -1) {
          buf.p7('<EOF>');
        } else if (elemAreChar) {
          buf.p7("'");
          appendCodePoint(buf, a);
          buf.p7("'");
        } else {
          buf.la(a);
        }
      } else {
        if (elemAreChar) {
          buf.p7("'");
          appendCodePoint(buf, a);
          buf.p7("'..'");
          appendCodePoint(buf, b);
          buf.p7("'");
        } else {
          buf.la(a);
          buf.p7('..');
          buf.la(b);
        }
      }
      if (index < n) {
        buf.p7(', ');
      }
    }
    if (this.gg() > 1) {
      buf.p7('}');
    }
    return buf.toString();
  };
  protoOf(IntervalSet).nl = function (vocabulary) {
    if (this.xj_1.r()) {
      return '{}';
    }
    var buf = StringBuilder_init_$Create$_0(64);
    if (this.gg() > 1) {
      buf.p7('{');
    }
    var n = this.xj_1.i();
    var index = 0;
    while (index < n) {
      var tmp0 = index;
      index = tmp0 + 1 | 0;
      var I = this.xj_1.o1(tmp0);
      var a = I.vg_1;
      var b = I.wg_1;
      if (a === b) {
        buf.p7(elementName(this, vocabulary, a));
      } else {
        var inductionVariable = a;
        if (inductionVariable <= b)
          do {
            var p = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            if (p > a) {
              buf.p7(', ');
            }
            buf.p7(elementName(this, vocabulary, p));
          }
           while (!(p === b));
      }
      if (index < n) {
        buf.p7(', ');
      }
    }
    if (this.gg() > 1) {
      buf.p7('}');
    }
    return buf.toString();
  };
  protoOf(IntervalSet).gg = function () {
    var numIntervals = this.xj_1.i();
    if (numIntervals === 1) {
      var firstInterval = this.xj_1.o1(0);
      return (firstInterval.wg_1 - firstInterval.vg_1 | 0) + 1 | 0;
    }
    var n = 0;
    var inductionVariable = 0;
    if (inductionVariable < numIntervals)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var I = this.xj_1.o1(i);
        n = n + ((I.wg_1 - I.vg_1 | 0) + 1 | 0) | 0;
      }
       while (inductionVariable < numIntervals);
    return n;
  };
  protoOf(IntervalSet).g1e = function () {
    var values = ArrayList_init_$Create$(32);
    var n = this.xj_1.i();
    var inductionVariable = 0;
    if (inductionVariable < n)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var I = this.xj_1.o1(i);
        var a = I.vg_1;
        var b = I.wg_1;
        var inductionVariable_0 = a;
        if (inductionVariable_0 <= b)
          do {
            var v = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            values.j(v);
          }
           while (!(v === b));
      }
       while (inductionVariable < n);
    return values;
  };
  protoOf(IntervalSet).tm = function (el) {
    if (this.yj_1) {
      throw IllegalStateException_init_$Create$("can't alter readonly IntervalSet");
    }
    var n = this.xj_1.i();
    var inductionVariable = 0;
    if (inductionVariable < n)
      $l$loop_2: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var I = this.xj_1.o1(i);
        var a = I.vg_1;
        var b = I.wg_1;
        if (el < a) {
          break $l$loop_2;
        }
        if (el === a && el === b) {
          this.xj_1.p3(i);
          break $l$loop_2;
        }
        if (el === a) {
          I.vg_1 = I.vg_1 + 1 | 0;
          break $l$loop_2;
        }
        if (el === b) {
          I.wg_1 = I.wg_1 - 1 | 0;
          break $l$loop_2;
        }
        if (el < b) {
          var oldB = I.wg_1;
          I.wg_1 = el - 1 | 0;
          this.vw(el + 1 | 0, oldB);
        }
      }
       while (inductionVariable < n);
  };
  function IntervalSet() {
    Companion_getInstance_26();
    this.yj_1 = false;
  }
  function MurmurHash() {
    this.hu_1 = 0;
  }
  protoOf(MurmurHash).iu = function (seed) {
    return seed;
  };
  protoOf(MurmurHash).h15 = function (seed, $super) {
    seed = seed === VOID ? 0 : seed;
    return $super === VOID ? this.iu(seed) : $super.iu.call(this, seed);
  };
  protoOf(MurmurHash).ju = function (hash, value) {
    var tempHash = hash;
    var c1 = -862048943;
    var c2 = 461845907;
    var r1 = 15;
    var r2 = 13;
    var m = 5;
    var n = -430675100;
    var k = value;
    k = imul(k, c1);
    k = k << r1 | (k >>> (32 - r1 | 0) | 0);
    k = imul(k, c2);
    tempHash = tempHash ^ k;
    tempHash = tempHash << r2 | (tempHash >>> (32 - r2 | 0) | 0);
    tempHash = imul(tempHash, m) + n | 0;
    return tempHash;
  };
  protoOf(MurmurHash).ku = function (hash, value) {
    var tmp1_elvis_lhs = value == null ? null : hashCode(value);
    return this.ju(hash, tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs);
  };
  protoOf(MurmurHash).lu = function (hash, numberOfWords) {
    var tempHash = hash;
    tempHash = tempHash ^ imul(numberOfWords, 4);
    tempHash = tempHash ^ (tempHash >>> 16 | 0);
    tempHash = imul(tempHash, -2048144789);
    tempHash = tempHash ^ (tempHash >>> 13 | 0);
    tempHash = imul(tempHash, -1028477387);
    tempHash = tempHash ^ (tempHash >>> 16 | 0);
    return tempHash;
  };
  protoOf(MurmurHash).l1b = function (data, seed) {
    var hash = this.iu(seed);
    var inductionVariable = 0;
    var last = data.length;
    while (inductionVariable < last) {
      var value = data[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      hash = this.ku(hash, value);
    }
    hash = this.lu(hash, data.length);
    return hash;
  };
  var MurmurHash_instance;
  function MurmurHash_getInstance() {
    return MurmurHash_instance;
  }
  function Companion_27() {
    Companion_instance_27 = this;
    this.w13_1 = new ObjectEqualityComparator();
  }
  var Companion_instance_27;
  function Companion_getInstance_27() {
    if (Companion_instance_27 == null)
      new Companion_27();
    return Companion_instance_27;
  }
  function ObjectEqualityComparator() {
    Companion_getInstance_27();
    AbstractEqualityComparator.call(this);
  }
  protoOf(ObjectEqualityComparator).ov = function (obj) {
    var tmp1_elvis_lhs = obj == null ? null : hashCode(obj);
    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
  };
  protoOf(ObjectEqualityComparator).qv = function (a, b) {
    return a == null && b == null || equals(a, b);
  };
  function Utils() {
  }
  protoOf(Utils).dq = function (s, escapeSpaces) {
    var buf = StringBuilder_init_$Create$();
    var indexedObject = toCharArray(s);
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var c = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (c === _Char___init__impl__6a9atx(32) && escapeSpaces) {
        buf.p7('\xB7');
      } else if (c === _Char___init__impl__6a9atx(9)) {
        buf.p7('\\t');
      } else if (c === _Char___init__impl__6a9atx(10)) {
        buf.p7('\\n');
      } else if (c === _Char___init__impl__6a9atx(13)) {
        buf.p7('\\r');
      } else {
        buf.q7(c);
      }
    }
    return buf.toString();
  };
  var Utils_instance;
  function Utils_getInstance() {
    return Utils_instance;
  }
  function AbstractParseTreeVisitor() {
  }
  protoOf(AbstractParseTreeVisitor).j1e = function (tree) {
    return tree.is(this);
  };
  protoOf(AbstractParseTreeVisitor).rs = function (node) {
    var result = this.k1e();
    var n = node.es();
    var inductionVariable = 0;
    if (inductionVariable < n)
      $l$loop: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!this.l1e(node, result)) {
          break $l$loop;
        }
        var tmp1_elvis_lhs = node.hs(i);
        var tmp;
        if (tmp1_elvis_lhs == null) {
          var message = 'Check RuleNode.childCount implementations';
          throw IllegalStateException_init_$Create$(toString_0(message));
        } else {
          tmp = tmp1_elvis_lhs;
        }
        var c = tmp;
        var childResult = c.is(this);
        result = this.m1e(result, childResult);
      }
       while (inductionVariable < n);
    return result;
  };
  protoOf(AbstractParseTreeVisitor).n1e = function (node) {
    return this.k1e();
  };
  protoOf(AbstractParseTreeVisitor).o1e = function (node) {
    return this.k1e();
  };
  protoOf(AbstractParseTreeVisitor).m1e = function (aggregate, nextResult) {
    return nextResult;
  };
  protoOf(AbstractParseTreeVisitor).l1e = function (node, currentResult) {
    return true;
  };
  function ErrorNode() {
  }
  function ErrorNodeImpl(token) {
    TerminalNodeImpl.call(this, token);
  }
  protoOf(ErrorNodeImpl).is = function (visitor) {
    return visitor.o1e(this);
  };
  function TerminalNodeImpl(symbol) {
    this.t1e_1 = symbol;
    this.u1e_1 = null;
    this.v1e_1 = 0;
  }
  protoOf(TerminalNodeImpl).p1e = function () {
    return this.t1e_1;
  };
  protoOf(TerminalNodeImpl).xg = function () {
    return ensureNotNull(this.p1e().xg());
  };
  protoOf(TerminalNodeImpl).zr = function (value) {
    this.u1e_1 = value;
  };
  protoOf(TerminalNodeImpl).is = function (visitor) {
    return visitor.n1e(this);
  };
  protoOf(TerminalNodeImpl).toString = function () {
    var tmp;
    if (this.p1e().ng() === -1) {
      tmp = '<EOF>';
    } else {
      tmp = ensureNotNull(this.p1e().xg());
    }
    return tmp;
  };
  function CharStreams() {
    CharStreams_instance = this;
    AbstractCharStreams.call(this);
  }
  var CharStreams_instance;
  function CharStreams_getInstance() {
    if (CharStreams_instance == null)
      new CharStreams();
    return CharStreams_instance;
  }
  function BitSet_init_$Init$($this) {
    BitSet.call($this, 64);
    return $this;
  }
  function BitSet_init_$Create$() {
    return BitSet_init_$Init$(objectCreate(protoOf(BitSet)));
  }
  function contentEquals_1($this, one, two) {
    var lastIndexOne = lastBitSetIndex($this, one);
    var lastIndexTwo = lastBitSetIndex($this, two);
    if (!(lastIndexOne === lastIndexTwo)) {
      return false;
    }
    var inductionVariable = 0;
    if (inductionVariable <= lastIndexOne)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!(one[i] === two[i])) {
          return false;
        }
      }
       while (!(i === lastIndexOne));
    return true;
  }
  function lastBitSetIndex($this, bits) {
    var i = bits.length - 1 | 0;
    while (i > -1) {
      if (bits[i] === true) {
        return i;
      }
      i = i - 1 | 0;
    }
    return -1;
  }
  function BitSet(size) {
    var tmp = this;
    // Inline function 'com.strumenta.antlrkotlin.runtime.newArray' call
    tmp.bw_1 = Array(size);
    // Inline function 'kotlin.require' call
    if (!(size >= 0)) {
      // Inline function 'com.strumenta.antlrkotlin.runtime.BitSet.<anonymous>' call
      var message = 'The initial bitset size must be equal or greater than 0';
      throw IllegalArgumentException_init_$Create$(toString_0(message));
    }
  }
  protoOf(BitSet).cw = function (bitIndex) {
    if (bitIndex < 0) {
      throw IndexOutOfBoundsException_init_$Create$('bitIndex < 0: ' + bitIndex);
    }
    this.bw_1[bitIndex] = true;
  };
  protoOf(BitSet).l13 = function (bitIndex) {
    if (bitIndex < 0) {
      throw IndexOutOfBoundsException_init_$Create$('bitIndex < 0: ' + bitIndex);
    }
    delete(this.bw_1[bitIndex]);
  };
  protoOf(BitSet).o1 = function (bitIndex) {
    if (bitIndex < 0) {
      throw IndexOutOfBoundsException_init_$Create$('bitIndex < 0: ' + bitIndex);
    }
    if (bitIndex >= this.bw_1.length) {
      return false;
    }
    return this.bw_1[bitIndex] === true;
  };
  protoOf(BitSet).m17 = function () {
    var c = 0;
    var inductionVariable = 0;
    var last = this.bw_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (this.bw_1[i] === true) {
          c = c + 1 | 0;
        }
      }
       while (inductionVariable <= last);
    return c;
  };
  protoOf(BitSet).l17 = function (startIndex) {
    if (startIndex < 0) {
      throw IndexOutOfBoundsException_init_$Create$('fromIndex < 0: ' + startIndex);
    }
    if (startIndex >= this.bw_1.length) {
      return -1;
    }
    var inductionVariable = startIndex;
    var last = this.bw_1.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (this.bw_1[i] === true) {
          return i;
        }
      }
       while (inductionVariable < last);
    return -1;
  };
  protoOf(BitSet).p1a = function (another) {
    var inductionVariable = 0;
    var last = another.bw_1.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var result = this.bw_1[i] === true || another.bw_1[i] === true;
        if (result) {
          this.bw_1[i] = true;
        }
      }
       while (inductionVariable < last);
  };
  protoOf(BitSet).equals = function (other) {
    var tmp;
    if (this === other) {
      tmp = true;
    } else {
      var tmp_0;
      if (other instanceof BitSet) {
        tmp_0 = contentEquals_1(this, this.bw_1, other.bw_1);
      } else {
        tmp_0 = false;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  protoOf(BitSet).hashCode = function () {
    var fqn = 'com.strumenta.antlrkotlin.runtime.BitSet';
    var hashCode = MurmurHash_instance.iu(getStringHashCode(fqn));
    var on = 0;
    var inductionVariable = 0;
    var last = this.bw_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (this.bw_1[i] === true) {
          hashCode = MurmurHash_instance.ju(hashCode, i);
          on = on + 1 | 0;
        }
      }
       while (inductionVariable <= last);
    return MurmurHash_instance.lu(hashCode, on);
  };
  protoOf(BitSet).toString = function () {
    var sb = StringBuilder_init_$Create$();
    var first = true;
    sb.p7('{');
    var index = this.l17(0);
    while (!(index === -1)) {
      if (!first) {
        sb.p7(', ');
      } else {
        first = false;
      }
      sb.la(index);
      index = this.l17(index + 1 | 0);
    }
    sb.p7('}');
    return sb.toString();
  };
  function platformGetEnv(name) {
    if (isNodeJs()) {
      // Inline function 'kotlin.js.unsafeCast' call
      return process.env[name];
    }
    System_getInstance().mf_1.lf('Environment variables are not supported in the browser');
    return null;
  }
  function remove($this, key, value) {
    // Inline function 'com.strumenta.antlrkotlin.runtime.undefinedToNull' call
    var k = key === undefined ? null : key;
    if ($this.w1e_1.has(k)) {
      if ($this.w1e_1.get(k) === value) {
        return $this.w1e_1.delete(k);
      }
    }
    return false;
  }
  function IdentityEntry($outer, key, value) {
    this.z1e_1 = $outer;
    this.x1e_1 = key;
    this.y1e_1 = value;
  }
  protoOf(IdentityEntry).p1 = function () {
    return this.x1e_1;
  };
  protoOf(IdentityEntry).q1 = function () {
    return this.y1e_1;
  };
  function IdentityEntriesView$iterator$1($iterator, this$0) {
    this.b1f_1 = $iterator;
    this.c1f_1 = this$0;
    this.a1f_1 = null;
  }
  protoOf(IdentityEntriesView$iterator$1).g = function () {
    return this.b1f_1.g();
  };
  protoOf(IdentityEntriesView$iterator$1).h = function () {
    var tmp0_container = this.b1f_1.h();
    // Inline function 'js.array.JsTuple1.component1' call
    // Inline function 'kotlin.js.asDynamic' call
    var key = tmp0_container[0];
    // Inline function 'js.array.JsTuple2.component2' call
    // Inline function 'kotlin.js.asDynamic' call
    var value = tmp0_container[1];
    var entry = new IdentityEntry(this.c1f_1, key, value);
    this.a1f_1 = entry;
    return entry;
  };
  protoOf(IdentityEntriesView$iterator$1).n3 = function () {
    // Inline function 'kotlin.checkNotNull' call
    var tmp0 = this.a1f_1;
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.checkNotNull' call
      if (tmp0 == null) {
        // Inline function 'kotlin.checkNotNull.<anonymous>' call
        var message = 'Required value was null.';
        throw IllegalStateException_init_$Create$(toString_0(message));
      } else {
        tmp$ret$1 = tmp0;
        break $l$block;
      }
    }
    var lastEntry = tmp$ret$1;
    remove(this.c1f_1, lastEntry.x1e_1, lastEntry.y1e_1);
  };
  function IdentityEntriesView(jsMap) {
    AbstractMutableSet.call(this);
    this.w1e_1 = jsMap;
  }
  protoOf(IdentityEntriesView).i = function () {
    return this.w1e_1.size;
  };
  protoOf(IdentityEntriesView).r = function () {
    return this.w1e_1.size === 0;
  };
  protoOf(IdentityEntriesView).d1f = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Adding is not supported on entries');
  };
  protoOf(IdentityEntriesView).j = function (element) {
    return this.d1f((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  protoOf(IdentityEntriesView).e1f = function (element) {
    // Inline function 'com.strumenta.antlrkotlin.runtime.undefinedToNull' call
    var value = element.p1();
    var k = value === undefined ? null : value;
    return this.w1e_1.has(k) && this.w1e_1.get(k) === element.q1();
  };
  protoOf(IdentityEntriesView).m1 = function (element) {
    if (!(!(element == null) ? isInterface(element, MutableEntry) : false))
      return false;
    return this.e1f((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  protoOf(IdentityEntriesView).f = function () {
    // Inline function 'js.iterable.JsIterable.iterator' call
    var this_0 = this.w1e_1;
    var iterator = iteratorFor(this_0);
    return new IdentityEntriesView$iterator$1(iterator, this);
  };
  function IdentityHashMap() {
    this.f1f_1 = new Map();
  }
  protoOf(IdentityHashMap).i = function () {
    return this.f1f_1.size;
  };
  protoOf(IdentityHashMap).u1 = function () {
    return new IdentityKeysView(this);
  };
  protoOf(IdentityHashMap).v1 = function () {
    return new IdentityValuesView(this);
  };
  protoOf(IdentityHashMap).l = function () {
    return new IdentityEntriesView(this.f1f_1);
  };
  protoOf(IdentityHashMap).r = function () {
    return this.f1f_1.size === 0;
  };
  protoOf(IdentityHashMap).t1 = function (key) {
    // Inline function 'com.strumenta.antlrkotlin.runtime.undefinedToNull' call
    var k = key === undefined ? null : key;
    // Inline function 'com.strumenta.antlrkotlin.runtime.undefinedToNull' call
    var value = this.f1f_1.get(k);
    return value === undefined ? null : value;
  };
  protoOf(IdentityHashMap).w1 = function (key, value) {
    // Inline function 'com.strumenta.antlrkotlin.runtime.undefinedToNull' call
    var k = key === undefined ? null : key;
    var previousValue = this.f1f_1.get(k);
    this.f1f_1.set(k, value);
    // Inline function 'com.strumenta.antlrkotlin.runtime.undefinedToNull' call
    return previousValue === undefined ? null : previousValue;
  };
  protoOf(IdentityHashMap).x1 = function (key) {
    // Inline function 'com.strumenta.antlrkotlin.runtime.undefinedToNull' call
    var k = key === undefined ? null : key;
    var removedValue = this.f1f_1.get(k);
    this.f1f_1.delete(k);
    // Inline function 'com.strumenta.antlrkotlin.runtime.undefinedToNull' call
    return removedValue === undefined ? null : removedValue;
  };
  protoOf(IdentityHashMap).r1 = function (key) {
    // Inline function 'com.strumenta.antlrkotlin.runtime.undefinedToNull' call
    var k = key === undefined ? null : key;
    return this.f1f_1.has(k);
  };
  protoOf(IdentityHashMap).s1 = function (value) {
    // Inline function 'js.iterable.IterableIterator.iterator' call
    var iterator = this.f1f_1.values();
    var tmp0_iterator = iteratorFor_0(iterator);
    while (tmp0_iterator.g()) {
      var v = tmp0_iterator.h();
      if (v === value) {
        return true;
      }
    }
    return false;
  };
  function IdentityKeysView$iterator$1($entriesIterator) {
    this.g1f_1 = $entriesIterator;
  }
  protoOf(IdentityKeysView$iterator$1).g = function () {
    return this.g1f_1.g();
  };
  protoOf(IdentityKeysView$iterator$1).h = function () {
    return this.g1f_1.h().p1();
  };
  protoOf(IdentityKeysView$iterator$1).n3 = function () {
    return this.g1f_1.n3();
  };
  function IdentityKeysView(map) {
    AbstractMutableSet.call(this);
    this.h1f_1 = map;
  }
  protoOf(IdentityKeysView).i = function () {
    return this.h1f_1.i();
  };
  protoOf(IdentityKeysView).r = function () {
    return this.h1f_1.r();
  };
  protoOf(IdentityKeysView).f5 = function (element) {
    return this.h1f_1.r1(element);
  };
  protoOf(IdentityKeysView).m1 = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.f5((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(IdentityKeysView).w5 = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Adding is not supported on keys');
  };
  protoOf(IdentityKeysView).j = function (element) {
    return this.w5((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(IdentityKeysView).f = function () {
    var entriesIterator = this.h1f_1.l().f();
    return new IdentityKeysView$iterator$1(entriesIterator);
  };
  function IdentityValuesView$iterator$1($entriesIterator) {
    this.i1f_1 = $entriesIterator;
  }
  protoOf(IdentityValuesView$iterator$1).g = function () {
    return this.i1f_1.g();
  };
  protoOf(IdentityValuesView$iterator$1).h = function () {
    return this.i1f_1.h().q1();
  };
  protoOf(IdentityValuesView$iterator$1).n3 = function () {
    return this.i1f_1.n3();
  };
  function IdentityValuesView(map) {
    AbstractMutableCollection.call(this);
    this.j1f_1 = map;
  }
  protoOf(IdentityValuesView).i = function () {
    return this.j1f_1.i();
  };
  protoOf(IdentityValuesView).r = function () {
    return this.j1f_1.r();
  };
  protoOf(IdentityValuesView).l5 = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Adding is not supported on values');
  };
  protoOf(IdentityValuesView).j = function (element) {
    return this.l5((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(IdentityValuesView).k5 = function (element) {
    return this.j1f_1.s1(element);
  };
  protoOf(IdentityValuesView).m1 = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.k5((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(IdentityValuesView).f = function () {
    var entriesIterator = this.j1f_1.l().f();
    return new IdentityValuesView$iterator$1(entriesIterator);
  };
  function isNodeJs() {
    return typeof process !== 'undefined' && process.versions != null && process.versions.node != null || (typeof window !== 'undefined' && typeof window.process !== 'undefined' && window.process.versions != null && window.process.versions.node != null);
  }
  //region block: post-declaration
  protoOf(FlexibleHashMap).asJsReadonlyMapView = asJsReadonlyMapView;
  protoOf(IdentityHashMap).asJsReadonlyMapView = asJsReadonlyMapView;
  //endregion
  //region block: init
  Collections_instance = new Collections();
  StdPrintStream_instance = new StdPrintStream();
  ErrPrintStream_instance = new ErrPrintStream();
  DummyTokenStream_instance = new DummyTokenStream();
  Companion_instance_2 = new Companion_2();
  Companion_instance_3 = new Companion_3();
  RuntimeMetaData_instance = new RuntimeMetaData();
  Companion_instance_7 = new Companion_7();
  Companion_instance_8 = new Companion_8();
  Companion_instance_10 = new Companion_10();
  Companion_instance_13 = new Companion_13();
  Companion_instance_14 = new Companion_14();
  Companion_instance_15 = new Companion_15();
  Companion_instance_17 = new Companion_17();
  Companion_instance_18 = new Companion_18();
  Companion_instance_19 = new Companion_19();
  Companion_instance_20 = new Companion_20();
  Companion_instance_22 = new Companion_22();
  Companion_instance_23 = new Companion_23();
  MurmurHash_instance = new MurmurHash();
  Utils_instance = new Utils();
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = ParserRuleContext_init_$Init$;
  _.$_$.b = ParserRuleContext_init_$Init$_0;
  _.$_$.c = CharStreams_getInstance;
  _.$_$.d = RuntimeMetaData_instance;
  _.$_$.e = ATNDeserializer;
  _.$_$.f = LexerATNSimulator;
  _.$_$.g = ParserATNSimulator;
  _.$_$.h = PredictionContextCache;
  _.$_$.i = DFA;
  _.$_$.j = AbstractParseTreeVisitor;
  _.$_$.k = CommonTokenStream;
  _.$_$.l = FailedPredicateException;
  _.$_$.m = Lexer;
  _.$_$.n = ParserRuleContext;
  _.$_$.o = Parser;
  _.$_$.p = RecognitionException;
  _.$_$.q = VocabularyImpl;
  //endregion
  return _;
}));

//# sourceMappingURL=antlr-kotlin-antlr-kotlin-runtime.js.map
