"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.init = exports.isPartOfGitRepo = void 0;
const path_1 = __importDefault(require("path"));
const yafs_1 = require("yafs");
const spawn_1 = require("./spawn");
const utils_1 = require("./utils");
async function isPartOfGitRepo(folder) {
    let current = folder, last = current;
    do {
        last = current;
        if (await hasGitFolder(current)) {
            return true; // require the user to select another location
        }
        current = path_1.default.dirname(current);
    } while (current !== last);
    return false;
}
exports.isPartOfGitRepo = isPartOfGitRepo;
async function init(at) {
    if (await isAlreadyInitialized(at)) {
        return;
    }
    const git = await (0, utils_1.which)("git");
    if (!git) {
        throw new Error(`Cannot initialize git in ${at}`);
    }
    try {
        await (0, utils_1.runInFolder)(at, () => (0, spawn_1.spawn)(git, ["init"]));
    }
    catch (e) {
        throw new Error(`git init fails: ${e}`);
    }
}
exports.init = init;
async function isAlreadyInitialized(at) {
    return (0, yafs_1.folderExists)(path_1.default.join(at, ".git"));
}
async function hasGitFolder(at) {
    const test = path_1.default.join(at, ".git");
    return (0, yafs_1.folderExists)(test);
}
