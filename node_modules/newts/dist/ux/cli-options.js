"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.applyDefaults = exports.generateDefaults = void 0;
const query_git_config_1 = require("./query-git-config");
const git_1 = require("../git");
let defaultOptions;
async function suggestDefaultOutput() {
    const test = process.cwd();
    return await (0, git_1.isPartOfGitRepo)(test)
        ? undefined
        : test;
}
async function generateDefaults() {
    if (defaultOptions) {
        return { ...defaultOptions };
    }
    defaultOptions = {
        name: undefined,
        description: undefined,
        output: await suggestDefaultOutput(),
        license: "BSD-3-Clause",
        "author-name": await (0, query_git_config_1.queryGitConfig)("user.name"),
        "author-email": await (0, query_git_config_1.queryGitConfig)("user.email"),
        "install-faker": true,
        "install-yargs": true,
        "install-linter": true,
        "install-node-types": true,
        "install-jest": true,
        "install-matchers": true,
        "install-zarro": true,
        "init-git": true,
        cli: false,
        "start-script": true,
        "init-readme": true,
        "build-script": true,
        "release-scripts": true,
        "test-script": true,
        "list-licenses": false,
        "interactive": false,
        defaults: false,
        "verify-name-available": true,
        "test-environment": "node"
    };
    return { ...defaultOptions };
}
exports.generateDefaults = generateDefaults;
async function applyDefaults(options) {
    const defaults = await generateDefaults();
    return Object.keys(defaults)
        .reduce((acc, cur) => {
        const k = cur;
        if (acc[k] === undefined) {
            acc[k] = defaults[k];
        }
        return acc;
    }, { ...options });
}
exports.applyDefaults = applyDefaults;
