"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.spawn = void 0;
const child_process_1 = require("child_process");
function spawn(command, args, options) {
    const spawnArgs = args || [], spawnOptions = options || {};
    return new Promise((resolve, reject) => {
        var _a, _b;
        const child = (0, child_process_1.spawn)(command, spawnArgs, spawnOptions), result = {
            stdout: [],
            stderr: [],
            code: -1
        };
        (_a = child.stderr) === null || _a === void 0 ? void 0 : _a.on("data", d => {
            result.stderr.push(d.toString());
        });
        (_b = child.stdout) === null || _b === void 0 ? void 0 : _b.on("data", d => {
            result.stdout.push(d.toString());
        });
        child.on("close", code => {
            result.code = code;
            return code
                ? reject(makeSpawnErrorFor(result, command, args, options))
                : resolve(result);
        });
    });
}
exports.spawn = spawn;
function makeSpawnErrorFor(result, command, args, options) {
    const e = new Error(`Error exit code ${result.code} for: ${command} ${(args || []).join(" ")}`);
    return {
        ...e,
        result,
        command,
        args,
        options
    };
}
